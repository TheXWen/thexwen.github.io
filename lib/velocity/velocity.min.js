<!DOCTYPE html>
<html lang='zh-CN'>
<head>
<title>themes/hexo-theme-next/source/lib/velocity/velocity.min.js · kangjian_haha/blog_project - 码云 Gitee.com</title>
<link href="https://assets.gitee.com/assets/favicon-9007bd527d8a7851c8330e783151df58.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />
<meta content='gitee.com/kangjian_haha/blog_project git https://gitee.com/kangjian_haha/blog_project.git' name='go-import'>
<meta charset='utf-8'>
<meta content='always' name='referrer'>
<meta content='码云' property='og:site_name'>
<meta content='Object' property='og:type'>
<meta content='http://gitee.com/kangjian_haha/blog_project/blob/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js' property='og:url'>
<meta content='https://gitee.com/static/images/logo_themecolor.png' itemprop='image' property='og:image'>
<meta content='themes/hexo-theme-next/source/lib/velocity/velocity.min.js · kangjian_haha/blog_project - 码云 Gitee.com' itemprop='name' property='og:title'>
<meta content='码云(gitee.com)是 OSCHINA.NET 推出的代码托管平台，支持 Git 和 SVN，提供免费的私有仓库托管。目前已有超过 500 万的开发者选择码云。' property='og:description'>
<meta content='码云,代码托管,git,Git@OSC,gitee.com,开源,内源,项目管理,版本控制,开源代码,代码分享,项目协作,开源项目托管,免费代码托管,Git代码托管,Git托管服务' name='Keywords'>
<meta content='码云(gitee.com)是 OSCHINA.NET 推出的代码托管平台，支持 Git 和 SVN，提供免费的私有仓库托管。目前已有超过 500 万的开发者选择码云。' itemprop='description' name='Description'>

<meta content="IE=edge" http-equiv="X-UA-Compatible" />
<meta content="authenticity_token" name="csrf-param" />
<meta content="pldEbCxGp4MlF8K/5I1wq80LnEGMOdcxpzLX2T74aeI=" name="csrf-token" />

<link href="https://assets.gitee.com/assets/application-9a05e3301683250121185a4f1d43b950.css" media="all" rel="stylesheet" />
<script>
//<![CDATA[
window.gon = {};gon.locale="zh-CN";gon.sentry_dsn=null;gon.baidu_register_hm_push=null;gon.info={"controller_path":"blob","action_name":"show","current_user":{"id":7370217,"name":"thexwen","username":"thexwen","official":false,"avatar_url":"https://portrait.gitee.com/uploads/avatars/user/2456/7370217_thexwen_1585201641.png"}};gon.tour_env={"current_user":"thexwen","action_name":"show","original_url":"http://gitee.com/kangjian_haha/blog_project/blob/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js","controller_path":"blob"};gon.http_clone="https://gitee.com/kangjian_haha/blog_project.git";gon.user_project="kangjian_haha/blog_project";gon.manage_branch="管理分支";gon.manage_tag="管理标签";gon.enterprise_id=0;gon.create_reaction_path="/kangjian_haha/blog_project/reactions";gon.ref="master";
//]]>
</script>
<script src="https://assets.gitee.com/assets/static/sentry-5.1.0-109ee3d8895a239331efcf947ba7f5d8.js"></script>
<script src="https://assets.gitee.com/assets/application-8866bab40ff714f601078dde952adad1.js"></script>
<script src="https://assets.gitee.com/assets/lib/jquery.timeago.zh-CN-9c36ca7c4899a28168320613879d208a.js"></script>

<link href="https://assets.gitee.com/assets/projects/application-c4d2b90e83d054a150b44a0e5a32f7c5.css" media="all" rel="stylesheet" />
<script src="https://assets.gitee.com/assets/projects/app-6de13fd09a69ffee57a5387ad0f751a5.js"></script>

<script src="//res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
<script>
  var title = document.title.replace(/( - Gitee| - 码云)$/, '')
      imgUrl = '';
  
  document.addEventListener('DOMContentLoaded', function(event) {
    var imgUrlEl = document.querySelector('.readme-box .markdown-body > img, .readme-box .markdown-body :not(a) > img');
    imgUrl = imgUrlEl && imgUrlEl.getAttribute('src');
  
    if (!imgUrl) {
      imgUrlEl = document.querySelector('meta[itemprop=image]');
      imgUrl = imgUrlEl && imgUrlEl.getAttribute('content'); 
      imgUrl = imgUrl || "https://gitee.com/static/images/logo_themecolor.png";
    }
  
    wx.config({
      debug: false,
      appId: "wxff219d611a159737",
      timestamp: "1596529741",
      nonceStr: "2ece1f25fe65445fb2e65dd5135cd6f0",
      signature: "ee405f9813e1d29c12a698e6902843fdb03e643a",
      jsApiList: [
        'onMenuShareTimeline',
        'onMenuShareAppMessage'
      ]
    });
  
    wx.ready(function () {
      wx.onMenuShareTimeline({
        title: title, // 分享标题
        link: "https://gitee.com/kangjian_haha/blog_project/blob/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js", // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
        imgUrl: imgUrl // 分享图标
      });
      wx.onMenuShareAppMessage({
        title: title, // 分享标题
        link: "https://gitee.com/kangjian_haha/blog_project/blob/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js", // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
        desc: document.querySelector('meta[name=Description]').getAttribute('content'),
        imgUrl: imgUrl // 分享图标
      });
    });
    wx.error(function(res){
      console.error('err', res)
    });
  })
</script>

<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath: [['$','$'], ['\\(','\\)']],
    displayMath: [["$$","$$"],["\\[","\\]"]],
    processEscapes: true,
    skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],
    ignoreClass: "container|files",
    processClass: "markdown-body"
  }
});
</script>
<script src="https://assets.gitee.com/uploads/resources/MathJax-2.7.2/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<script>
  (function () {
    var messages = {
      'zh-CN': {
        addResult: '增加 <b>{term}</b>',
        count: '已选择 {count}',
        maxSelections: '最多 {maxCount} 个选择',
        noResults: '未找到结果',
        serverError: '连接服务器时发生错误'
      },
      'zh-TW': {
        addResult: '增加 <b>{term}</b>',
        count: '已選擇 {count}',
        maxSelections: '最多 {maxCount} 個選擇',
        noResults: '未找到結果',
        serverError: '連接服務器時發生錯誤'
      }
    }
  
    if (messages[gon.locale]) {
      $.fn.dropdown.settings.message = messages[gon.locale]
    }
  }());
</script>

<script>
  var userAgent = navigator.userAgent;
  var isLessIE11 = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1;
  if(isLessIE11){
    var can_access = ""
    if (can_access != "true"){
      window.location.href = "/incompatible.html";
    }
  }
</script>
</head>

<body class='git-project lang-zh-CN'>
<header class='common-header fixed noborder' id='git-header-nav'>
<div class='ui container'>
<div class='ui menu header-menu'>
<div class='git-nav-expand-bar'>
<i class='iconfont icon-mode-table'></i>
</div>
<div class='gitee-nav__sidebar'>
<div class='gitee-nav__sidebar-container'>
<div class='gitee-nav__sidebar-top'>
<div class='gitee-nav__avatar-box'>
<a href="/thexwen"><img alt="7370217 thexwen 1585201641" class="ui avatar image thexwen-avatar" src="https://portrait.gitee.com/uploads/avatars/user/2456/7370217_thexwen_1585201641.png" />
</a></div>
<div class='gitee-nav__info-box'>
<a href="/thexwen">thexwen</a>
</div>
</div>
<div class='gitee-nav__sidebar-middle'>
<div class='gitee-nav__sidebar-list'>
<ul>
<li class='gitee-nav__sidebar-item'>
<a href="/thexwen"><i class='iconfont icon-ic-dashboard'></i>
<span class='gitee-nav__sidebar-name'>个人主页</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/explore"><i class='iconfont icon-ic-discover'></i>
<span class='gitee-nav__sidebar-name'>开源软件</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/enterprises"><i class='iconfont icon-ic-enterprise'></i>
<span class='gitee-nav__sidebar-name'>企业版</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/education"><i class='iconfont icon-ic-education'></i>
<span class='gitee-nav__sidebar-name'>高校版</span>
</a></li>
<li class='gitee-nav__sidebar-item split-line'></li>
<li class='gitee-nav__sidebar-item'>
<a href="/search"><i class='iconfont icon-ic-search'></i>
<span class='gitee-nav__sidebar-name'>搜索</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/help"><i class='iconfont icon-help-circle'></i>
<span class='gitee-nav__sidebar-name'>帮助中心</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/terms"><i class='iconfont icon-file'></i>
<span class='gitee-nav__sidebar-name'>使用条款</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/about_us"><i class='iconfont icon-issuepx'></i>
<span class='gitee-nav__sidebar-name'>关于我们</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a href="/profile"><i class='iconfont icon-edit'></i>
<span class='gitee-nav__sidebar-name'>设置</span>
</a></li>
<li class='gitee-nav__sidebar-item'>
<a data-method="delete" href="/logout" rel="nofollow"><i class='iconfont icon-ic-logout'></i>
<span class='gitee-nav__sidebar-name'>
退出
</span>
</a></li>
</ul>
</div>
</div>
<div class='gitee-nav__sidebar-bottom'>
<div class='gitee-nav__sidebar-close-button'>
<i class='fa fa-angle-double-left'></i>
</div>
</div>
</div>
</div>

<div class='item gitosc-logo'>
<a href="/"><img alt='码云 Gitee — 基于 Git 的代码托管和研发协作平台' class='ui inline image' height='28' src='/static/images/logo.svg?t=158106664' title='码云 Gitee — 基于 Git 的代码托管和研发协作平台' width='95'>
<img alt='码云 Gitee — 基于 Git 的代码托管和研发协作平台' class='ui inline black image' height='28' src='/static/images/logo-black.svg?t=158106664' title='码云 Gitee — 基于 Git 的代码托管和研发协作平台' width='95'>
</a></div>
<a class="item " href="/explore" title="开源软件">开源软件
</a><a class="item " href="/enterprises" title="企业版">企业版
<sup class='ui red label'>
特惠
</sup>
</a><a class="item " href="/education" title="高校版">高校版
</a><a class="item" href="https://blog.gitee.com/" id="gitee-blog" target="_blank" title="博客">博客
</a><div class='dropdown item loading ui' id='my-gitee-dropdown'>
<a href="/">我的码云</a>
<i class='dropdown icon'></i>
<div class='menu'>
<div class='header user-enterprises'>
<a class="pull-right" href="/thexwen/dashboard/enterprises" target="_blank">全部</a>
企业
<span class='count'></span>
</div>
<div class='disabled item tip user-enterprises'>
无企业
</div>
<div class='header user-groups'>
<a class="pull-right" href="/thexwen/dashboard/groups" target="_blank">全部</a>
组织
<span class='count'></span>
</div>
<div class='disabled item tip user-groups'>
无组织
</div>
<div class='header user-programs'>
项目
<span class='count'></span>
</div>
<div class='disabled item tip user-programs'>
<span class="translation_missing" title="translation missing: zh-CN.layouts.header.empty_programs">Empty Programs</span>
</div>
<div class='header user-projects'>
<a class="pull-right" href="/thexwen/projects" target="_blank">全部</a>
仓库
<span class='count'></span>
</div>
<div class='disabled item tip user-projects'>
无项目
</div>
</div>
</div>
<div class='center responsive-logo'>
<a href="/"><img alt='码云 Gitee — 基于 Git 的代码托管和研发协作平台' class='ui inline image' height='24' src='/static/images/logo.svg?t=158106664' title='码云 Gitee — 基于 Git 的代码托管和研发协作平台' width='85'>
<img alt='码云 Gitee — 基于 Git 的代码托管和研发协作平台' class='ui inline black image' height='24' src='/static/images/logo-black.svg?t=158106664' title='码云 Gitee — 基于 Git 的代码托管和研发协作平台' width='85'>
</a></div>
<div class='right menu userbar' id='git-nav-user-bar'>
<form accept-charset="UTF-8" action="/search" class="ui item" data-text-filter="搜索格式不正确" data-text-require="搜索关键字不能少于1个" id="navbar-search-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
<input id="navbar-search-type" name="type" type="hidden" />
<input id="fork_filter" name="fork_filter" type="hidden" value="on" />
<div class='ui search'>
<input class="prompt" id="navbar-search-input" name="q" placeholder="搜索项目" type="text" value="" />
</div>
</form>

<script>
  var can_search_in_repo = 1,
      repo = "VDFSak0wMVVXVE5OTWtVelRtcE9iV0UzTmpObWE3NjNm",
      reponame = "kangjian_haha/blog_project";
  
  $(function() {
    var $search = $('#navbar-search-form .ui.search');
    $search.search({
      apiSettings: {
        url: '/search/relative_project?q={query}',
        onResponse: function (res) {
          if (res && res.status === 200 && res.data) {
            var query = htmlSafe($search.search('get value'));
  
            res.data.map(function (item) {
              item.path_ns = '/' + item.path_ns;
              item.icon = 'iconfont icon-project-public';
            });
            res.data.unshift({
              name_ns: "在全站搜索 <b class='hl'>" + query +"</b> 相关项目",
              path_ns: '/search?fork_filter=on&q=' + query,
              icon: 'iconfont icon-search'
            });
            if(can_search_in_repo == 1) {
              res.data.unshift({
                name_ns: "在当前仓库搜索 <b class='hl'>" + query +"</b> 相关代码",
                path_ns: '/search?type=code&q=' + query + '&repo=' + repo + '&reponame=' + reponame,
                icon: 'iconfont icon-search'
              });
            }
            return res;
          } else {
            return { data: [] };
          }
        }
      },
      fields: {
        results: 'data',
        description: 'name_ns',
        url: 'path_ns',
        icon: 'icon'
      },
      minCharacters: 1,
      maxResults: 10,
      searchDelay: 250,
      showNoResults: false,
      transition: 'fade'
    });
  });
</script>

<div class='item ui dropdown empty' data-count-path='/notifications/unread_count' data-enable data-mark-notice-path='/notifications/mark' id='notice-dropdown'>
<a class="remind-button" href="/notifications"><i class='iconfont icon-remind'></i>
<div class='notice-count total'></div>
</a><div class='notice-dropdown-panel menu'>
<div class='notice-dropdown-panel-header'>
<div class='tab active' data-data-path='/notifications/notices?scope=referer' data-html-path='/notifications/referer' data-scope='referer'>
<div class='content'>
@ 我
<div class='notice-count referer'></div>
</div>
</div>
<div class='tab' data-data-path='/notifications/notices?scope=infos' data-html-path='/notifications/infos' data-scope='infos'>
<div class='content'>
通知
<div class='notice-count infos'></div>
</div>
</div>
<div class='tab' data-data-path='/notifications/notices?scope=messages' data-html-path='/notifications/messages' data-scope='messages'>
<div class='content'>
私信
<div class='notice-count messages'></div>
</div>
</div>
</div>
<div class='item notice-dropdown-panel-container'>
<div class='ui dimmer over active'>
<div class='ui loader'></div>
</div>
<div class='notice-list'></div>
<div class='notice-dropdown-panel-blank'>
暂没有新消息
</div>
</div>
<div class='notice-dropdown-panel-footer'>
<div class='action'>
<div class='side left'>
<a class="mark-notices" href="javascript: void(0);">当前标记为已读
</a></div>
<div class='side right'>
<a class="load-all" href="javascript: void(0);" target="_blank">查看全部
</a></div>
</div>
</div>
</div>
</div>

<div class='ui dropdown link item' id='git-nav-create'>
<i class='iconfont icon-add-thin'></i>
<div class='right menu'>
<a class="item" href="/projects/new"><i class='add square icon'></i>
新建仓库
</a><a class="item" href="/thexwen/codes/new"><i class='code icon'></i>
发布代码片段
</a><a class="item" href="/organizations/new"><i class='group icon'></i>
创建组织
</a><a class="item" href="/enterprises/new"><i class='icon iconfont icon-enterprise'></i>
开通企业版
</a><a class="item" href="/projects/import/url"><i class='github icon'></i>
从 GitHub / GitLab 导入仓库
</a></div>
</div>
<div class='ui dropdown item' id='git-nav-user'>
<img alt="7370217 thexwen 1585201641" class="ui avatar image" src="https://portrait.gitee.com/uploads/avatars/user/2456/7370217_thexwen_1585201641.png!avatar30" />
<i class='dropdown icon'></i>
<div class='right menu'>
<a class="item" href="/thexwen"><i class='iconfont icon-ic-home'></i>
个人主页
</a><a class="item" href="/profile"><div class='mayun-icon my-ic-edit my-ic-edit-dims'></div>
设置
</a><div class='divider'></div>
<a class="item" href="https://gitee.com/help" target="_blank"><div class='mayun-icon my-ic-help my-ic-help-dims'></div>
帮助
</a><div class='divider'></div>
<a class="item destroy-user-session" data-method="delete" href="/logout" rel="nofollow"><div class='mayun-icon my-ic-exit my-ic-exit-dims'></div>
退出
</a></div>
</div>
<script>
  $('.destroy-user-session').on('click', function() {
    $.cookie('access_token', null, { path: '/' });
  })
</script>

</div>
</div>
</div>
</header>
<script>
  Gitee.initNavbar()
  Gitee.initRepoRemoteWay()
</script>

<script>
  var userAgent = navigator.userAgent;
  var isLessIE11 = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1;
  if(isLessIE11){
    var can_access = ""
    if (can_access != "true"){
      window.location.href = "/incompatible.html";
    }
  }
</script>

<div class='fixed-notice-infos'>
<div class='all-messages'>
</div>
<div class='ui container'>
<div class='flash-messages' id='messages-container'></div>
</div>
<script>
  (function() {
    $(function() {
      var $error_box, alertTip, notify_content, notify_options, template;
      template = '<div data-notify="container" class="ui {0} message" role="alert">' + '<i data-notify="dismiss" class="close icon"></i>' + '<span data-notify="message">{2}</span>' + '</div>';
      notify_content = null;
      notify_options = {};
      alertTip = '';
      $error_box = $(".flash_error.flash_error_box");
      if (notify_options.type === 'error' && $error_box.length > 0 && !$.isEmptyObject(notify_content.message)) {
        if (notify_content.message === 'captcha_fail') {
          alertTip = "验证码不正确";
        } else if (notify_content.message === 'captcha_expired') {
          alertTip = "验证码已过期，请点击刷新";
        } else if (notify_content.message === 'not_found_in_database') {
          alertTip = "帐号或者密码错误";
        } else if (notify_content.message === 'not_found_and_show_captcha') {
          alertTip = "帐号或者密码错误";
        } else if (notify_content.message === 'phone_captcha_fail') {
          alertTip = "手机验证码不通过";
        } else {
          alertTip = notify_content.message;
        }
        return $error_box.html(alertTip).show();
      } else if (notify_content) {
        if ("show" === 'third_party_binding') {
          return $('#third_party_binding-message').html(notify_content.message).addClass('ui message red');
        }
        notify_options.delay = 3000;
        notify_options.template = template;
        notify_options.offset = {
          x: 10,
          y: 30
        };
        notify_options.element = '#messages-container';
        return $.notify(notify_content, notify_options);
      }
    });
  
  }).call(this);
</script>

</div>
<script>
  (function() {
    $(function() {
      var setCookie;
      setCookie = function(name, value) {
        $.cookie(name, value, {
          path: '/',
          expires: 365
        });
      };
      $('#remove-bulletin, #remove-bulletin-dashboard').on('click', function() {
        setCookie('remove_bulletin', "gitee-maintain-1594434874");
        $('#git-bulletin').hide();
      });
      $('#remove-member-bulletin').on('click', function() {
        setCookie('remove_member_bulletin', "gitee_member_bulletin");
        $(this).parent().hide();
      });
      return $('#remove-gift-bulletin').on('click', function() {
        setCookie('remove_gift_bulletin', "gitee-gift-bulletin");
        $(this).parent().hide();
      });
    });
  
  }).call(this);
</script>
<script>
  function closeMessageBanner(pthis, type, val) {
    var json = {}
  
    val = typeof val === 'undefined' ? null : val
    $(pthis).parent().remove()
    if (type === 'out_of_enterprise_member') {
      json = {type: type, data: val}
    } else if (type === 'enterprise_overdue') {
      json = {type: type, data: val}
    }
    $.post('/profile/close_flash_tip', json)
  }
</script>

<div class='site-content'>
<div class='git-project-header'>
<div class='fixed-notice-infos'>
<div class='ui info icon floating message green' id='fetch-ok' style='display: none'>
<div class='content'>
<div class='header status-title'>
<i class='info icon status-icon'></i>
代码拉取完成，页面将自动刷新
</div>
</div>
</div>
<div class='ui info icon floating message error' id='fetch-error' style='display: none'>
<div class='content'>
<div class='header status-title'>
<i class='info icon status-icon'></i>
<span class='error_msg'></span>
</div>
</div>
</div>
</div>
<div class='ui container'>

<div class='git-project-header-details'>
<div class='git-project-header-container'>
<div class='git-project-header-actions'>
<div class='ui tiny modal project-donate-modal' id='project-donate-modal'>
<i class='iconfont icon-close close'></i>
<div class='header'>捐赠</div>
<div class='content'>
该仓库未开启捐赠功能，可发送私信通知作者开启
</div>
<div class='actions'>
<a class='ui blank button cancel'>取消</a>
<a class='ui orange ok button' href='/notifications/messages/5164785?donate_project=kangjian_haha%2Fblog_project'>发送私信</a>
</div>
</div>
<div class='ui small modal wepay-qrcode'>
<i class='iconfont icon-close close'></i>
<div class='header'>
扫描微信二维码支付
<span class='wepay-cash'></span>
</div>
<div class='content weqcode-center'>
<img id='wepay-qrcode' src=''>
</div>
<div class='actions'>
<div class='ui cancel blank button'>取消</div>
<div class='ui ok orange button'>
支付完成
</div>
</div>
</div>
<div class='ui mini modal' id='confirm-alipay-modal'>
<div class='header'>支付提示</div>
<div class='content'>
将跳转至支付宝完成支付
</div>
<div class='actions'>
<div class='ui approve orange button'>
确定
</div>
<div class='ui blank cancel button'>
取消
</div>
</div>
</div>

<span class='basic ui buttons watch-container'>
<div class='ui dropdown button js-project-watch' data-watch-type='unwatch'>
<input type='hidden' value=''>
<i class='iconfont icon-watch'></i>
<div class='text'>
Watch
</div>
<i class='dropdown icon'></i>
<div class='menu'>
<a class="item" data-method="post" data-remote="true" data-value="unwatch" href="/kangjian_haha/blog_project/unwatch" rel="nofollow"><i class='iconfont icon-msg-read'></i>
不关注
</a><a class="item" data-method="post" data-remote="true" data-value="watching" href="/kangjian_haha/blog_project/watch" rel="nofollow"><i class='iconfont icon-msg-read'></i>
关注所有动态
</a><a class="item" data-method="post" data-remote="true" data-value="releases_only" href="/kangjian_haha/blog_project/release_only_watch" rel="nofollow"><i class='iconfont icon-msg-read'></i>
仅关注版本发行动态
</a><a class="item" data-method="post" data-remote="true" data-value="ignoring" href="/kangjian_haha/blog_project/ignoring_watch" rel="nofollow"><i class='iconfont icon-msg-read'></i>
关注但不提醒动态
</a></div>
</div>
<style>
  .js-project-watch .text .iconfont {
    display: none; }
  .js-project-watch a, .js-project-watch a:hover {
    color: #000; }
  .js-project-watch .item > .iconfont {
    visibility: hidden;
    margin-left: -10px; }
  .js-project-watch .selected .iconfont {
    visibility: visible; }
  .js-project-watch .menu {
    margin-top: 4px !important; }
</style>
<script>
  $('.js-project-watch').dropdown({
    action: 'select',
    onChange: function(value, text, $selectedItem) {
      var type = value === 'unwatch' ? 'Watch' : 'Unwatch';
      $(this).children('.text').text(type);
      $(this).dropdown('set selected', value)
    }
  });
</script>

<a class="ui button action-social-count" href="/kangjian_haha/blog_project/watchers" title="1">1
</a></span>
<span class='basic buttons star-container ui'>
<a class="ui button unstar" data-method="post" data-remote="true" href="/kangjian_haha/blog_project/unstar" rel="nofollow"><i class='iconfont icon-star-solid'></i>
Unstar
</a><a class="ui button star" data-method="post" data-remote="true" href="/kangjian_haha/blog_project/star" rel="nofollow"><i class='iconfont icon-star'></i>
Star
</a><a class="ui button action-social-count" href="/kangjian_haha/blog_project/stargazers" title="0">0
</a></span>
<span class='ui basic buttons fork-container' title=''>
<a class="ui button fork " href="#" id="fork-top-button"><i class='iconfont icon-fork'></i>
Fork
</a><a class="ui button action-social-count " href="/kangjian_haha/blog_project/members" title="0">0
</a></span>
</div>
<h2 class='git-project-title'>
<span class="project-title"><i class="project-icon iconfont icon-project-public" title="这是一个公开仓库"></i> <a class="author" href="/kangjian_haha" title="kangjian_haha">kangjian_haha</a> / <a class="repository" href="/kangjian_haha/blog_project" style="padding-bottom: 0px" target="" title="blog_project">blog_project</a></span><span class="project-badges"><style>
  .gitee-modal {
    width: 500px !important; }
</style>
</span>
<input id="project_title" name="project_title" type="hidden" value="kangjian_haha/blog_project" />
</h2>
</div>
</div>
</div>
<div class='row' id='import-result-message' style='padding-top: 0px; display: none'>
<div class='sixteen wide column'>
<div class='ui icon yellow message status-color'>
<i class='info icon status-icon' style='width:60px;padding-right:12px;'></i>
<i class='close icon'></i>
<div class='header status-title'>
同步状态
</div>
<span class='status-message'></span>
</div>
</div>
</div>
<div class='ui small modal' id='modal-fork-project'>
<i class='icon-close iconfont close'></i>
<div class='header'>
Fork 仓库
</div>
<div class='content'>
<div class='fork-info-content'>
<div class='ui segment fork_project_loader'>
<div class='ui active inverted dimmer'>
<div class='ui text loader'>加载中</div>
</div>
</div>
</div>
</div>
<div class='actions fork-action hide'>
<a class='cancel'>&emsp;取消&emsp;</a>
<div class='ui disabled large button orange ok'>&emsp;确认&emsp;</div>
</div>
</div>
<script>
  var title_import_url = "false";
  var title_post_url = "/kangjian_haha/blog_project/update_import";
  var title_fork_url = "/kangjian_haha/blog_project/sync_fork";
  var title_project_path = "blog_project";
  var title_p_name = "blog_project";
  var title_p_id= "9771673";
  var title_description = "";
  var title_form_authenticity_token = "pldEbCxGp4MlF8K/5I1wq80LnEGMOdcxpzLX2T74aeI=";
  var watch_type = "unwatch";
  
  $('.metrics-radar').dropdown({ action: 'nothing' });
  $('.js-project-watch').dropdown('set selected', watch_type);
  $('.checkbox.sync-wiki').checkbox();
</script>
<script>
  var $modalFork = $('#modal-fork-project');
  $('#fork-top-button').on('click', function (e) {
    e.preventDefault();
    $modalFork.modal('show');
    setTimeout(function () {
      $.ajax({ url: "/kangjian_haha/blog_project/fork_project_info" }).done(function () {
        $modalFork.find('.namespace-img-area.ui.checkbox').checkbox({
          onChecked: function () {
            $modalFork.find('.ui.ok.button').removeClass('disabled')
          }
        })
      })
    }, 500);
  });
  $modalFork.modal({ transition: 'fade' });
  $modalFork.find('.close-button').on('click', function () {
    $modalFork.modal('hide');
  });
  $modalFork.on('click', '.button.ok', function () {
    var $form = $('<form></form>');
    var $input = $('<input type="hidden" name="authenticity_token" />');
    var $inputCheck = $('<input type="hidden" name="members" />');
    var $inputCheck2 = $('<input type="hidden" name="namespace_path" />');
    var checkedPath = $('.checkbox.checked > input[name=namespace_path]').val();
  
    $form.hide();
    $form.attr('method', 'post');
    $form.attr('action', '/' + checkedPath + '/fork_project/kangjian_haha/blog_project');
    $input.attr('value', $('meta[name="csrf-token"]').attr('content'));
    $inputCheck.attr('value', $('.checkbox.checked > input[name=members]').val());
    $inputCheck2.attr('value', checkedPath);
    $form.append($input);
    $form.append($inputCheck);
    $form.append($inputCheck2);
    $form.appendTo('body');
    $form.submit();
    $modalFork.modal('hide');
  })
</script>
<style>
  i.loading {
    -webkit-animation: icon-loading 1.2s linear infinite;
    animation: icon-loading 1.2s linear infinite;
  }
  .qrcode_cs {
    float: left;
  }
  .check-sync-wiki {
    float: left;
    height: 28px;
    line-height: 28px;
  }
  .sync-wiki-warn {
    color: #e28560;
  }
</style>

<div class='git-project-nav'>
<div class='ui container'>
<div class='ui secondary pointing menu'>
<a class="item active" href="/kangjian_haha/blog_project"><i class='iconfont icon-code'></i>
代码
</a><a class="item " href="/kangjian_haha/blog_project/issues"><i class='iconfont icon-task'></i>
Issues
<span class='ui mini circular label'>
0
</span>
</a><a class="item " href="/kangjian_haha/blog_project/pulls"><i class='iconfont icon-pull-request'></i>
Pull Requests
<span class='ui mini circular label'>
0
</span>
</a><a class="item " href="/kangjian_haha/blog_project/attach_files"><i class='iconfont icon-annex'></i>
附件
<span class='ui mini circular label'>0</span>
</a><a class="item " href="/kangjian_haha/blog_project/wikis"><i class='iconfont icon-wiki'></i>
Wiki
<span class='ui mini circular label'>
0
</span>
</a><a class="item  " href="/kangjian_haha/blog_project/graph/master"><i class='iconfont icon-statistics'></i>
统计
</a><div class='item project-devops-item'>
<div class='ui pointing top right dropdown project-devops-dropdown'>
<div class='text'>
<i class='iconfont icon-devops'></i>
DevOps
</div>
<i class='dropdown icon'></i>
<div class='menu' style='display:none'>
<a class="item" href="https://gitee.com/help/articles/4285" target="_blank"><img alt="Baidu efficiency cloud" src="https://assets.gitee.com/assets/baidu_efficiency_cloud-81a98c2eb67fac83b1453ca3d2feb326.svg" />
<div class='item-title'>
百度效率云
</div>
</a><a class="item" href="https://gitee.com/help/articles/4193" target="_blank"><img alt="Jenkins for gitee" src="https://assets.gitee.com/assets/jenkins_for_gitee-554ec65c490d0f1f18de632c48acc4e7.png" />
<div class='item-title'>
Jenkins for Gitee
</div>
</a></div>
</div>
</div>
<div class='item'>
<div class='ui pointing top right dropdown git-project-service'>
<div class='text'>
<i class='iconfont icon-service'></i>
服务
</div>
<i class='dropdown icon'></i>
<div class='menu' style='display:none'>
<a class="item" href="/kangjian_haha/blog_project/pages"><img alt="Logo en" src="/static/images/logo-en.svg" />
<div class='item-title'>
Gitee Pages
</div>
</a><a class="item" href="/kangjian_haha/blog_project/javadoc"><img alt="Maven" src="https://assets.gitee.com/assets/maven-bd58aee84f266d64d4b8ce5b006a9fcf.png" />
<div class='item-title'>
JavaDoc
</div>
</a><a class="item" href="/kangjian_haha/blog_project/phpdoc"><img alt="Phpdoc" src="https://assets.gitee.com/assets/phpdoc-a99f87c2feaa2fd99e5065377a39487e.png" />
<div class='item-title'>
PHPDoc
</div>
</a><a class="item" href="/kangjian_haha/blog_project/quality_analyses?platform=sonar_qube"><img alt="Sonar mini" src="https://assets.gitee.com/assets/sonar_mini-5e1b54bb9f6c951d97fb778ef623afea.png" />
<div class='item-title'>
质量分析
</div>
</a><a class="item" href="/kangjian_haha/blog_project/quality_analyses?platform=codesafe"><img alt="Codesafe mini" src="https://assets.gitee.com/assets/codesafe_mini-accbe1e555e9864c552620240d10e4de.png" width="100%" />
<div class='item-title'>
奇安信代码卫士
</div>
</a><a class="item" href="/kangjian_haha/blog_project/gitee_scans"><img alt="Giteescan" src="https://assets.gitee.com/assets/giteescan-cd9ab4076bd751faf7e30888eb10f782.png" />
<div class='item-title'>Gitee Scan</div>
</a><button class='ui orange basic button quit-button' id='quiting-button'>
我知道了，不再自动展开
</button>
</div>
</div>
</div>
<div class='item right mr-0 pr-0'>

</div>
</div>
</div>
</div>
<script>
  $('.git-project-nav .ui.dropdown').dropdown({ action: 'nothing' });
</script>
<style>
  .git-project-nav i.checkmark.icon {
    color: green;
  }
  #quiting-button {
    display: none;
  }
  
  .git-project-nav .dropdown .menu.hidden:after {
    visibility: hidden !important;
  }
</style>
<script>
  isSignIn = true
  isClickGuide = true
  $('#git-versions.dropdown').dropdown();
  $.ajax({
    url:"/kangjian_haha/blog_project/access/add_access_log",
    type:"GET"
  });
  $('#quiting-button').on('click',function() {
    $('.git-project-service').click();
    if (isSignIn) {
      $.post("/projects/set_service_guide")
    }
    $.cookie("Serve_State", true, { expires: 3650, path: '/'})
    $('#quiting-button').hide();
  });
  if (!(isClickGuide || $.cookie("Serve_State") == 'true')) {
    $('.git-project-service').click()
    $('#quiting-button').show()
  }
</script>

</div>
<div class='ui container'>

<div class='git-project-content-wrapper'>
<div class='git-project-content' id='git-project-content'>
<div class='row'>
<div class='git-project-desc-wrapper'>
<div class='ui yellow message no-license' id='user-no-license-message'>
该仓库未指定开源许可证，未经作者的许可，此代码仅用于学习，不能用于其他用途。
<i class='help circle icon'></i>
<div class='ui popup dark'>
项目仓库所选许可证以仓库主分支所使用许可证为准
</div>
<i class='remove icon' id='remove-no-license-message'></i>
</div>
<div class='git-project-desc'>
<div class='project-introduce'>
<span class='git-project-desc-text'>
暂无描述
</span>
<a class='hide spread' href='javascript:void(0);'>
展开
<i class='caret down icon'></i>
</a>
<a class='retract hide' href='javascript:void(0);'>
收起
<i class='caret up icon'></i>
</a>
<p class='git-project-homepage'>
</p>
</div>
</div>
<div class='git-project-desc-edit flex'>
<div class='sixty-percent ui small input'>
<input name='project[description]' placeholder='描述' type='text' value=''>
</div>
<div class='twenty-percent ui small input'>
<input data-regex-value='(^$)|(^(http|https):\/\/(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).*)|(^(http|https):\/\/[a-zA-Z0-9]+([_\-\.]{1}[a-zA-Z0-9]+)*\.[a-zA-Z]{2,10}(:[0-9]{1,10})?(\/.*)?$)' name='project[homepage]' placeholder='主页(eg: https://gitee.com)' type='text'>
</div>
<div class='zero-percent'>
<button class='ui orange button btn-save'>
保存更改
</button>
<button class='ui button btn-cancel-edit'>
取消
</button>
</div>
</div>
<script>
  $(function () {
    new ProjectInfoEditor({
      el: '.git-project-desc-wrapper',
      homepage: null,
      description: "",
      url: "/kangjian_haha/blog_project/update_description",
      modalHelper: Gitee.modalHelper
    })
  })
  
  if (false) {
    gon.project_new_blob_path = "/kangjian_haha/blog_project/new/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js"
    bindShowModal({
      el: $('.no-license .project-license__create'),
      complete: function(data, modal) {
        if (!data.haveNoChoice && !data.data) {
          Flash.show('请选择一项开源许可证')
        } else {
          location.href = gon.project_new_blob_path + '?license=' + data.data
        }
      },
      skip: function () {
        location.href = gon.project_new_blob_path + '?license'
      }
    })
  }
  
  $('i.help.circle.icon').popup({
    popup: '.no-license .ui.popup',
    position: 'right center'
  })
  
  $('#remove-no-license-message').on('click', function(){
    $.cookie("skip_repo_no_license_message_9771673", 'hide', { expires: 365 })
    $('#user-no-license-message').hide()
    return
  })
</script>
</div>

</div>
<div class='git-project-summary' id='git-project-summary'>
<div class='summary-viewer'>
<div class='viewer-wrapper'>
<ul>
<li>
<a href="/kangjian_haha/blog_project/commits/master"><i class='iconfont icon-commit'></i>
<b>6</b>
次提交
</a></li>
<li>
<a href="/kangjian_haha/blog_project/branches"><i class='iconfont icon-branches'></i>
<b>1</b>
个分支
</a></li>
<li>
<a href="/kangjian_haha/blog_project/tags"><i class='iconfont icon-tag'></i>
<b>0</b>
个标签
</a></li>
<li>
<a href="/kangjian_haha/blog_project/releases"><i class='iconfont icon-release'></i>
<b>0</b>
个发行版
</a></li>
<li>
<a href="/kangjian_haha/blog_project/contributors?ref=master"><i class='iconfont icon-collaborators'></i>
<b class='contributor-count' data-url='/kangjian_haha/blog_project/contributors_count?ref=master'></b>
<span class='contributor-text'>
正在获取贡献者
</span>
</a></li>
</ul>
<ul>
</ul>
</div>
</div>
<div class='summary-languages' title='点击查看语言占比'>
</div>

</div>
<div class='git-project-bread' id='git-project-bread'>
<div class='git-project-right-actions float-right'>
<div class='d-inline-block' id='git-project-tree-actions'>
<script>
  $('.disabled-upload-readonly').popup({
    content: "只读目录不允许上传文件",
    className: {
      popup: 'ui popup',
    },
    position: 'bottom center',
  })
  $('.disabled-create-folder').popup({
    content: "只读目录不允许创建目录",
    className: {
      popup: 'ui popup',
    },
    position: 'bottom center',
  })
  $('.disabled-create-file').popup({
    content: "只读目录不允许创建文件",
    className: {
      popup: 'ui popup',
    },
    position: 'bottom center',
  })
  $('.disabled-upload-readonly').click(() => {
    return false
  })
  $('.disabled-create-folder').click(() => {
    return false
  })
  $('.disabled-create-file').click(() => {
    return false
  })
</script>
<style>
  .disabled-upload-readonly, .disabled-create-file, .disabled-create-folder {
    background-color: #dcddde !important;
    color: rgba(0, 0, 0, 0.4) !important;
    opacity: 0.3 !important;
    background-image: none !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important; }
</style>

</div>
<div class='ui orange button' id='btn-dl-or-clone'>
克隆/下载
<i class='dropdown icon'></i>
<div class='git-project-download-panel for-project ui bottom right popup'>
<div class='ui small secondary pointing menu'>
<a class='item active' data-text='' data-type='http' data-url='https://gitee.com/kangjian_haha/blog_project.git'>HTTPS</a>
<a class='item' data-text='' data-type='ssh' data-url='git@gitee.com:kangjian_haha/blog_project.git'>SSH</a>
<a class='item' data-text="该仓库未启用SVN访问，请仓库管理员前往【&lt;a target='_blank' href=/kangjian_haha/blog_project/settings&gt;仓库设置&lt;/a&gt;】开启。" data-type='svn' data-url=''>SVN</a>
<a class='item' data-text="该仓库未启用SVN访问，请仓库管理员前往【&lt;a target='_blank' href=/kangjian_haha/blog_project/settings&gt;仓库设置&lt;/a&gt;】开启。" data-type='svn_ssh' data-url=''>SVN+SSH</a>
</div>
<div class='ui fluid right labeled small input download-url-panel'>
<input id="project_clone_url" name="project_clone_url" onclick="focus();select()" readonly="readonly" type="text" value="https://gitee.com/kangjian_haha/blog_project.git" />
<div class='ui basic label'>
<div class='ui small basic orange button' data-clipboard-target='#project_clone_url' id='btn-copy-clone-url'>
复制
</div>
</div>
</div>
<div class='ui fluid right labeled warning-text forbid-warning-text'>

</div>
<hr>
<a class="ui fluid tiny download link button" href="/kangjian_haha/blog_project/repository/archive/master.zip"><i class='icon download'></i>
下载ZIP
</a><hr>
<div class='ent-poster mt-1 toschina-content__hidden'>
<h2>企业级软件开发协作工具</h2>
<p>代码托管 项目管理 文档协作 完备安全策略</p>
<a class="ui button orange" href="/enterprises?utm_source=g_download" target="_blank">了解更多</a>
</div>
</div>
<script>
  (function() {
    var $btnCopy, $input, $item, $panel, clipboard, dataUrl, remoteWay;
  
    $input = $('#project_clone_url');
  
    remoteWay = '';
  
    clipboard = new Clipboard('#btn-copy-clone-url');
  
    $panel = $('.git-project-download-panel');
  
    $btnCopy = $('#btn-copy-clone-url');
  
    $panel.find('.menu > .item').on('click', function() {
      var $item, dataUrl;
      $item = $(this).addClass('active');
      $item.siblings().removeClass('active');
      dataUrl = $item.attr('data-url');
      if (dataUrl) {
        $panel.find('.download-url-panel').show();
        $input.val(dataUrl);
        $panel.find('.forbid-warning-text').html('');
      } else {
        $panel.find('.download-url-panel').hide();
        $panel.find('.forbid-warning-text').html($item.attr('data-text') || '');
      }
      return $.cookie('remote_way', $item.attr('data-type'), {
        expires: 365,
        path: '/'
      });
    });
  
    $('body').on('click', '#btn-dl-or-clone', function(e) {
      e.stopImmediatePropagation();
      if ($(e.target)[0] === $panel[0] || $(e.target).closest($panel).length) {
        return;
      }
      return $panel.transition('fade up');
    });
  
    $('body').on('click', function() {
      if ($panel.transition('is visible')) {
        return $panel.transition('fade up');
      }
    });
  
    $item = $panel.find('.ui.menu .item').eq(0);
  
    $item.addClass('active').siblings().removeClass('active');
  
    dataUrl = $item.attr('data-url');
  
    if (dataUrl) {
      $panel.find('.download-url-panel').show();
      $input.val(dataUrl);
      $panel.find('.forbid-warning-text').html('');
    } else {
      $panel.find('.download-url-panel').hide();
      $panel.find('.forbid-warning-text').html($item.attr('data-text') || '');
    }
  
    clipboard.on('success', function() {
      $btnCopy.popup({
        content: '已复制',
        position: 'right center',
        onHidden: function() {
          return $btnCopy.popup('destroy');
        }
      });
      return $btnCopy.popup('show');
    });
  
    clipboard.on('error', function() {
      $btnCopy.popup({
        content: '复制失败，请手动复制',
        position: 'right center',
        onHidden: function() {
          return $btnCopy.popup('destroy');
        }
      });
      return $btnCopy.popup('show');
    });
  
  }).call(this);
</script>

</div>
</div>
<div class='ui horizontal list'>
<div class='item git-project-branch-item'>
<input id="path" name="path" type="hidden" value="themes/hexo-theme-next/source/lib/velocity/velocity.min.js" />
<div class='ui top left pointing dropdown gradient button dropdown-has-tabs' id='git-project-branch'>
<input id="ref" name="ref" type="hidden" value="master" />
<div class='default text'>
master
</div>
<i class='dropdown icon'></i>
<div class='menu'>
<div class='ui left icon search input'>
<i class='iconfont icon-search'></i>
<input class='search-branch' placeholder='搜索分支' type='text'>
</div>
<div class='tab-menu'>
<div class='tab-menu-action' data-tab='branches'>
<a class="ui link button" href="/kangjian_haha/blog_project/branches">管理</a>
</div>
<div class='tab-menu-action' data-tab='tags'>
<a class="ui link button" href="/kangjian_haha/blog_project/tags">管理</a>
</div>
<div class='tab-menu-item' data-placeholder='搜索分支' data-tab='branches'>
分支 (1)
</div>
</div>
<div class='tab scrolling menu' data-tab='branches'>
<div class="item" data-value="master"><span>master</span></div>
</div>
</div>
</div>
<style>
  .iconfont.icon-shieldlock {
    color: #8c92a4;
  }
</style>

<script>
  $(function () {
    Gitee.initTabsInDropdown($('#git-project-branch').dropdown({
      fullTextSearch: true,
      selectOnKeydown: true,
      action: function (text,value,el) {
        var oItemOrInitObject = el[0] || el
        var isNotSelect = oItemOrInitObject.dataset.tab && oItemOrInitObject.dataset.tab === 'branches'
        if(isNotSelect){
          console.warn("You didn't choose a branch")
          return
        } 
        var path = $('#path').val();
        var href = ['/kangjian_haha/blog_project/tree', encodeURIComponent(value), path].join('/');
        window.location.href = href;
        return true
      },
      onNoResults: function (searchTerm) {
        //未找到结果
        return true
      },
    }));
    $('.protected-branch-popup').popup()
  })
</script>

</div>
<div class='item' id='git-project-root-actions'>
<div class='repo-index repo-none-index' style='margin-left:0px;'>
<div class='ui horizontal list repo-action-list'>
<div class='item'>
<a class="ui gradient button repo-action left attached" href="/kangjian_haha/blog_project/pull/new/kangjian_haha:master...kangjian_haha:master">+ Pull Request</a>
<a class="ui gradient button repo-action right attached" href="/kangjian_haha/blog_project/issues/new">+ Issue</a>
</div>
<div class='item'>
<div class='ui pointing right top dropdown gradient button' id='git-project-file'>
<div class='text'>文件</div>
<i class='dropdown icon'></i>
<div class='menu'>
<a class="item repo-action" href="/kangjian_haha/blog_project/new/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js" id="new_file_bread" title="新建文件">新建文件
</a><div class='disabled item'>上传文件</div>
<a class='item repo-action' id='search-files'>
搜索文件
</a>
</div>
</div>
</div>
<div class='item toschina-content__hidden'>
<a class="ui gradient button webide" href="/-/ide/project/kangjian_haha/blog_project/edit/master" target="_blank">Web IDE</a>
</div>
<div class='item toschina-content__hidden'>
<a class="ui gradient button repo-action" href="/kangjian_haha/blog_project/widget"><i class='iconfont icon-widget icon-orange'></i>
挂件
</a></div>
</div>
<script>
  $('#git-project-file').dropdown({ action: 'hide' });
</script>
</div>

</div>
<div class='item breadcrumb_path path-breadcrumb-contrainer' id='git-project-breadcrumb'>
<div class='ui breadcrumb path project-path-breadcrumb' id='path-breadcrumb'>
<a class="section repo-name" data-direction="back" href="/kangjian_haha/blog_project/tree/master" style="font-weight: bold">blog_project
</a><div class='divider'>
/
</div>
<strong>
<a class="section" data-direction="back" href="/kangjian_haha/blog_project/tree/master/themes"><span class='cblue'>
themes
</span>
</a></strong>
<div class='divider'>
/
</div>
<strong>
<a class="section" data-direction="back" href="/kangjian_haha/blog_project/tree/master/themes/hexo-theme-next"><span class='cblue'>
hexo-theme-next
</span>
</a></strong>
<div class='divider'>
/
</div>
<strong>
<a class="section" data-direction="back" href="/kangjian_haha/blog_project/tree/master/themes/hexo-theme-next/source"><span class='cblue'>
source
</span>
</a></strong>
<div class='divider'>
/
</div>
<strong>
<a class="section" data-direction="back" href="/kangjian_haha/blog_project/tree/master/themes/hexo-theme-next/source/lib"><span class='cblue'>
lib
</span>
</a></strong>
<div class='divider'>
/
</div>
<strong>
<a class="section" data-direction="back" href="/kangjian_haha/blog_project/tree/master/themes/hexo-theme-next/source/lib/velocity"><span class='cblue'>
velocity
</span>
</a></strong>
<div class='divider'>
/
</div>
<strong>
velocity.min.js
</strong>
</div>


</div>
</div>
</div>

<style>
  .ui.dropdown .menu > .header {
    text-transform: none; }
</style>
<script>
  $(document).ready(function () {
    var $gitProjectSummary = $('#git-project-summary');
    var $gitProjectLanguages = $gitProjectSummary.find('.summary-languages');
    var $statsSwitcherWrapper = $gitProjectSummary.find('.viewer-wrapper');
    var $contributorCount = $gitProjectSummary.find('.contributor-count');
    var $contributorText = $gitProjectSummary.find('.contributor-text');
    var contributorsCountUrl = $contributorCount.data('url');
  
    $gitProjectLanguages.on('click', function() {
      $statsSwitcherWrapper.toggleClass('js-lang');
    });
  
    $.ajax({
      url: contributorsCountUrl,
      method: 'GET',
      success: function(data) {
        if (data.status === 1) {
          $contributorCount.text(data.contributors_count);
          $contributorText.text('位贡献者')
        } else {
          $contributorText.text('获取失败')
        }
      }
    });
    var $tip = $('#apk-download-tip');
    if (!$tip.length) {
      return;
    }
    $tip.find('.btn-close').on('click', function () {
      $tip.slideUp();
    });
  });
  (function(){
    function pathAutoRender() {
      var $parent = $('#git-project-bread'),
          $child = $('#git-project-bread').children('.ui.horizontal.list'),
          mainWidth = 0;
      $child.each(function (i,item) {
        mainWidth += $(item).width()
        });
      $('.breadcrumb.path.fork-path').remove();
      if (mainWidth > 995) {
        $('#path-breadcrumb').hide();
        $parent.append('<div class="ui breadcrumb path fork-path">' + $('#path-breadcrumb').html() + '<div/>')
      } else {
        $('#path-breadcrumb').show();
      }
    }
    window.pathAutoRender = pathAutoRender;
    pathAutoRender();
  })();
</script>

<div class='row column tree-holder' id='tree-holder'>

<div class='tree-content-holder' id='tree-content-holder'>
<div class='file_holder'>
<div class='file_title'>
<div class='blob-header-title'>
<div class='blob-description'>
<i class="iconfont icon-file"></i>
<span class='file_name' title='velocity.min.js'>
velocity.min.js
</span>
<small>34.04 KB</small>
</div>
<div class='options'><div class='ui mini buttons basic'>
<textarea id="blob_raw" name="blob_raw" style="display:none;">
/*! VelocityJS.org (1.2.2). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */&#x000A;/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */&#x000A;!function(e){function t(e){var t=e.length,r=$.type(e);return&quot;function&quot;===r||$.isWindow(e)?!1:1===e.nodeType&amp;&amp;t?!0:&quot;array&quot;===r||0===t||&quot;number&quot;==typeof t&amp;&amp;t&gt;0&amp;&amp;t-1 in e}if(!e.jQuery){var $=function(e,t){return new $.fn.init(e,t)};$.isWindow=function(e){return null!=e&amp;&amp;e==e.window},$.type=function(e){return null==e?e+&quot;&quot;:&quot;object&quot;==typeof e||&quot;function&quot;==typeof e?a[o.call(e)]||&quot;object&quot;:typeof e},$.isArray=Array.isArray||function(e){return&quot;array&quot;===$.type(e)},$.isPlainObject=function(e){var t;if(!e||&quot;object&quot;!==$.type(e)||e.nodeType||$.isWindow(e))return!1;try{if(e.constructor&amp;&amp;!n.call(e,&quot;constructor&quot;)&amp;&amp;!n.call(e.constructor.prototype,&quot;isPrototypeOf&quot;))return!1}catch(r){return!1}for(t in e);return void 0===t||n.call(e,t)},$.each=function(e,r,a){var n,o=0,i=e.length,s=t(e);if(a){if(s)for(;i&gt;o&amp;&amp;(n=r.apply(e[o],a),n!==!1);o++);else for(o in e)if(n=r.apply(e[o],a),n===!1)break}else if(s)for(;i&gt;o&amp;&amp;(n=r.call(e[o],o,e[o]),n!==!1);o++);else for(o in e)if(n=r.call(e[o],o,e[o]),n===!1)break;return e},$.data=function(e,t,a){if(void 0===a){var n=e[$.expando],o=n&amp;&amp;r[n];if(void 0===t)return o;if(o&amp;&amp;t in o)return o[t]}else if(void 0!==t){var n=e[$.expando]||(e[$.expando]=++$.uuid);return r[n]=r[n]||{},r[n][t]=a,a}},$.removeData=function(e,t){var a=e[$.expando],n=a&amp;&amp;r[a];n&amp;&amp;$.each(t,function(e,t){delete n[t]})},$.extend=function(){var e,t,r,a,n,o,i=arguments[0]||{},s=1,l=arguments.length,u=!1;for(&quot;boolean&quot;==typeof i&amp;&amp;(u=i,i=arguments[s]||{},s++),&quot;object&quot;!=typeof i&amp;&amp;&quot;function&quot;!==$.type(i)&amp;&amp;(i={}),s===l&amp;&amp;(i=this,s--);l&gt;s;s++)if(null!=(n=arguments[s]))for(a in n)e=i[a],r=n[a],i!==r&amp;&amp;(u&amp;&amp;r&amp;&amp;($.isPlainObject(r)||(t=$.isArray(r)))?(t?(t=!1,o=e&amp;&amp;$.isArray(e)?e:[]):o=e&amp;&amp;$.isPlainObject(e)?e:{},i[a]=$.extend(u,o,r)):void 0!==r&amp;&amp;(i[a]=r));return i},$.queue=function(e,r,a){function n(e,r){var a=r||[];return null!=e&amp;&amp;(t(Object(e))?!function(e,t){for(var r=+t.length,a=0,n=e.length;r&gt;a;)e[n++]=t[a++];if(r!==r)for(;void 0!==t[a];)e[n++]=t[a++];return e.length=n,e}(a,&quot;string&quot;==typeof e?[e]:e):[].push.call(a,e)),a}if(e){r=(r||&quot;fx&quot;)+&quot;queue&quot;;var o=$.data(e,r);return a?(!o||$.isArray(a)?o=$.data(e,r,n(a)):o.push(a),o):o||[]}},$.dequeue=function(e,t){$.each(e.nodeType?[e]:e,function(e,r){t=t||&quot;fx&quot;;var a=$.queue(r,t),n=a.shift();&quot;inprogress&quot;===n&amp;&amp;(n=a.shift()),n&amp;&amp;(&quot;fx&quot;===t&amp;&amp;a.unshift(&quot;inprogress&quot;),n.call(r,function(){$.dequeue(r,t)}))})},$.fn=$.prototype={init:function(e){if(e.nodeType)return this[0]=e,this;throw new Error(&quot;Not a DOM node.&quot;)},offset:function(){var t=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:t.top+(e.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:t.left+(e.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function e(){for(var e=this.offsetParent||document;e&amp;&amp;&quot;html&quot;===!e.nodeType.toLowerCase&amp;&amp;&quot;static&quot;===e.style.position;)e=e.offsetParent;return e||document}var t=this[0],e=e.apply(t),r=this.offset(),a=/^(?:body|html)$/i.test(e.nodeName)?{top:0,left:0}:$(e).offset();return r.top-=parseFloat(t.style.marginTop)||0,r.left-=parseFloat(t.style.marginLeft)||0,e.style&amp;&amp;(a.top+=parseFloat(e.style.borderTopWidth)||0,a.left+=parseFloat(e.style.borderLeftWidth)||0),{top:r.top-a.top,left:r.left-a.left}}};var r={};$.expando=&quot;velocity&quot;+(new Date).getTime(),$.uuid=0;for(var a={},n=a.hasOwnProperty,o=a.toString,i=&quot;Boolean Number String Function Array Date RegExp Object Error&quot;.split(&quot; &quot;),s=0;s&lt;i.length;s++)a[&quot;[object &quot;+i[s]+&quot;]&quot;]=i[s].toLowerCase();$.fn.init.prototype=$.fn,e.Velocity={Utilities:$}}}(window),function(e){&quot;object&quot;==typeof module&amp;&amp;&quot;object&quot;==typeof module.exports?module.exports=e():&quot;function&quot;==typeof define&amp;&amp;define.amd?define(e):e()}(function(){return function(e,t,r,a){function n(e){for(var t=-1,r=e?e.length:0,a=[];++t&lt;r;){var n=e[t];n&amp;&amp;a.push(n)}return a}function o(e){return g.isWrapped(e)?e=[].slice.call(e):g.isNode(e)&amp;&amp;(e=[e]),e}function i(e){var t=$.data(e,&quot;velocity&quot;);return null===t?a:t}function s(e){return function(t){return Math.round(t*e)*(1/e)}}function l(e,r,a,n){function o(e,t){return 1-3*t+3*e}function i(e,t){return 3*t-6*e}function s(e){return 3*e}function l(e,t,r){return((o(t,r)*e+i(t,r))*e+s(t))*e}function u(e,t,r){return 3*o(t,r)*e*e+2*i(t,r)*e+s(t)}function c(t,r){for(var n=0;m&gt;n;++n){var o=u(r,e,a);if(0===o)return r;var i=l(r,e,a)-t;r-=i/o}return r}function p(){for(var t=0;b&gt;t;++t)w[t]=l(t*x,e,a)}function f(t,r,n){var o,i,s=0;do i=r+(n-r)/2,o=l(i,e,a)-t,o&gt;0?n=i:r=i;while(Math.abs(o)&gt;h&amp;&amp;++s&lt;v);return i}function d(t){for(var r=0,n=1,o=b-1;n!=o&amp;&amp;w[n]&lt;=t;++n)r+=x;--n;var i=(t-w[n])/(w[n+1]-w[n]),s=r+i*x,l=u(s,e,a);return l&gt;=y?c(t,s):0==l?s:f(t,r,r+x)}function g(){V=!0,(e!=r||a!=n)&amp;&amp;p()}var m=4,y=.001,h=1e-7,v=10,b=11,x=1/(b-1),S=&quot;Float32Array&quot;in t;if(4!==arguments.length)return!1;for(var P=0;4&gt;P;++P)if(&quot;number&quot;!=typeof arguments[P]||isNaN(arguments[P])||!isFinite(arguments[P]))return!1;e=Math.min(e,1),a=Math.min(a,1),e=Math.max(e,0),a=Math.max(a,0);var w=S?new Float32Array(b):new Array(b),V=!1,C=function(t){return V||g(),e===r&amp;&amp;a===n?t:0===t?0:1===t?1:l(d(t),r,n)};C.getControlPoints=function(){return[{x:e,y:r},{x:a,y:n}]};var T=&quot;generateBezier(&quot;+[e,r,a,n]+&quot;)&quot;;return C.toString=function(){return T},C}function u(e,t){var r=e;return g.isString(e)?v.Easings[e]||(r=!1):r=g.isArray(e)&amp;&amp;1===e.length?s.apply(null,e):g.isArray(e)&amp;&amp;2===e.length?b.apply(null,e.concat([t])):g.isArray(e)&amp;&amp;4===e.length?l.apply(null,e):!1,r===!1&amp;&amp;(r=v.Easings[v.defaults.easing]?v.defaults.easing:h),r}function c(e){if(e){var t=(new Date).getTime(),r=v.State.calls.length;r&gt;1e4&amp;&amp;(v.State.calls=n(v.State.calls));for(var o=0;r&gt;o;o++)if(v.State.calls[o]){var s=v.State.calls[o],l=s[0],u=s[2],f=s[3],d=!!f,m=null;f||(f=v.State.calls[o][3]=t-16);for(var y=Math.min((t-f)/u.duration,1),h=0,b=l.length;b&gt;h;h++){var S=l[h],w=S.element;if(i(w)){var V=!1;if(u.display!==a&amp;&amp;null!==u.display&amp;&amp;&quot;none&quot;!==u.display){if(&quot;flex&quot;===u.display){var C=[&quot;-webkit-box&quot;,&quot;-moz-box&quot;,&quot;-ms-flexbox&quot;,&quot;-webkit-flex&quot;];$.each(C,function(e,t){x.setPropertyValue(w,&quot;display&quot;,t)})}x.setPropertyValue(w,&quot;display&quot;,u.display)}u.visibility!==a&amp;&amp;&quot;hidden&quot;!==u.visibility&amp;&amp;x.setPropertyValue(w,&quot;visibility&quot;,u.visibility);for(var T in S)if(&quot;element&quot;!==T){var k=S[T],A,F=g.isString(k.easing)?v.Easings[k.easing]:k.easing;if(1===y)A=k.endValue;else{var E=k.endValue-k.startValue;if(A=k.startValue+E*F(y,u,E),!d&amp;&amp;A===k.currentValue)continue}if(k.currentValue=A,&quot;tween&quot;===T)m=A;else{if(x.Hooks.registered[T]){var j=x.Hooks.getRoot(T),H=i(w).rootPropertyValueCache[j];H&amp;&amp;(k.rootPropertyValue=H)}var N=x.setPropertyValue(w,T,k.currentValue+(0===parseFloat(A)?&quot;&quot;:k.unitType),k.rootPropertyValue,k.scrollData);x.Hooks.registered[T]&amp;&amp;(i(w).rootPropertyValueCache[j]=x.Normalizations.registered[j]?x.Normalizations.registered[j](&quot;extract&quot;,null,N[1]):N[1]),&quot;transform&quot;===N[0]&amp;&amp;(V=!0)}}u.mobileHA&amp;&amp;i(w).transformCache.translate3d===a&amp;&amp;(i(w).transformCache.translate3d=&quot;(0px, 0px, 0px)&quot;,V=!0),V&amp;&amp;x.flushTransformCache(w)}}u.display!==a&amp;&amp;&quot;none&quot;!==u.display&amp;&amp;(v.State.calls[o][2].display=!1),u.visibility!==a&amp;&amp;&quot;hidden&quot;!==u.visibility&amp;&amp;(v.State.calls[o][2].visibility=!1),u.progress&amp;&amp;u.progress.call(s[1],s[1],y,Math.max(0,f+u.duration-t),f,m),1===y&amp;&amp;p(o)}}v.State.isTicking&amp;&amp;P(c)}function p(e,t){if(!v.State.calls[e])return!1;for(var r=v.State.calls[e][0],n=v.State.calls[e][1],o=v.State.calls[e][2],s=v.State.calls[e][4],l=!1,u=0,c=r.length;c&gt;u;u++){var p=r[u].element;if(t||o.loop||(&quot;none&quot;===o.display&amp;&amp;x.setPropertyValue(p,&quot;display&quot;,o.display),&quot;hidden&quot;===o.visibility&amp;&amp;x.setPropertyValue(p,&quot;visibility&quot;,o.visibility)),o.loop!==!0&amp;&amp;($.queue(p)[1]===a||!/\.velocityQueueEntryFlag/i.test($.queue(p)[1]))&amp;&amp;i(p)){i(p).isAnimating=!1,i(p).rootPropertyValueCache={};var f=!1;$.each(x.Lists.transforms3D,function(e,t){var r=/^scale/.test(t)?1:0,n=i(p).transformCache[t];i(p).transformCache[t]!==a&amp;&amp;new RegExp(&quot;^\\(&quot;+r+&quot;[^.]&quot;).test(n)&amp;&amp;(f=!0,delete i(p).transformCache[t])}),o.mobileHA&amp;&amp;(f=!0,delete i(p).transformCache.translate3d),f&amp;&amp;x.flushTransformCache(p),x.Values.removeClass(p,&quot;velocity-animating&quot;)}if(!t&amp;&amp;o.complete&amp;&amp;!o.loop&amp;&amp;u===c-1)try{o.complete.call(n,n)}catch(d){setTimeout(function(){throw d},1)}s&amp;&amp;o.loop!==!0&amp;&amp;s(n),i(p)&amp;&amp;o.loop===!0&amp;&amp;!t&amp;&amp;($.each(i(p).tweensContainer,function(e,t){/^rotate/.test(e)&amp;&amp;360===parseFloat(t.endValue)&amp;&amp;(t.endValue=0,t.startValue=360),/^backgroundPosition/.test(e)&amp;&amp;100===parseFloat(t.endValue)&amp;&amp;&quot;%&quot;===t.unitType&amp;&amp;(t.endValue=0,t.startValue=100)}),v(p,&quot;reverse&quot;,{loop:!0,delay:o.delay})),o.queue!==!1&amp;&amp;$.dequeue(p,o.queue)}v.State.calls[e]=!1;for(var g=0,m=v.State.calls.length;m&gt;g;g++)if(v.State.calls[g]!==!1){l=!0;break}l===!1&amp;&amp;(v.State.isTicking=!1,delete v.State.calls,v.State.calls=[])}var f=function(){if(r.documentMode)return r.documentMode;for(var e=7;e&gt;4;e--){var t=r.createElement(&quot;div&quot;);if(t.innerHTML=&quot;&lt;!--[if IE &quot;+e+&quot;]&gt;&lt;span&gt;&lt;/span&gt;&lt;![endif]--&gt;&quot;,t.getElementsByTagName(&quot;span&quot;).length)return t=null,e}return a}(),d=function(){var e=0;return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||function(t){var r=(new Date).getTime(),a;return a=Math.max(0,16-(r-e)),e=r+a,setTimeout(function(){t(r+a)},a)}}(),g={isString:function(e){return&quot;string&quot;==typeof e},isArray:Array.isArray||function(e){return&quot;[object Array]&quot;===Object.prototype.toString.call(e)},isFunction:function(e){return&quot;[object Function]&quot;===Object.prototype.toString.call(e)},isNode:function(e){return e&amp;&amp;e.nodeType},isNodeList:function(e){return&quot;object&quot;==typeof e&amp;&amp;/^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e))&amp;&amp;e.length!==a&amp;&amp;(0===e.length||&quot;object&quot;==typeof e[0]&amp;&amp;e[0].nodeType&gt;0)},isWrapped:function(e){return e&amp;&amp;(e.jquery||t.Zepto&amp;&amp;t.Zepto.zepto.isZ(e))},isSVG:function(e){return t.SVGElement&amp;&amp;e instanceof t.SVGElement},isEmptyObject:function(e){for(var t in e)return!1;return!0}},$,m=!1;if(e.fn&amp;&amp;e.fn.jquery?($=e,m=!0):$=t.Velocity.Utilities,8&gt;=f&amp;&amp;!m)throw new Error(&quot;Velocity: IE8 and below require jQuery to be loaded before Velocity.&quot;);if(7&gt;=f)return void(jQuery.fn.velocity=jQuery.fn.animate);var y=400,h=&quot;swing&quot;,v={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\.3\.[3-7]/i.test(navigator.userAgent),isChrome:t.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:r.createElement(&quot;div&quot;),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[]},CSS:{},Utilities:$,Redirects:{},Easings:{},Promise:t.Promise,defaults:{queue:&quot;&quot;,duration:y,easing:h,begin:a,complete:a,progress:a,display:a,visibility:a,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0},init:function(e){$.data(e,&quot;velocity&quot;,{isSVG:g.isSVG(e),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:2,patch:2},debug:!1};t.pageYOffset!==a?(v.State.scrollAnchor=t,v.State.scrollPropertyLeft=&quot;pageXOffset&quot;,v.State.scrollPropertyTop=&quot;pageYOffset&quot;):(v.State.scrollAnchor=r.documentElement||r.body.parentNode||r.body,v.State.scrollPropertyLeft=&quot;scrollLeft&quot;,v.State.scrollPropertyTop=&quot;scrollTop&quot;);var b=function(){function e(e){return-e.tension*e.x-e.friction*e.v}function t(t,r,a){var n={x:t.x+a.dx*r,v:t.v+a.dv*r,tension:t.tension,friction:t.friction};return{dx:n.v,dv:e(n)}}function r(r,a){var n={dx:r.v,dv:e(r)},o=t(r,.5*a,n),i=t(r,.5*a,o),s=t(r,a,i),l=1/6*(n.dx+2*(o.dx+i.dx)+s.dx),u=1/6*(n.dv+2*(o.dv+i.dv)+s.dv);return r.x=r.x+l*a,r.v=r.v+u*a,r}return function a(e,t,n){var o={x:-1,v:0,tension:null,friction:null},i=[0],s=0,l=1e-4,u=.016,c,p,f;for(e=parseFloat(e)||500,t=parseFloat(t)||20,n=n||null,o.tension=e,o.friction=t,c=null!==n,c?(s=a(e,t),p=s/n*u):p=u;;)if(f=r(f||o,p),i.push(1+f.x),s+=16,!(Math.abs(f.x)&gt;l&amp;&amp;Math.abs(f.v)&gt;l))break;return c?function(e){return i[e*(i.length-1)|0]}:s}}();v.Easings={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},spring:function(e){return 1-Math.cos(4.5*e*Math.PI)*Math.exp(6*-e)}},$.each([[&quot;ease&quot;,[.25,.1,.25,1]],[&quot;ease-in&quot;,[.42,0,1,1]],[&quot;ease-out&quot;,[0,0,.58,1]],[&quot;ease-in-out&quot;,[.42,0,.58,1]],[&quot;easeInSine&quot;,[.47,0,.745,.715]],[&quot;easeOutSine&quot;,[.39,.575,.565,1]],[&quot;easeInOutSine&quot;,[.445,.05,.55,.95]],[&quot;easeInQuad&quot;,[.55,.085,.68,.53]],[&quot;easeOutQuad&quot;,[.25,.46,.45,.94]],[&quot;easeInOutQuad&quot;,[.455,.03,.515,.955]],[&quot;easeInCubic&quot;,[.55,.055,.675,.19]],[&quot;easeOutCubic&quot;,[.215,.61,.355,1]],[&quot;easeInOutCubic&quot;,[.645,.045,.355,1]],[&quot;easeInQuart&quot;,[.895,.03,.685,.22]],[&quot;easeOutQuart&quot;,[.165,.84,.44,1]],[&quot;easeInOutQuart&quot;,[.77,0,.175,1]],[&quot;easeInQuint&quot;,[.755,.05,.855,.06]],[&quot;easeOutQuint&quot;,[.23,1,.32,1]],[&quot;easeInOutQuint&quot;,[.86,0,.07,1]],[&quot;easeInExpo&quot;,[.95,.05,.795,.035]],[&quot;easeOutExpo&quot;,[.19,1,.22,1]],[&quot;easeInOutExpo&quot;,[1,0,0,1]],[&quot;easeInCirc&quot;,[.6,.04,.98,.335]],[&quot;easeOutCirc&quot;,[.075,.82,.165,1]],[&quot;easeInOutCirc&quot;,[.785,.135,.15,.86]]],function(e,t){v.Easings[t[0]]=l.apply(null,t[1])});var x=v.CSS={RegEx:{isHex:/^#([A-f\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\((.*)\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi},Lists:{colors:[&quot;fill&quot;,&quot;stroke&quot;,&quot;stopColor&quot;,&quot;color&quot;,&quot;backgroundColor&quot;,&quot;borderColor&quot;,&quot;borderTopColor&quot;,&quot;borderRightColor&quot;,&quot;borderBottomColor&quot;,&quot;borderLeftColor&quot;,&quot;outlineColor&quot;],transformsBase:[&quot;translateX&quot;,&quot;translateY&quot;,&quot;scale&quot;,&quot;scaleX&quot;,&quot;scaleY&quot;,&quot;skewX&quot;,&quot;skewY&quot;,&quot;rotateZ&quot;],transforms3D:[&quot;transformPerspective&quot;,&quot;translateZ&quot;,&quot;scaleZ&quot;,&quot;rotateX&quot;,&quot;rotateY&quot;]},Hooks:{templates:{textShadow:[&quot;Color X Y Blur&quot;,&quot;black 0px 0px 0px&quot;],boxShadow:[&quot;Color X Y Blur Spread&quot;,&quot;black 0px 0px 0px 0px&quot;],clip:[&quot;Top Right Bottom Left&quot;,&quot;0px 0px 0px 0px&quot;],backgroundPosition:[&quot;X Y&quot;,&quot;0% 0%&quot;],transformOrigin:[&quot;X Y Z&quot;,&quot;50% 50% 0px&quot;],perspectiveOrigin:[&quot;X Y&quot;,&quot;50% 50%&quot;]},registered:{},register:function(){for(var e=0;e&lt;x.Lists.colors.length;e++){var t=&quot;color&quot;===x.Lists.colors[e]?&quot;0 0 0 1&quot;:&quot;255 255 255 1&quot;;x.Hooks.templates[x.Lists.colors[e]]=[&quot;Red Green Blue Alpha&quot;,t]}var r,a,n;if(f)for(r in x.Hooks.templates){a=x.Hooks.templates[r],n=a[0].split(&quot; &quot;);var o=a[1].match(x.RegEx.valueSplit);&quot;Color&quot;===n[0]&amp;&amp;(n.push(n.shift()),o.push(o.shift()),x.Hooks.templates[r]=[n.join(&quot; &quot;),o.join(&quot; &quot;)])}for(r in x.Hooks.templates){a=x.Hooks.templates[r],n=a[0].split(&quot; &quot;);for(var e in n){var i=r+n[e],s=e;x.Hooks.registered[i]=[r,s]}}},getRoot:function(e){var t=x.Hooks.registered[e];return t?t[0]:e},cleanRootPropertyValue:function(e,t){return x.RegEx.valueUnwrap.test(t)&amp;&amp;(t=t.match(x.RegEx.valueUnwrap)[1]),x.Values.isCSSNullValue(t)&amp;&amp;(t=x.Hooks.templates[e][1]),t},extractValue:function(e,t){var r=x.Hooks.registered[e];if(r){var a=r[0],n=r[1];return t=x.Hooks.cleanRootPropertyValue(a,t),t.toString().match(x.RegEx.valueSplit)[n]}return t},injectValue:function(e,t,r){var a=x.Hooks.registered[e];if(a){var n=a[0],o=a[1],i,s;return r=x.Hooks.cleanRootPropertyValue(n,r),i=r.toString().match(x.RegEx.valueSplit),i[o]=t,s=i.join(&quot; &quot;)}return r}},Normalizations:{registered:{clip:function(e,t,r){switch(e){case&quot;name&quot;:return&quot;clip&quot;;case&quot;extract&quot;:var a;return x.RegEx.wrappedValueAlreadyExtracted.test(r)?a=r:(a=r.toString().match(x.RegEx.valueUnwrap),a=a?a[1].replace(/,(\s+)?/g,&quot; &quot;):r),a;case&quot;inject&quot;:return&quot;rect(&quot;+r+&quot;)&quot;}},blur:function(e,t,r){switch(e){case&quot;name&quot;:return v.State.isFirefox?&quot;filter&quot;:&quot;-webkit-filter&quot;;case&quot;extract&quot;:var a=parseFloat(r);if(!a&amp;&amp;0!==a){var n=r.toString().match(/blur\(([0-9]+[A-z]+)\)/i);a=n?n[1]:0}return a;case&quot;inject&quot;:return parseFloat(r)?&quot;blur(&quot;+r+&quot;)&quot;:&quot;none&quot;}},opacity:function(e,t,r){if(8&gt;=f)switch(e){case&quot;name&quot;:return&quot;filter&quot;;case&quot;extract&quot;:var a=r.toString().match(/alpha\(opacity=(.*)\)/i);return r=a?a[1]/100:1;case&quot;inject&quot;:return t.style.zoom=1,parseFloat(r)&gt;=1?&quot;&quot;:&quot;alpha(opacity=&quot;+parseInt(100*parseFloat(r),10)+&quot;)&quot;}else switch(e){case&quot;name&quot;:return&quot;opacity&quot;;case&quot;extract&quot;:return r;case&quot;inject&quot;:return r}}},register:function(){9&gt;=f||v.State.isGingerbread||(x.Lists.transformsBase=x.Lists.transformsBase.concat(x.Lists.transforms3D));for(var e=0;e&lt;x.Lists.transformsBase.length;e++)!function(){var t=x.Lists.transformsBase[e];x.Normalizations.registered[t]=function(e,r,n){switch(e){case&quot;name&quot;:return&quot;transform&quot;;case&quot;extract&quot;:return i(r)===a||i(r).transformCache[t]===a?/^scale/i.test(t)?1:0:i(r).transformCache[t].replace(/[()]/g,&quot;&quot;);case&quot;inject&quot;:var o=!1;switch(t.substr(0,t.length-1)){case&quot;translate&quot;:o=!/(%|px|em|rem|vw|vh|\d)$/i.test(n);break;case&quot;scal&quot;:case&quot;scale&quot;:v.State.isAndroid&amp;&amp;i(r).transformCache[t]===a&amp;&amp;1&gt;n&amp;&amp;(n=1),o=!/(\d)$/i.test(n);break;case&quot;skew&quot;:o=!/(deg|\d)$/i.test(n);break;case&quot;rotate&quot;:o=!/(deg|\d)$/i.test(n)}return o||(i(r).transformCache[t]=&quot;(&quot;+n+&quot;)&quot;),i(r).transformCache[t]}}}();for(var e=0;e&lt;x.Lists.colors.length;e++)!function(){var t=x.Lists.colors[e];x.Normalizations.registered[t]=function(e,r,n){switch(e){case&quot;name&quot;:return t;case&quot;extract&quot;:var o;if(x.RegEx.wrappedValueAlreadyExtracted.test(n))o=n;else{var i,s={black:&quot;rgb(0, 0, 0)&quot;,blue:&quot;rgb(0, 0, 255)&quot;,gray:&quot;rgb(128, 128, 128)&quot;,green:&quot;rgb(0, 128, 0)&quot;,red:&quot;rgb(255, 0, 0)&quot;,white:&quot;rgb(255, 255, 255)&quot;};/^[A-z]+$/i.test(n)?i=s[n]!==a?s[n]:s.black:x.RegEx.isHex.test(n)?i=&quot;rgb(&quot;+x.Values.hexToRgb(n).join(&quot; &quot;)+&quot;)&quot;:/^rgba?\(/i.test(n)||(i=s.black),o=(i||n).toString().match(x.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g,&quot; &quot;)}return 8&gt;=f||3!==o.split(&quot; &quot;).length||(o+=&quot; 1&quot;),o;case&quot;inject&quot;:return 8&gt;=f?4===n.split(&quot; &quot;).length&amp;&amp;(n=n.split(/\s+/).slice(0,3).join(&quot; &quot;)):3===n.split(&quot; &quot;).length&amp;&amp;(n+=&quot; 1&quot;),(8&gt;=f?&quot;rgb&quot;:&quot;rgba&quot;)+&quot;(&quot;+n.replace(/\s+/g,&quot;,&quot;).replace(/\.(\d)+(?=,)/g,&quot;&quot;)+&quot;)&quot;}}}()}},Names:{camelCase:function(e){return e.replace(/-(\w)/g,function(e,t){return t.toUpperCase()})},SVGAttribute:function(e){var t=&quot;width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2&quot;;return(f||v.State.isAndroid&amp;&amp;!v.State.isChrome)&amp;&amp;(t+=&quot;|transform&quot;),new RegExp(&quot;^(&quot;+t+&quot;)$&quot;,&quot;i&quot;).test(e)},prefixCheck:function(e){if(v.State.prefixMatches[e])return[v.State.prefixMatches[e],!0];for(var t=[&quot;&quot;,&quot;Webkit&quot;,&quot;Moz&quot;,&quot;ms&quot;,&quot;O&quot;],r=0,a=t.length;a&gt;r;r++){var n;if(n=0===r?e:t[r]+e.replace(/^\w/,function(e){return e.toUpperCase()}),g.isString(v.State.prefixElement.style[n]))return v.State.prefixMatches[e]=n,[n,!0]}return[e,!1]}},Values:{hexToRgb:function(e){var t=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,r=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,a;return e=e.replace(t,function(e,t,r,a){return t+t+r+r+a+a}),a=r.exec(e),a?[parseInt(a[1],16),parseInt(a[2],16),parseInt(a[3],16)]:[0,0,0]},isCSSNullValue:function(e){return 0==e||/^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e)},getUnitType:function(e){return/^(rotate|skew)/i.test(e)?&quot;deg&quot;:/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e)?&quot;&quot;:&quot;px&quot;},getDisplayType:function(e){var t=e&amp;&amp;e.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t)?&quot;inline&quot;:/^(li)$/i.test(t)?&quot;list-item&quot;:/^(tr)$/i.test(t)?&quot;table-row&quot;:/^(table)$/i.test(t)?&quot;table&quot;:/^(tbody)$/i.test(t)?&quot;table-row-group&quot;:&quot;block&quot;},addClass:function(e,t){e.classList?e.classList.add(t):e.className+=(e.className.length?&quot; &quot;:&quot;&quot;)+t},removeClass:function(e,t){e.classList?e.classList.remove(t):e.className=e.className.toString().replace(new RegExp(&quot;(^|\\s)&quot;+t.split(&quot; &quot;).join(&quot;|&quot;)+&quot;(\\s|$)&quot;,&quot;gi&quot;),&quot; &quot;)}},getPropertyValue:function(e,r,n,o){function s(e,r){function n(){u&amp;&amp;x.setPropertyValue(e,&quot;display&quot;,&quot;none&quot;)}var l=0;if(8&gt;=f)l=$.css(e,r);else{var u=!1;if(/^(width|height)$/.test(r)&amp;&amp;0===x.getPropertyValue(e,&quot;display&quot;)&amp;&amp;(u=!0,x.setPropertyValue(e,&quot;display&quot;,x.Values.getDisplayType(e))),!o){if(&quot;height&quot;===r&amp;&amp;&quot;border-box&quot;!==x.getPropertyValue(e,&quot;boxSizing&quot;).toString().toLowerCase()){var c=e.offsetHeight-(parseFloat(x.getPropertyValue(e,&quot;borderTopWidth&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;borderBottomWidth&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;paddingTop&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;paddingBottom&quot;))||0);return n(),c}if(&quot;width&quot;===r&amp;&amp;&quot;border-box&quot;!==x.getPropertyValue(e,&quot;boxSizing&quot;).toString().toLowerCase()){var p=e.offsetWidth-(parseFloat(x.getPropertyValue(e,&quot;borderLeftWidth&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;borderRightWidth&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;paddingLeft&quot;))||0)-(parseFloat(x.getPropertyValue(e,&quot;paddingRight&quot;))||0);return n(),p}}var d;d=i(e)===a?t.getComputedStyle(e,null):i(e).computedStyle?i(e).computedStyle:i(e).computedStyle=t.getComputedStyle(e,null),&quot;borderColor&quot;===r&amp;&amp;(r=&quot;borderTopColor&quot;),l=9===f&amp;&amp;&quot;filter&quot;===r?d.getPropertyValue(r):d[r],(&quot;&quot;===l||null===l)&amp;&amp;(l=e.style[r]),n()}if(&quot;auto&quot;===l&amp;&amp;/^(top|right|bottom|left)$/i.test(r)){var g=s(e,&quot;position&quot;);(&quot;fixed&quot;===g||&quot;absolute&quot;===g&amp;&amp;/top|left/i.test(r))&amp;&amp;(l=$(e).position()[r]+&quot;px&quot;)}return l}var l;if(x.Hooks.registered[r]){var u=r,c=x.Hooks.getRoot(u);n===a&amp;&amp;(n=x.getPropertyValue(e,x.Names.prefixCheck(c)[0])),x.Normalizations.registered[c]&amp;&amp;(n=x.Normalizations.registered[c](&quot;extract&quot;,e,n)),l=x.Hooks.extractValue(u,n)}else if(x.Normalizations.registered[r]){var p,d;p=x.Normalizations.registered[r](&quot;name&quot;,e),&quot;transform&quot;!==p&amp;&amp;(d=s(e,x.Names.prefixCheck(p)[0]),x.Values.isCSSNullValue(d)&amp;&amp;x.Hooks.templates[r]&amp;&amp;(d=x.Hooks.templates[r][1])),l=x.Normalizations.registered[r](&quot;extract&quot;,e,d)}if(!/^[\d-]/.test(l))if(i(e)&amp;&amp;i(e).isSVG&amp;&amp;x.Names.SVGAttribute(r))if(/^(height|width)$/i.test(r))try{l=e.getBBox()[r]}catch(g){l=0}else l=e.getAttribute(r);else l=s(e,x.Names.prefixCheck(r)[0]);return x.Values.isCSSNullValue(l)&amp;&amp;(l=0),v.debug&gt;=2&amp;&amp;console.log(&quot;Get &quot;+r+&quot;: &quot;+l),l},setPropertyValue:function(e,r,a,n,o){var s=r;if(&quot;scroll&quot;===r)o.container?o.container[&quot;scroll&quot;+o.direction]=a:&quot;Left&quot;===o.direction?t.scrollTo(a,o.alternateValue):t.scrollTo(o.alternateValue,a);else if(x.Normalizations.registered[r]&amp;&amp;&quot;transform&quot;===x.Normalizations.registered[r](&quot;name&quot;,e))x.Normalizations.registered[r](&quot;inject&quot;,e,a),s=&quot;transform&quot;,a=i(e).transformCache[r];else{if(x.Hooks.registered[r]){var l=r,u=x.Hooks.getRoot(r);n=n||x.getPropertyValue(e,u),a=x.Hooks.injectValue(l,a,n),r=u}if(x.Normalizations.registered[r]&amp;&amp;(a=x.Normalizations.registered[r](&quot;inject&quot;,e,a),r=x.Normalizations.registered[r](&quot;name&quot;,e)),s=x.Names.prefixCheck(r)[0],8&gt;=f)try{e.style[s]=a}catch(c){v.debug&amp;&amp;console.log(&quot;Browser does not support [&quot;+a+&quot;] for [&quot;+s+&quot;]&quot;)}else i(e)&amp;&amp;i(e).isSVG&amp;&amp;x.Names.SVGAttribute(r)?e.setAttribute(r,a):e.style[s]=a;v.debug&gt;=2&amp;&amp;console.log(&quot;Set &quot;+r+&quot; (&quot;+s+&quot;): &quot;+a)}return[s,a]},flushTransformCache:function(e){function t(t){return parseFloat(x.getPropertyValue(e,t))}var r=&quot;&quot;;if((f||v.State.isAndroid&amp;&amp;!v.State.isChrome)&amp;&amp;i(e).isSVG){var a={translate:[t(&quot;translateX&quot;),t(&quot;translateY&quot;)],skewX:[t(&quot;skewX&quot;)],skewY:[t(&quot;skewY&quot;)],scale:1!==t(&quot;scale&quot;)?[t(&quot;scale&quot;),t(&quot;scale&quot;)]:[t(&quot;scaleX&quot;),t(&quot;scaleY&quot;)],rotate:[t(&quot;rotateZ&quot;),0,0]};$.each(i(e).transformCache,function(e){/^translate/i.test(e)?e=&quot;translate&quot;:/^scale/i.test(e)?e=&quot;scale&quot;:/^rotate/i.test(e)&amp;&amp;(e=&quot;rotate&quot;),a[e]&amp;&amp;(r+=e+&quot;(&quot;+a[e].join(&quot; &quot;)+&quot;) &quot;,delete a[e])})}else{var n,o;$.each(i(e).transformCache,function(t){return n=i(e).transformCache[t],&quot;transformPerspective&quot;===t?(o=n,!0):(9===f&amp;&amp;&quot;rotateZ&quot;===t&amp;&amp;(t=&quot;rotate&quot;),void(r+=t+n+&quot; &quot;))}),o&amp;&amp;(r=&quot;perspective&quot;+o+&quot; &quot;+r)}x.setPropertyValue(e,&quot;transform&quot;,r)}};x.Hooks.register(),x.Normalizations.register(),v.hook=function(e,t,r){var n=a;return e=o(e),$.each(e,function(e,o){if(i(o)===a&amp;&amp;v.init(o),r===a)n===a&amp;&amp;(n=v.CSS.getPropertyValue(o,t));else{var s=v.CSS.setPropertyValue(o,t,r);&quot;transform&quot;===s[0]&amp;&amp;v.CSS.flushTransformCache(o),n=s}}),n};var S=function(){function e(){return l?T.promise||null:f}function n(){function e(e){function p(e,t){var r=a,i=a,s=a;return g.isArray(e)?(r=e[0],!g.isArray(e[1])&amp;&amp;/^[\d-]/.test(e[1])||g.isFunction(e[1])||x.RegEx.isHex.test(e[1])?s=e[1]:(g.isString(e[1])&amp;&amp;!x.RegEx.isHex.test(e[1])||g.isArray(e[1]))&amp;&amp;(i=t?e[1]:u(e[1],o.duration),e[2]!==a&amp;&amp;(s=e[2]))):r=e,t||(i=i||o.easing),g.isFunction(r)&amp;&amp;(r=r.call(n,w,P)),g.isFunction(s)&amp;&amp;(s=s.call(n,w,P)),[r||0,i,s]}function f(e,t){var r,a;return a=(t||&quot;0&quot;).toString().toLowerCase().replace(/[%A-z]+$/,function(e){return r=e,&quot;&quot;}),r||(r=x.Values.getUnitType(e)),[a,r]}function d(){var e={myParent:n.parentNode||r.body,position:x.getPropertyValue(n,&quot;position&quot;),fontSize:x.getPropertyValue(n,&quot;fontSize&quot;)},a=e.position===N.lastPosition&amp;&amp;e.myParent===N.lastParent,o=e.fontSize===N.lastFontSize;N.lastParent=e.myParent,N.lastPosition=e.position,N.lastFontSize=e.fontSize;var s=100,l={};if(o&amp;&amp;a)l.emToPx=N.lastEmToPx,l.percentToPxWidth=N.lastPercentToPxWidth,l.percentToPxHeight=N.lastPercentToPxHeight;else{var u=i(n).isSVG?r.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;rect&quot;):r.createElement(&quot;div&quot;);v.init(u),e.myParent.appendChild(u),$.each([&quot;overflow&quot;,&quot;overflowX&quot;,&quot;overflowY&quot;],function(e,t){v.CSS.setPropertyValue(u,t,&quot;hidden&quot;)}),v.CSS.setPropertyValue(u,&quot;position&quot;,e.position),v.CSS.setPropertyValue(u,&quot;fontSize&quot;,e.fontSize),v.CSS.setPropertyValue(u,&quot;boxSizing&quot;,&quot;content-box&quot;),$.each([&quot;minWidth&quot;,&quot;maxWidth&quot;,&quot;width&quot;,&quot;minHeight&quot;,&quot;maxHeight&quot;,&quot;height&quot;],function(e,t){v.CSS.setPropertyValue(u,t,s+&quot;%&quot;)}),v.CSS.setPropertyValue(u,&quot;paddingLeft&quot;,s+&quot;em&quot;),l.percentToPxWidth=N.lastPercentToPxWidth=(parseFloat(x.getPropertyValue(u,&quot;width&quot;,null,!0))||1)/s,l.percentToPxHeight=N.lastPercentToPxHeight=(parseFloat(x.getPropertyValue(u,&quot;height&quot;,null,!0))||1)/s,l.emToPx=N.lastEmToPx=(parseFloat(x.getPropertyValue(u,&quot;paddingLeft&quot;))||1)/s,e.myParent.removeChild(u)}return null===N.remToPx&amp;&amp;(N.remToPx=parseFloat(x.getPropertyValue(r.body,&quot;fontSize&quot;))||16),null===N.vwToPx&amp;&amp;(N.vwToPx=parseFloat(t.innerWidth)/100,N.vhToPx=parseFloat(t.innerHeight)/100),l.remToPx=N.remToPx,l.vwToPx=N.vwToPx,l.vhToPx=N.vhToPx,v.debug&gt;=1&amp;&amp;console.log(&quot;Unit ratios: &quot;+JSON.stringify(l),n),l}if(o.begin&amp;&amp;0===w)try{o.begin.call(m,m)}catch(y){setTimeout(function(){throw y},1)}if(&quot;scroll&quot;===k){var S=/^x$/i.test(o.axis)?&quot;Left&quot;:&quot;Top&quot;,V=parseFloat(o.offset)||0,C,A,F;o.container?g.isWrapped(o.container)||g.isNode(o.container)?(o.container=o.container[0]||o.container,C=o.container[&quot;scroll&quot;+S],F=C+$(n).position()[S.toLowerCase()]+V):o.container=null:(C=v.State.scrollAnchor[v.State[&quot;scrollProperty&quot;+S]],A=v.State.scrollAnchor[v.State[&quot;scrollProperty&quot;+(&quot;Left&quot;===S?&quot;Top&quot;:&quot;Left&quot;)]],F=$(n).offset()[S.toLowerCase()]+V),s={scroll:{rootPropertyValue:!1,startValue:C,currentValue:C,endValue:F,unitType:&quot;&quot;,easing:o.easing,scrollData:{container:o.container,direction:S,alternateValue:A}},element:n},v.debug&amp;&amp;console.log(&quot;tweensContainer (scroll): &quot;,s.scroll,n)}else if(&quot;reverse&quot;===k){if(!i(n).tweensContainer)return void $.dequeue(n,o.queue);&quot;none&quot;===i(n).opts.display&amp;&amp;(i(n).opts.display=&quot;auto&quot;),&quot;hidden&quot;===i(n).opts.visibility&amp;&amp;(i(n).opts.visibility=&quot;visible&quot;),i(n).opts.loop=!1,i(n).opts.begin=null,i(n).opts.complete=null,b.easing||delete o.easing,b.duration||delete o.duration,o=$.extend({},i(n).opts,o);var E=$.extend(!0,{},i(n).tweensContainer);for(var j in E)if(&quot;element&quot;!==j){var H=E[j].startValue;E[j].startValue=E[j].currentValue=E[j].endValue,E[j].endValue=H,g.isEmptyObject(b)||(E[j].easing=o.easing),v.debug&amp;&amp;console.log(&quot;reverse tweensContainer (&quot;+j+&quot;): &quot;+JSON.stringify(E[j]),n)}s=E}else if(&quot;start&quot;===k){var E;i(n).tweensContainer&amp;&amp;i(n).isAnimating===!0&amp;&amp;(E=i(n).tweensContainer),$.each(h,function(e,t){if(RegExp(&quot;^&quot;+x.Lists.colors.join(&quot;$|^&quot;)+&quot;$&quot;).test(e)){var r=p(t,!0),n=r[0],o=r[1],i=r[2];if(x.RegEx.isHex.test(n)){for(var s=[&quot;Red&quot;,&quot;Green&quot;,&quot;Blue&quot;],l=x.Values.hexToRgb(n),u=i?x.Values.hexToRgb(i):a,c=0;c&lt;s.length;c++){var f=[l[c]];o&amp;&amp;f.push(o),u!==a&amp;&amp;f.push(u[c]),h[e+s[c]]=f}delete h[e]}}});for(var R in h){var O=p(h[R]),z=O[0],q=O[1],M=O[2];R=x.Names.camelCase(R);var I=x.Hooks.getRoot(R),B=!1;if(i(n).isSVG||&quot;tween&quot;===I||x.Names.prefixCheck(I)[1]!==!1||x.Normalizations.registered[I]!==a){(o.display!==a&amp;&amp;null!==o.display&amp;&amp;&quot;none&quot;!==o.display||o.visibility!==a&amp;&amp;&quot;hidden&quot;!==o.visibility)&amp;&amp;/opacity|filter/.test(R)&amp;&amp;!M&amp;&amp;0!==z&amp;&amp;(M=0),o._cacheValues&amp;&amp;E&amp;&amp;E[R]?(M===a&amp;&amp;(M=E[R].endValue+E[R].unitType),B=i(n).rootPropertyValueCache[I]):x.Hooks.registered[R]?M===a?(B=x.getPropertyValue(n,I),M=x.getPropertyValue(n,R,B)):B=x.Hooks.templates[I][1]:M===a&amp;&amp;(M=x.getPropertyValue(n,R));var W,G,D,X=!1;if(W=f(R,M),M=W[0],D=W[1],W=f(R,z),z=W[0].replace(/^([+-\/*])=/,function(e,t){return X=t,&quot;&quot;}),G=W[1],M=parseFloat(M)||0,z=parseFloat(z)||0,&quot;%&quot;===G&amp;&amp;(/^(fontSize|lineHeight)$/.test(R)?(z/=100,G=&quot;em&quot;):/^scale/.test(R)?(z/=100,G=&quot;&quot;):/(Red|Green|Blue)$/i.test(R)&amp;&amp;(z=z/100*255,G=&quot;&quot;)),/[\/*]/.test(X))G=D;else if(D!==G&amp;&amp;0!==M)if(0===z)G=D;else{l=l||d();var Y=/margin|padding|left|right|width|text|word|letter/i.test(R)||/X$/.test(R)||&quot;x&quot;===R?&quot;x&quot;:&quot;y&quot;;switch(D){case&quot;%&quot;:M*=&quot;x&quot;===Y?l.percentToPxWidth:l.percentToPxHeight;break;case&quot;px&quot;:break;default:M*=l[D+&quot;ToPx&quot;]}switch(G){case&quot;%&quot;:M*=1/(&quot;x&quot;===Y?l.percentToPxWidth:l.percentToPxHeight);break;case&quot;px&quot;:break;default:M*=1/l[G+&quot;ToPx&quot;]}}switch(X){case&quot;+&quot;:z=M+z;break;case&quot;-&quot;:z=M-z;break;case&quot;*&quot;:z=M*z;break;case&quot;/&quot;:z=M/z}s[R]={rootPropertyValue:B,startValue:M,currentValue:M,endValue:z,unitType:G,easing:q},v.debug&amp;&amp;console.log(&quot;tweensContainer (&quot;+R+&quot;): &quot;+JSON.stringify(s[R]),n)}else v.debug&amp;&amp;console.log(&quot;Skipping [&quot;+I+&quot;] due to a lack of browser support.&quot;)}s.element=n}s.element&amp;&amp;(x.Values.addClass(n,&quot;velocity-animating&quot;),L.push(s),&quot;&quot;===o.queue&amp;&amp;(i(n).tweensContainer=s,i(n).opts=o),i(n).isAnimating=!0,w===P-1?(v.State.calls.push([L,m,o,null,T.resolver]),v.State.isTicking===!1&amp;&amp;(v.State.isTicking=!0,c())):w++)}var n=this,o=$.extend({},v.defaults,b),s={},l;switch(i(n)===a&amp;&amp;v.init(n),parseFloat(o.delay)&amp;&amp;o.queue!==!1&amp;&amp;$.queue(n,o.queue,function(e){v.velocityQueueEntryFlag=!0,i(n).delayTimer={setTimeout:setTimeout(e,parseFloat(o.delay)),next:e}}),o.duration.toString().toLowerCase()){case&quot;fast&quot;:o.duration=200;break;case&quot;normal&quot;:o.duration=y;break;case&quot;slow&quot;:o.duration=600;break;default:o.duration=parseFloat(o.duration)||1}v.mock!==!1&amp;&amp;(v.mock===!0?o.duration=o.delay=1:(o.duration*=parseFloat(v.mock)||1,o.delay*=parseFloat(v.mock)||1)),o.easing=u(o.easing,o.duration),o.begin&amp;&amp;!g.isFunction(o.begin)&amp;&amp;(o.begin=null),o.progress&amp;&amp;!g.isFunction(o.progress)&amp;&amp;(o.progress=null),o.complete&amp;&amp;!g.isFunction(o.complete)&amp;&amp;(o.complete=null),o.display!==a&amp;&amp;null!==o.display&amp;&amp;(o.display=o.display.toString().toLowerCase(),&quot;auto&quot;===o.display&amp;&amp;(o.display=v.CSS.Values.getDisplayType(n))),o.visibility!==a&amp;&amp;null!==o.visibility&amp;&amp;(o.visibility=o.visibility.toString().toLowerCase()),o.mobileHA=o.mobileHA&amp;&amp;v.State.isMobile&amp;&amp;!v.State.isGingerbread,o.queue===!1?o.delay?setTimeout(e,o.delay):e():$.queue(n,o.queue,function(t,r){return r===!0?(T.promise&amp;&amp;T.resolver(m),!0):(v.velocityQueueEntryFlag=!0,void e(t))}),&quot;&quot;!==o.queue&amp;&amp;&quot;fx&quot;!==o.queue||&quot;inprogress&quot;===$.queue(n)[0]||$.dequeue(n)}var s=arguments[0]&amp;&amp;(arguments[0].p||$.isPlainObject(arguments[0].properties)&amp;&amp;!arguments[0].properties.names||g.isString(arguments[0].properties)),l,f,d,m,h,b;if(g.isWrapped(this)?(l=!1,d=0,m=this,f=this):(l=!0,d=1,m=s?arguments[0].elements||arguments[0].e:arguments[0]),m=o(m)){s?(h=arguments[0].properties||arguments[0].p,b=arguments[0].options||arguments[0].o):(h=arguments[d],b=arguments[d+1]);var P=m.length,w=0;if(!/^(stop|finish)$/i.test(h)&amp;&amp;!$.isPlainObject(b)){var V=d+1;b={};for(var C=V;C&lt;arguments.length;C++)g.isArray(arguments[C])||!/^(fast|normal|slow)$/i.test(arguments[C])&amp;&amp;!/^\d/.test(arguments[C])?g.isString(arguments[C])||g.isArray(arguments[C])?b.easing=arguments[C]:g.isFunction(arguments[C])&amp;&amp;(b.complete=arguments[C]):b.duration=arguments[C]}var T={promise:null,resolver:null,rejecter:null};l&amp;&amp;v.Promise&amp;&amp;(T.promise=new v.Promise(function(e,t){T.resolver=e,T.rejecter=t}));var k;switch(h){case&quot;scroll&quot;:k=&quot;scroll&quot;;break;case&quot;reverse&quot;:k=&quot;reverse&quot;;break;case&quot;finish&quot;:case&quot;stop&quot;:$.each(m,function(e,t){i(t)&amp;&amp;i(t).delayTimer&amp;&amp;(clearTimeout(i(t).delayTimer.setTimeout),i(t).delayTimer.next&amp;&amp;i(t).delayTimer.next(),delete i(t).delayTimer)});var A=[];return $.each(v.State.calls,function(e,t){t&amp;&amp;$.each(t[1],function(r,n){var o=b===a?&quot;&quot;:b;return o===!0||t[2].queue===o||b===a&amp;&amp;t[2].queue===!1?void $.each(m,function(r,a){a===n&amp;&amp;((b===!0||g.isString(b))&amp;&amp;($.each($.queue(a,g.isString(b)?b:&quot;&quot;),function(e,t){g.isFunction(t)&amp;&amp;t(null,!0)}),$.queue(a,g.isString(b)?b:&quot;&quot;,[])),&quot;stop&quot;===h?(i(a)&amp;&amp;i(a).tweensContainer&amp;&amp;o!==!1&amp;&amp;$.each(i(a).tweensContainer,function(e,t){t.endValue=t.currentValue&#x000A;}),A.push(e)):&quot;finish&quot;===h&amp;&amp;(t[2].duration=1))}):!0})}),&quot;stop&quot;===h&amp;&amp;($.each(A,function(e,t){p(t,!0)}),T.promise&amp;&amp;T.resolver(m)),e();default:if(!$.isPlainObject(h)||g.isEmptyObject(h)){if(g.isString(h)&amp;&amp;v.Redirects[h]){var F=$.extend({},b),E=F.duration,j=F.delay||0;return F.backwards===!0&amp;&amp;(m=$.extend(!0,[],m).reverse()),$.each(m,function(e,t){parseFloat(F.stagger)?F.delay=j+parseFloat(F.stagger)*e:g.isFunction(F.stagger)&amp;&amp;(F.delay=j+F.stagger.call(t,e,P)),F.drag&amp;&amp;(F.duration=parseFloat(E)||(/^(callout|transition)/.test(h)?1e3:y),F.duration=Math.max(F.duration*(F.backwards?1-e/P:(e+1)/P),.75*F.duration,200)),v.Redirects[h].call(t,t,F||{},e,P,m,T.promise?T:a)}),e()}var H=&quot;Velocity: First argument (&quot;+h+&quot;) was not a property map, a known action, or a registered redirect. Aborting.&quot;;return T.promise?T.rejecter(new Error(H)):console.log(H),e()}k=&quot;start&quot;}var N={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},L=[];$.each(m,function(e,t){g.isNode(t)&amp;&amp;n.call(t)});var F=$.extend({},v.defaults,b),R;if(F.loop=parseInt(F.loop),R=2*F.loop-1,F.loop)for(var O=0;R&gt;O;O++){var z={delay:F.delay,progress:F.progress};O===R-1&amp;&amp;(z.display=F.display,z.visibility=F.visibility,z.complete=F.complete),S(m,&quot;reverse&quot;,z)}return e()}};v=$.extend(S,v),v.animate=S;var P=t.requestAnimationFrame||d;return v.State.isMobile||r.hidden===a||r.addEventListener(&quot;visibilitychange&quot;,function(){r.hidden?(P=function(e){return setTimeout(function(){e(!0)},16)},c()):P=t.requestAnimationFrame||d}),e.Velocity=v,e!==t&amp;&amp;(e.fn.velocity=S,e.fn.velocity.defaults=v.defaults),$.each([&quot;Down&quot;,&quot;Up&quot;],function(e,t){v.Redirects[&quot;slide&quot;+t]=function(e,r,n,o,i,s){var l=$.extend({},r),u=l.begin,c=l.complete,p={height:&quot;&quot;,marginTop:&quot;&quot;,marginBottom:&quot;&quot;,paddingTop:&quot;&quot;,paddingBottom:&quot;&quot;},f={};l.display===a&amp;&amp;(l.display=&quot;Down&quot;===t?&quot;inline&quot;===v.CSS.Values.getDisplayType(e)?&quot;inline-block&quot;:&quot;block&quot;:&quot;none&quot;),l.begin=function(){u&amp;&amp;u.call(i,i);for(var r in p){f[r]=e.style[r];var a=v.CSS.getPropertyValue(e,r);p[r]=&quot;Down&quot;===t?[a,0]:[0,a]}f.overflow=e.style.overflow,e.style.overflow=&quot;hidden&quot;},l.complete=function(){for(var t in f)e.style[t]=f[t];c&amp;&amp;c.call(i,i),s&amp;&amp;s.resolver(i)},v(e,p,l)}}),$.each([&quot;In&quot;,&quot;Out&quot;],function(e,t){v.Redirects[&quot;fade&quot;+t]=function(e,r,n,o,i,s){var l=$.extend({},r),u={opacity:&quot;In&quot;===t?1:0},c=l.complete;l.complete=n!==o-1?l.begin=null:function(){c&amp;&amp;c.call(i,i),s&amp;&amp;s.resolver(i)},l.display===a&amp;&amp;(l.display=&quot;In&quot;===t?&quot;auto&quot;:&quot;none&quot;),v(this,u,l)}}),v}(window.jQuery||window.Zepto||window,window,document)});</textarea>
<a class="ui button" href="#" id="copy-text" style="border-left: none;">一键复制</a>
<a class="ui button edit-blob" href="/kangjian_haha/blog_project/edit/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js" title="">编辑</a>
<a class="ui button web-ide" href="/-/ide/project/kangjian_haha/blog_project/edit/master/-/themes/hexo-theme-next/source/lib/velocity/velocity.min.js" target="_blank">Web IDE</a>
<a class="ui button edit-raw" href="/kangjian_haha/blog_project/raw/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js" target="_blank">原始数据</a>
<a class="ui button edit-blame" href="/kangjian_haha/blog_project/blame/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js">按行查看</a>
<a class="ui button edit-history" href="/kangjian_haha/blog_project/commits/master/themes/hexo-theme-next/source/lib/velocity/velocity.min.js">历史</a>
</div>
<script>
  "use strict";
  try {
    if((gon.wait_fork!=undefined && gon.wait_fork==true) || (gon.wait_fetch!=undefined && gon.wait_fetch==true)){
      $('.edit-blob').popup({content:"当前仓库正在后台处理中,暂时无法编辑", on: 'hover', delay: { show: 200, hide: 200 }});
      $('.edit-blob').click(function(e){
        e.preventDefault();
      })
    }
  
    var setUrl = function() {
      var params = window.location.search
      if (params==undefined || $.trim(params).length==0) return;
      $('span.options').children('.basic').find('a').each(function(index,ele){
        var origin_href = $(ele).attr('href');
        if (origin_href!="#" && origin_href.indexOf('?') == -1){
          $(ele).attr('href',origin_href+params);
        }
      });
    }
  
    setUrl();
  
    var clipboard = null,
        $btncopy  = $("#copy-text");
  
    clipboard = new Clipboard("#copy-text", {
      text: function(trigger) {
        return $("#blob_raw").val();
      }
    })
  
    clipboard.on('success', function(e) {
      $btncopy.popup('hide');
      $btncopy.popup('destroy');
      $btncopy.popup({content: '已复制', position: 'bottom center'});
      $btncopy.popup('show');
    })
  
    clipboard.on('error', function(e) {
      var giteeModal = new GiteeModalHelper({okText: '确定'});
      giteeModal.alert("一键复制", '复制失败，请手动复制');
    })
  
    $(function() {
      $btncopy.popup({
        content: '点击复制',
        position: 'bottom center'
      })
    })
  
  } catch (error) {
    console.log('blob/action error:' + error);
  }
  
  $('.disabled-edit-readonly').popup({
    content: "只读文件不可编辑",
    className: {
      popup: 'ui popup',
    },
    position: 'bottom center',
  })
  $('.disabled-edit-readonly').click(() => {
    return false
  })
</script>
<style>
  .disabled-edit-readonly {
    background-color: #dcddde !important;
    color: rgba(0, 0, 0, 0.4) !important;
    opacity: 0.3 !important;
    background-image: none !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important; }
</style>
</div>
</div>
<div class='contributor-description'><span class='recent-commit' style='margin-top: 0.7rem'>
<a class="commit-author-link " href="/kangjian_haha">kangjian_haha</a>
<span>提交于</span>
<span class='timeago commit-date' title='2020-06-13 00:40:23 +0800'>
2020-06-13 00:40
</span>
.
<a href="/kangjian_haha/blog_project/commit/4daa458b633597b2534c05b36bd5f25d4944f612">bok</a>
</span>
</div>
</div>
<div class='clearfix'></div>
<div class='file_content code'>
<div class='lines white'>
<div class='line-numbers'><a href='#L1' id='L1'>1</a><a href='#L2' id='L2'>2</a><a href='#L3' id='L3'>3</a><a href='#L4' id='L4'>4</a></div><div class="highlight"><pre class=""><div class='line' id='LC1'><span class="cm">/*! VelocityJS.org (1.2.2). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */</span>&#x000A;</div><div class='line' id='LC2'><span class="cm">/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */</span>&#x000A;</div><div class='line' id='LC3'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span><span class="dl">"</span><span class="s2">function</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="o">||</span><span class="nx">$</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="o">!</span><span class="mi">1</span><span class="p">:</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">?</span><span class="o">!</span><span class="mi">0</span><span class="p">:</span><span class="dl">"</span><span class="s2">array</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">||</span><span class="dl">"</span><span class="s2">number</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">-</span><span class="mi">1</span> <span class="k">in</span> <span class="nx">e</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">){</span><span class="kd">var</span> <span class="nx">$</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)};</span><span class="nx">$</span><span class="p">.</span><span class="nx">isWindow</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nb">window</span><span class="p">},</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">?</span><span class="nx">e</span><span class="o">+</span><span class="dl">""</span><span class="p">:</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">||</span><span class="dl">"</span><span class="s2">function</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)]</span><span class="o">||</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="p">:</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">},</span><span class="nx">$</span><span class="p">.</span><span class="nx">isArray</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="dl">"</span><span class="s2">array</span><span class="dl">"</span><span class="o">===</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">||</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">!==</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||</span><span class="nx">$</span><span class="p">.</span><span class="nx">isWindow</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="kd">constructor</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">constructor</span><span class="dl">"</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="kd">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="dl">"</span><span class="s2">isPrototypeOf</span><span class="dl">"</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">a</span><span class="p">),</span><span class="nx">n</span><span class="o">!==!</span><span class="mi">1</span><span class="p">);</span><span class="nx">o</span><span class="o">++</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">a</span><span class="p">),</span><span class="nx">n</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">break</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">]),</span><span class="nx">n</span><span class="o">!==!</span><span class="mi">1</span><span class="p">);</span><span class="nx">o</span><span class="o">++</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">o</span><span class="p">]),</span><span class="nx">n</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">$</span><span class="p">.</span><span class="nx">expando</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">o</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">[</span><span class="nx">t</span><span class="p">]}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">$</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">$</span><span class="p">.</span><span class="nx">expando</span><span class="p">]</span><span class="o">=++</span><span class="nx">$</span><span class="p">.</span><span class="nx">uuid</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">r</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">}},</span><span class="nx">$</span><span class="p">.</span><span class="nx">removeData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">$</span><span class="p">.</span><span class="nx">expando</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">delete</span> <span class="nx">n</span><span class="p">[</span><span class="nx">t</span><span class="p">]})},</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">u</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="dl">"</span><span class="s2">boolean</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">||</span><span class="p">{},</span><span class="nx">s</span><span class="o">++</span><span class="p">),</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">function</span><span class="dl">"</span><span class="o">!==</span><span class="nx">$</span><span class="p">.</span><span class="nx">type</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="p">{}),</span><span class="nx">s</span><span class="o">===</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">s</span><span class="o">--</span><span class="p">);</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">s</span><span class="p">]))</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">n</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">i</span><span class="o">!==</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">r</span><span class="p">)))?(</span><span class="nx">t</span><span class="p">?(</span><span class="nx">t</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">e</span><span class="p">:[]):</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">e</span><span class="p">:{},</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">r</span><span class="p">)):</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">));</span><span class="k">return</span> <span class="nx">i</span><span class="p">},</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="o">||</span><span class="p">[];</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nb">Object</span><span class="p">(</span><span class="nx">e</span><span class="p">))?</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=+</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="o">!==</span><span class="nx">r</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">];)</span><span class="nx">e</span><span class="p">[</span><span class="nx">n</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">}(</span><span class="nx">a</span><span class="p">,</span><span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">?[</span><span class="nx">e</span><span class="p">]:</span><span class="nx">e</span><span class="p">):[].</span><span class="nx">push</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)),</span><span class="nx">a</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">r</span><span class="o">||</span><span class="dl">"</span><span class="s2">fx</span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">queue</span><span class="dl">"</span><span class="p">;</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">?(</span><span class="o">!</span><span class="nx">o</span><span class="o">||</span><span class="nx">$</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">)?</span><span class="nx">o</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">)):</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">o</span><span class="p">):</span><span class="nx">o</span><span class="o">||</span><span class="p">[]}},</span><span class="nx">$</span><span class="p">.</span><span class="nx">dequeue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">?[</span><span class="nx">e</span><span class="p">]:</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="o">||</span><span class="dl">"</span><span class="s2">fx</span><span class="dl">"</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="dl">"</span><span class="s2">inprogress</span><span class="dl">"</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">()),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="dl">"</span><span class="s2">fx</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="dl">"</span><span class="s2">inprogress</span><span class="dl">"</span><span class="p">),</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">$</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">)}))})},</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="na">init</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">;</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">"</span><span class="s2">Not a DOM node.</span><span class="dl">"</span><span class="p">)},</span><span class="na">offset</span><span class="p">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">?</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">():{</span><span class="na">top</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">left</span><span class="p">:</span><span class="mi">0</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="na">top</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="na">left</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nb">document</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">)}},</span><span class="na">position</span><span class="p">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetParent</span><span class="o">||</span><span class="nb">document</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">html</span><span class="dl">"</span><span class="o">===!</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">static</span><span class="dl">"</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="p">;)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="nb">document</span><span class="p">}</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="sr">/^</span><span class="se">(?:</span><span class="sr">body|html</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">)?{</span><span class="na">top</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">left</span><span class="p">:</span><span class="mi">0</span><span class="p">}:</span><span class="nx">$</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">offset</span><span class="p">();</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">top</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">marginTop</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">left</span><span class="o">-=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">marginLeft</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderTopWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">borderLeftWidth</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">),{</span><span class="na">top</span><span class="p">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="na">left</span><span class="p">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">}}};</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">{};</span><span class="nx">$</span><span class="p">.</span><span class="nx">expando</span><span class="o">=</span><span class="dl">"</span><span class="s2">velocity</span><span class="dl">"</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">$</span><span class="p">.</span><span class="nx">uuid</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="dl">"</span><span class="s2">Boolean Number String Function Array Date RegExp Object Error</span><span class="dl">"</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="dl">"</span><span class="s2">[object </span><span class="dl">"</span><span class="o">+</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">+</span><span class="dl">"</span><span class="s2">]</span><span class="dl">"</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">s</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">fn</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">Velocity</span><span class="o">=</span><span class="p">{</span><span class="na">Utilities</span><span class="p">:</span><span class="nx">$</span><span class="p">}}}(</span><span class="nb">window</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="p">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">e</span><span class="p">():</span><span class="dl">"</span><span class="s2">function</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="p">?</span><span class="nx">define</span><span class="p">(</span><span class="nx">e</span><span class="p">):</span><span class="nx">e</span><span class="p">()}(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="o">++</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">isWrapped</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">e</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">):</span><span class="nx">g</span><span class="p">.</span><span class="nx">isNode</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">velocity</span><span class="dl">"</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="nx">a</span><span class="p">:</span><span class="nx">t</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">t</span><span class="o">*</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">e</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="mi">6</span><span class="o">*</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span><span class="p">((</span><span class="nx">o</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">))</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">))</span><span class="o">*</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="nx">o</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">(</span><span class="nx">t</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="o">++</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">o</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="nx">t</span><span class="p">;</span><span class="nx">r</span><span class="o">-=</span><span class="nx">i</span><span class="o">/</span><span class="nx">o</span><span class="p">}</span><span class="k">return</span> <span class="nx">r</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">;</span><span class="o">++</span><span class="nx">t</span><span class="p">)</span><span class="nx">w</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">t</span><span class="o">*</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">do</span> <span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="o">-</span><span class="nx">r</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">?</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">:</span><span class="nx">r</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">h</span><span class="o">&amp;&amp;++</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">v</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">!=</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&lt;=</span><span class="nx">t</span><span class="p">;</span><span class="o">++</span><span class="nx">n</span><span class="p">)</span><span class="nx">r</span><span class="o">+=</span><span class="nx">x</span><span class="p">;</span><span class="o">--</span><span class="nx">n</span><span class="p">;</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">-</span><span class="nx">w</span><span class="p">[</span><span class="nx">n</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">w</span><span class="p">[</span><span class="nx">n</span><span class="p">]),</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">x</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">l</span><span class="o">&gt;=</span><span class="nx">y</span><span class="p">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">):</span><span class="mi">0</span><span class="o">==</span><span class="nx">l</span><span class="p">?</span><span class="nx">s</span><span class="p">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="nx">x</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">V</span><span class="o">=!</span><span class="mi">0</span><span class="p">,(</span><span class="nx">e</span><span class="o">!=</span><span class="nx">r</span><span class="o">||</span><span class="nx">a</span><span class="o">!=</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="p">.</span><span class="mi">001</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">7</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">11</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">S</span><span class="o">=</span><span class="dl">"</span><span class="s2">Float32Array</span><span class="dl">"</span><span class="k">in</span> <span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">4</span><span class="o">!==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">4</span><span class="o">&gt;</span><span class="nx">P</span><span class="p">;</span><span class="o">++</span><span class="nx">P</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">number</span><span class="dl">"</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">P</span><span class="p">]</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">P</span><span class="p">])</span><span class="o">||!</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">P</span><span class="p">]))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">S</span><span class="p">?</span><span class="k">new</span> <span class="nb">Float32Array</span><span class="p">(</span><span class="nx">b</span><span class="p">):</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">V</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">V</span><span class="o">||</span><span class="nx">g</span><span class="p">(),</span><span class="nx">e</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="nx">n</span><span class="p">?</span><span class="nx">t</span><span class="p">:</span><span class="mi">0</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="mi">0</span><span class="p">:</span><span class="mi">1</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="mi">1</span><span class="p">:</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">)};</span><span class="nx">C</span><span class="p">.</span><span class="nx">getControlPoints</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[{</span><span class="na">x</span><span class="p">:</span><span class="nx">e</span><span class="p">,</span><span class="na">y</span><span class="p">:</span><span class="nx">r</span><span class="p">},{</span><span class="na">x</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">y</span><span class="p">:</span><span class="nx">n</span><span class="p">}]};</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="dl">"</span><span class="s2">generateBezier(</span><span class="dl">"</span><span class="o">+</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">]</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">;</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">T</span><span class="p">},</span><span class="nx">C</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">v</span><span class="p">.</span><span class="nx">Easings</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">):</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">?</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">):</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">2</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">concat</span><span class="p">([</span><span class="nx">t</span><span class="p">])):</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">4</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">):</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">r</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">Easings</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">easing</span><span class="p">]?</span><span class="nx">v</span><span class="p">.</span><span class="nx">defaults</span><span class="p">.</span><span class="nx">easing</span><span class="p">:</span><span class="nx">h</span><span class="p">),</span><span class="nx">r</span><span class="p">}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="mi">1</span><span class="nx">e4</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">o</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">d</span><span class="o">=!!</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">o</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="o">-</span><span class="mi">16</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">((</span><span class="nx">t</span><span class="o">-</span><span class="nx">f</span><span class="p">)</span><span class="o">/</span><span class="nx">u</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="nx">S</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">w</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="o">!==</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">flex</span><span class="dl">"</span><span class="o">===</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="p">[</span><span class="dl">"</span><span class="s2">-webkit-box</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">-moz-box</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">-ms-flexbox</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">-webkit-flex</span><span class="dl">"</span><span class="p">];</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">,</span><span class="nx">t</span><span class="p">)})}</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="p">)}</span><span class="nx">u</span><span class="p">.</span><span class="nx">visibility</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="o">!==</span><span class="nx">u</span><span class="p">.</span><span class="nx">visibility</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="dl">"</span><span class="s2">visibility</span><span class="dl">"</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">visibility</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">T</span> <span class="k">in</span> <span class="nx">S</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">element</span><span class="dl">"</span><span class="o">!==</span><span class="nx">T</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">S</span><span class="p">[</span><span class="nx">T</span><span class="p">],</span><span class="nx">A</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">easing</span><span class="p">)?</span><span class="nx">v</span><span class="p">.</span><span class="nx">Easings</span><span class="p">[</span><span class="nx">k</span><span class="p">.</span><span class="nx">easing</span><span class="p">]:</span><span class="nx">k</span><span class="p">.</span><span class="nx">easing</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">)</span><span class="nx">A</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">endValue</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">endValue</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">startValue</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">startValue</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="nx">F</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">E</span><span class="p">),</span><span class="o">!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="o">===</span><span class="nx">k</span><span class="p">.</span><span class="nx">currentValue</span><span class="p">)</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">currentValue</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="dl">"</span><span class="s2">tween</span><span class="dl">"</span><span class="o">===</span><span class="nx">T</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">T</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">getRoot</span><span class="p">(</span><span class="nx">T</span><span class="p">),</span><span class="nx">H</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">rootPropertyValueCache</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">rootPropertyValue</span><span class="o">=</span><span class="nx">H</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">currentValue</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">A</span><span class="p">)?</span><span class="dl">""</span><span class="p">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">unitType</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">rootPropertyValue</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">scrollData</span><span class="p">);</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">T</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">rootPropertyValueCache</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">j</span><span class="p">]?</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">j</span><span class="p">](</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">N</span><span class="p">[</span><span class="mi">1</span><span class="p">]):</span><span class="nx">N</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="o">===</span><span class="nx">N</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">V</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}}</span><span class="nx">u</span><span class="p">.</span><span class="nx">mobileHA</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">.</span><span class="nx">translate3d</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">w</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">.</span><span class="nx">translate3d</span><span class="o">=</span><span class="dl">"</span><span class="s2">(0px, 0px, 0px)</span><span class="dl">"</span><span class="p">,</span><span class="nx">V</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">flushTransformCache</span><span class="p">(</span><span class="nx">w</span><span class="p">)}}</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="o">!==</span><span class="nx">u</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">o</span><span class="p">][</span><span class="mi">2</span><span class="p">].</span><span class="nx">display</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">u</span><span class="p">.</span><span class="nx">visibility</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="o">!==</span><span class="nx">u</span><span class="p">.</span><span class="nx">visibility</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">o</span><span class="p">][</span><span class="mi">2</span><span class="p">].</span><span class="nx">visibility</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">u</span><span class="p">.</span><span class="nx">progress</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">progress</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">y</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">duration</span><span class="o">-</span><span class="nx">t</span><span class="p">),</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">(</span><span class="nx">o</span><span class="p">)}}</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isTicking</span><span class="o">&amp;&amp;</span><span class="nx">P</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">u</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="nx">u</span><span class="p">].</span><span class="nx">element</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">loop</span><span class="o">||</span><span class="p">(</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="o">===</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="p">),</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="o">===</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="dl">"</span><span class="s2">visibility</span><span class="dl">"</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="p">)),</span><span class="nx">o</span><span class="p">.</span><span class="nx">loop</span><span class="o">!==!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">p</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="o">||!</span><span class="sr">/</span><span class="se">\.</span><span class="sr">velocityQueueEntryFlag/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">p</span><span class="p">)[</span><span class="mi">1</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">)){</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">isAnimating</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">rootPropertyValueCache</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transforms3D</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="sr">/^scale/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">^</span><span class="se">\\</span><span class="s2">(</span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="dl">"</span><span class="s2">[^.]</span><span class="dl">"</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">delete</span> <span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">])}),</span><span class="nx">o</span><span class="p">.</span><span class="nx">mobileHA</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">delete</span> <span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">.</span><span class="nx">translate3d</span><span class="p">),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">flushTransformCache</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="dl">"</span><span class="s2">velocity-animating</span><span class="dl">"</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">.</span><span class="nx">loop</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="o">===</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">complete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">n</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">d</span><span class="p">},</span><span class="mi">1</span><span class="p">)}</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">loop</span><span class="o">!==!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">loop</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="o">/^</span><span class="nx">rotate</span><span class="o">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">360</span><span class="o">===</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">endValue</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">endValue</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">startValue</span><span class="o">=</span><span class="mi">360</span><span class="p">),</span><span class="sr">/^backgroundPosition/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">100</span><span class="o">===</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">endValue</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">.</span><span class="nx">unitType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">endValue</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">startValue</span><span class="o">=</span><span class="mi">100</span><span class="p">)}),</span><span class="nx">v</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="dl">"</span><span class="s2">reverse</span><span class="dl">"</span><span class="p">,{</span><span class="na">loop</span><span class="p">:</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="na">delay</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="p">})),</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">)}</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">!==!</span><span class="mi">1</span><span class="p">){</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">l</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isTicking</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">delete</span> <span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="o">=</span><span class="p">[])}</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">documentMode</span><span class="p">)</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">documentMode</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">4</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="dl">"</span><span class="s2">&lt;!--[if IE </span><span class="dl">"</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="dl">"</span><span class="s2">]&gt;&lt;span&gt;&lt;/span&gt;&lt;![endif]--&gt;</span><span class="dl">"</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="dl">"</span><span class="s2">span</span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">t</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}(),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="o">-</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span><span class="nx">e</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">)}}(),</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="na">isString</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="dl">"</span><span class="s2">string</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">},</span><span class="na">isArray</span><span class="p">:</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="dl">"</span><span class="s2">[object Array]</span><span class="dl">"</span><span class="o">===</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="na">isFunction</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="dl">"</span><span class="s2">[object Function]</span><span class="dl">"</span><span class="o">===</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="na">isNode</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">},</span><span class="na">isNodeList</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="sr">/^</span><span class="se">\[</span><span class="sr">object </span><span class="se">(</span><span class="sr">HTMLCollection|NodeList|Object</span><span class="se">)\]</span><span class="sr">$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="dl">"</span><span class="s2">object</span><span class="dl">"</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)},</span><span class="na">isWrapped</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">jquery</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">Zepto</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">Zepto</span><span class="p">.</span><span class="nx">zepto</span><span class="p">.</span><span class="nx">isZ</span><span class="p">(</span><span class="nx">e</span><span class="p">))},</span><span class="na">isSVG</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">SVGElement</span><span class="o">&amp;&amp;</span><span class="nx">e</span> <span class="k">instanceof</span> <span class="nx">t</span><span class="p">.</span><span class="nx">SVGElement</span><span class="p">},</span><span class="na">isEmptyObject</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">$</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">jquery</span><span class="p">?(</span><span class="nx">$</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">):</span><span class="nx">$</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">Velocity</span><span class="p">.</span><span class="nx">Utilities</span><span class="p">,</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">"</span><span class="s2">Velocity: IE8 and below require jQuery to be loaded before Velocity.</span><span class="dl">"</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">7</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span> <span class="k">void</span><span class="p">(</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">velocity</span><span class="o">=</span><span class="nx">jQuery</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">animate</span><span class="p">);</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="dl">"</span><span class="s2">swing</span><span class="dl">"</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">{</span><span class="na">State</span><span class="p">:{</span><span class="na">isMobile</span><span class="p">:</span><span class="sr">/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="na">isAndroid</span><span class="p">:</span><span class="sr">/Android/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="na">isGingerbread</span><span class="p">:</span><span class="sr">/Android 2</span><span class="se">\.</span><span class="sr">3</span><span class="se">\.[</span><span class="sr">3-7</span><span class="se">]</span><span class="sr">/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="na">isChrome</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">chrome</span><span class="p">,</span><span class="na">isFirefox</span><span class="p">:</span><span class="sr">/Firefox/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nb">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">),</span><span class="na">prefixElement</span><span class="p">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">),</span><span class="na">prefixMatches</span><span class="p">:{},</span><span class="na">scrollAnchor</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">scrollPropertyLeft</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">scrollPropertyTop</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">isTicking</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">calls</span><span class="p">:[]},</span><span class="na">CSS</span><span class="p">:{},</span><span class="na">Utilities</span><span class="p">:</span><span class="nx">$</span><span class="p">,</span><span class="na">Redirects</span><span class="p">:{},</span><span class="na">Easings</span><span class="p">:{},</span><span class="na">Promise</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nb">Promise</span><span class="p">,</span><span class="na">defaults</span><span class="p">:{</span><span class="na">queue</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">duration</span><span class="p">:</span><span class="nx">y</span><span class="p">,</span><span class="na">easing</span><span class="p">:</span><span class="nx">h</span><span class="p">,</span><span class="na">begin</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">complete</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">progress</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">display</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">visibility</span><span class="p">:</span><span class="nx">a</span><span class="p">,</span><span class="na">loop</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">delay</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">mobileHA</span><span class="p">:</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="na">_cacheValues</span><span class="p">:</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="na">init</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">$</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">velocity</span><span class="dl">"</span><span class="p">,{</span><span class="na">isSVG</span><span class="p">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">isSVG</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="na">isAnimating</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">computedStyle</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">tweensContainer</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">rootPropertyValueCache</span><span class="p">:{},</span><span class="na">transformCache</span><span class="p">:{}})},</span><span class="na">hook</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">mock</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">version</span><span class="p">:{</span><span class="na">major</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="na">minor</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span><span class="na">patch</span><span class="p">:</span><span class="mi">2</span><span class="p">},</span><span class="na">debug</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">!==</span><span class="nx">a</span><span class="p">?(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollAnchor</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollPropertyLeft</span><span class="o">=</span><span class="dl">"</span><span class="s2">pageXOffset</span><span class="dl">"</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollPropertyTop</span><span class="o">=</span><span class="dl">"</span><span class="s2">pageYOffset</span><span class="dl">"</span><span class="p">):(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollAnchor</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollPropertyLeft</span><span class="o">=</span><span class="dl">"</span><span class="s2">scrollLeft</span><span class="dl">"</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollPropertyTop</span><span class="o">=</span><span class="dl">"</span><span class="s2">scrollTop</span><span class="dl">"</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">tension</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">friction</span><span class="o">*</span><span class="nx">e</span><span class="p">.</span><span class="nx">v</span><span class="p">}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="na">x</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">dx</span><span class="o">*</span><span class="nx">r</span><span class="p">,</span><span class="na">v</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">v</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">dv</span><span class="o">*</span><span class="nx">r</span><span class="p">,</span><span class="na">tension</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">tension</span><span class="p">,</span><span class="na">friction</span><span class="p">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">friction</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="na">dx</span><span class="p">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">v</span><span class="p">,</span><span class="na">dv</span><span class="p">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="na">dx</span><span class="p">:</span><span class="nx">r</span><span class="p">.</span><span class="nx">v</span><span class="p">,</span><span class="na">dv</span><span class="p">:</span><span class="nx">e</span><span class="p">(</span><span class="nx">r</span><span class="p">)},</span><span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,.</span><span class="mi">5</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,.</span><span class="mi">5</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">dx</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">dx</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">dx</span><span class="p">)</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">dx</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="mi">6</span><span class="o">*</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">dv</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">dv</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">dv</span><span class="p">)</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">dv</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">l</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">v</span><span class="o">+</span><span class="nx">u</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">}</span><span class="k">return</span> <span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="na">x</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="na">v</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="na">tension</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">friction</span><span class="p">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="p">.</span><span class="mi">016</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="mi">500</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">||</span><span class="mi">20</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">tension</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">friction</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="nx">n</span><span class="p">,</span><span class="nx">c</span><span class="p">?(</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="o">/</span><span class="nx">n</span><span class="o">*</span><span class="nx">u</span><span class="p">):</span><span class="nx">p</span><span class="o">=</span><span class="nx">u</span><span class="p">;;)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">s</span><span class="o">+=</span><span class="mi">16</span><span class="p">,</span><span class="o">!</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">v</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="o">*</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">|</span><span class="mi">0</span><span class="p">]}:</span><span class="nx">s</span><span class="p">}}();</span><span class="nx">v</span><span class="p">.</span><span class="nx">Easings</span><span class="o">=</span><span class="p">{</span><span class="na">linear</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="na">swing</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">.</span><span class="mi">5</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="na">spring</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="mf">4.5</span><span class="o">*</span><span class="nx">e</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">exp</span><span class="p">(</span><span class="mi">6</span><span class="o">*-</span><span class="nx">e</span><span class="p">)}},</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">([[</span><span class="dl">"</span><span class="s2">ease</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">25</span><span class="p">,.</span><span class="mi">1</span><span class="p">,.</span><span class="mi">25</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">ease-in</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">42</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">ease-out</span><span class="dl">"</span><span class="p">,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,.</span><span class="mi">58</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">ease-in-out</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">42</span><span class="p">,</span><span class="mi">0</span><span class="p">,.</span><span class="mi">58</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInSine</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">47</span><span class="p">,</span><span class="mi">0</span><span class="p">,.</span><span class="mi">745</span><span class="p">,.</span><span class="mi">715</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutSine</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">39</span><span class="p">,.</span><span class="mi">575</span><span class="p">,.</span><span class="mi">565</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutSine</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">445</span><span class="p">,.</span><span class="mi">05</span><span class="p">,.</span><span class="mi">55</span><span class="p">,.</span><span class="mi">95</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInQuad</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">55</span><span class="p">,.</span><span class="mi">085</span><span class="p">,.</span><span class="mi">68</span><span class="p">,.</span><span class="mi">53</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutQuad</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">25</span><span class="p">,.</span><span class="mi">46</span><span class="p">,.</span><span class="mi">45</span><span class="p">,.</span><span class="mi">94</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutQuad</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">455</span><span class="p">,.</span><span class="mi">03</span><span class="p">,.</span><span class="mi">515</span><span class="p">,.</span><span class="mi">955</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInCubic</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">55</span><span class="p">,.</span><span class="mi">055</span><span class="p">,.</span><span class="mi">675</span><span class="p">,.</span><span class="mi">19</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutCubic</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">215</span><span class="p">,.</span><span class="mi">61</span><span class="p">,.</span><span class="mi">355</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutCubic</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">645</span><span class="p">,.</span><span class="mi">045</span><span class="p">,.</span><span class="mi">355</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInQuart</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">895</span><span class="p">,.</span><span class="mi">03</span><span class="p">,.</span><span class="mi">685</span><span class="p">,.</span><span class="mi">22</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutQuart</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">165</span><span class="p">,.</span><span class="mi">84</span><span class="p">,.</span><span class="mi">44</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutQuart</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">77</span><span class="p">,</span><span class="mi">0</span><span class="p">,.</span><span class="mi">175</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInQuint</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">755</span><span class="p">,.</span><span class="mi">05</span><span class="p">,.</span><span class="mi">855</span><span class="p">,.</span><span class="mi">06</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutQuint</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">23</span><span class="p">,</span><span class="mi">1</span><span class="p">,.</span><span class="mi">32</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutQuint</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">86</span><span class="p">,</span><span class="mi">0</span><span class="p">,.</span><span class="mi">07</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInExpo</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">95</span><span class="p">,.</span><span class="mi">05</span><span class="p">,.</span><span class="mi">795</span><span class="p">,.</span><span class="mi">035</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutExpo</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">,.</span><span class="mi">22</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutExpo</span><span class="dl">"</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInCirc</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">6</span><span class="p">,.</span><span class="mi">04</span><span class="p">,.</span><span class="mi">98</span><span class="p">,.</span><span class="mi">335</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeOutCirc</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">075</span><span class="p">,.</span><span class="mi">82</span><span class="p">,.</span><span class="mi">165</span><span class="p">,</span><span class="mi">1</span><span class="p">]],[</span><span class="dl">"</span><span class="s2">easeInOutCirc</span><span class="dl">"</span><span class="p">,[.</span><span class="mi">785</span><span class="p">,.</span><span class="mi">135</span><span class="p">,.</span><span class="mi">15</span><span class="p">,.</span><span class="mi">86</span><span class="p">]]],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">Easings</span><span class="p">[</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">t</span><span class="p">[</span><span class="mi">1</span><span class="p">])});</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="o">=</span><span class="p">{</span><span class="na">RegEx</span><span class="p">:{</span><span class="na">isHex</span><span class="p">:</span><span class="sr">/^#</span><span class="se">([</span><span class="sr">A-f</span><span class="se">\d]{3}){1,2}</span><span class="sr">$/i</span><span class="p">,</span><span class="na">valueUnwrap</span><span class="p">:</span><span class="sr">/^</span><span class="se">[</span><span class="sr">A-z</span><span class="se">]</span><span class="sr">+</span><span class="se">\((</span><span class="sr">.*</span><span class="se">)\)</span><span class="sr">$/i</span><span class="p">,</span><span class="na">wrappedValueAlreadyExtracted</span><span class="p">:</span><span class="sr">/</span><span class="se">[</span><span class="sr">0-9.</span><span class="se">]</span><span class="sr">+ </span><span class="se">[</span><span class="sr">0-9.</span><span class="se">]</span><span class="sr">+ </span><span class="se">[</span><span class="sr">0-9.</span><span class="se">]</span><span class="sr">+</span><span class="se">(</span><span class="sr"> </span><span class="se">[</span><span class="sr">0-9.</span><span class="se">]</span><span class="sr">+</span><span class="se">)?</span><span class="sr">/</span><span class="p">,</span><span class="na">valueSplit</span><span class="p">:</span><span class="sr">/</span><span class="se">([</span><span class="sr">A-z</span><span class="se">]</span><span class="sr">+</span><span class="se">\(</span><span class="sr">.+</span><span class="se">\))</span><span class="sr">|</span><span class="se">(([</span><span class="sr">A-z0-9#-.</span><span class="se">]</span><span class="sr">+</span><span class="se">?)(?=\s</span><span class="sr">|$</span><span class="se">))</span><span class="sr">/gi</span><span class="p">},</span><span class="na">Lists</span><span class="p">:{</span><span class="na">colors</span><span class="p">:[</span><span class="dl">"</span><span class="s2">fill</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">stroke</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">stopColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">backgroundColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderTopColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderRightColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderBottomColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderLeftColor</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">outlineColor</span><span class="dl">"</span><span class="p">],</span><span class="na">transformsBase</span><span class="p">:[</span><span class="dl">"</span><span class="s2">translateX</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">translateY</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">scaleX</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">scaleY</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">skewX</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">skewY</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">rotateZ</span><span class="dl">"</span><span class="p">],</span><span class="na">transforms3D</span><span class="p">:[</span><span class="dl">"</span><span class="s2">transformPerspective</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">translateZ</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">scaleZ</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">rotateX</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">rotateY</span><span class="dl">"</span><span class="p">]},</span><span class="na">Hooks</span><span class="p">:{</span><span class="na">templates</span><span class="p">:{</span><span class="na">textShadow</span><span class="p">:[</span><span class="dl">"</span><span class="s2">Color X Y Blur</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">black 0px 0px 0px</span><span class="dl">"</span><span class="p">],</span><span class="na">boxShadow</span><span class="p">:[</span><span class="dl">"</span><span class="s2">Color X Y Blur Spread</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">black 0px 0px 0px 0px</span><span class="dl">"</span><span class="p">],</span><span class="na">clip</span><span class="p">:[</span><span class="dl">"</span><span class="s2">Top Right Bottom Left</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">0px 0px 0px 0px</span><span class="dl">"</span><span class="p">],</span><span class="na">backgroundPosition</span><span class="p">:[</span><span class="dl">"</span><span class="s2">X Y</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">0% 0%</span><span class="dl">"</span><span class="p">],</span><span class="na">transformOrigin</span><span class="p">:[</span><span class="dl">"</span><span class="s2">X Y Z</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">50% 50% 0px</span><span class="dl">"</span><span class="p">],</span><span class="na">perspectiveOrigin</span><span class="p">:[</span><span class="dl">"</span><span class="s2">X Y</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">50% 50%</span><span class="dl">"</span><span class="p">]},</span><span class="na">registered</span><span class="p">:{},</span><span class="na">register</span><span class="p">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="dl">"</span><span class="s2">color</span><span class="dl">"</span><span class="o">===</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">[</span><span class="nx">e</span><span class="p">]?</span><span class="dl">"</span><span class="s2">0 0 0 1</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">255 255 255 1</span><span class="dl">"</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">[</span><span class="nx">e</span><span class="p">]]</span><span class="o">=</span><span class="p">[</span><span class="dl">"</span><span class="s2">Red Green Blue Alpha</span><span class="dl">"</span><span class="p">,</span><span class="nx">t</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span> <span class="k">in</span> <span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueSplit</span><span class="p">);</span><span class="dl">"</span><span class="s2">Color</span><span class="dl">"</span><span class="o">===</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">shift</span><span class="p">()),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">shift</span><span class="p">()),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)])}</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span> <span class="k">in</span> <span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">r</span><span class="p">,</span><span class="nx">s</span><span class="p">]}}},</span><span class="na">getRoot</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">return</span> <span class="nx">t</span><span class="p">?</span><span class="nx">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span><span class="nx">e</span><span class="p">},</span><span class="na">cleanRootPropertyValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueUnwrap</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueUnwrap</span><span class="p">)[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">isCSSNullValue</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="mi">1</span><span class="p">]),</span><span class="nx">t</span><span class="p">},</span><span class="na">extractValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">cleanRootPropertyValue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueSplit</span><span class="p">)[</span><span class="nx">n</span><span class="p">]}</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="na">injectValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">cleanRootPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueSplit</span><span class="p">),</span><span class="nx">i</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)}</span><span class="k">return</span> <span class="nx">r</span><span class="p">}},</span><span class="na">Normalizations</span><span class="p">:{</span><span class="na">registered</span><span class="p">:{</span><span class="na">clip</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span><span class="dl">"</span><span class="s2">clip</span><span class="dl">"</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">wrappedValueAlreadyExtracted</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">)?</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">:(</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueUnwrap</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/,</span><span class="se">(\s</span><span class="sr">+</span><span class="se">)?</span><span class="sr">/g</span><span class="p">,</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">):</span><span class="nx">r</span><span class="p">),</span><span class="nx">a</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span><span class="dl">"</span><span class="s2">rect(</span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">}},</span><span class="na">blur</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isFirefox</span><span class="p">?</span><span class="dl">"</span><span class="s2">filter</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">-webkit-filter</span><span class="dl">"</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/blur</span><span class="se">\(([</span><span class="sr">0-9</span><span class="se">]</span><span class="sr">+</span><span class="se">[</span><span class="sr">A-z</span><span class="se">]</span><span class="sr">+</span><span class="se">)\)</span><span class="sr">/i</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">?</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">)?</span><span class="dl">"</span><span class="s2">blur(</span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="p">}},</span><span class="na">opacity</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">)</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span><span class="dl">"</span><span class="s2">filter</span><span class="dl">"</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="sr">/alpha</span><span class="se">\(</span><span class="sr">opacity=</span><span class="se">(</span><span class="sr">.*</span><span class="se">)\)</span><span class="sr">/i</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/</span><span class="mi">100</span><span class="p">:</span><span class="mi">1</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">&gt;=</span><span class="mi">1</span><span class="p">?</span><span class="dl">""</span><span class="p">:</span><span class="dl">"</span><span class="s2">alpha(opacity=</span><span class="dl">"</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">}</span><span class="k">else</span> <span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span><span class="dl">"</span><span class="s2">opacity</span><span class="dl">"</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">r</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">r</span><span class="p">}}},</span><span class="na">register</span><span class="p">:</span><span class="kd">function</span><span class="p">(){</span><span class="mi">9</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">||</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isGingerbread</span><span class="o">||</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transformsBase</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transformsBase</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transforms3D</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transformsBase</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">transformsBase</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">?</span><span class="sr">/^scale/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">[</span><span class="sr">()</span><span class="se">]</span><span class="sr">/g</span><span class="p">,</span><span class="dl">""</span><span class="p">);</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)){</span><span class="k">case</span><span class="dl">"</span><span class="s2">translate</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="o">=!</span><span class="sr">/</span><span class="se">(</span><span class="sr">%|px|em|rem|vw|vh|</span><span class="se">\d)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">scal</span><span class="dl">"</span><span class="p">:</span><span class="k">case</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isAndroid</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">o</span><span class="o">=!</span><span class="sr">/</span><span class="se">(\d)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">skew</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="o">=!</span><span class="sr">/</span><span class="se">(</span><span class="sr">deg|</span><span class="se">\d)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">rotate</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="o">=!</span><span class="sr">/</span><span class="se">(</span><span class="sr">deg|</span><span class="se">\d)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="k">return</span> <span class="nx">o</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="dl">"</span><span class="s2">(</span><span class="dl">"</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">]}}}();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="o">!</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="nx">t</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">:</span><span class="kd">var</span> <span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">wrappedValueAlreadyExtracted</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">))</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="na">black</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(0, 0, 0)</span><span class="dl">"</span><span class="p">,</span><span class="na">blue</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(0, 0, 255)</span><span class="dl">"</span><span class="p">,</span><span class="na">gray</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(128, 128, 128)</span><span class="dl">"</span><span class="p">,</span><span class="na">green</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(0, 128, 0)</span><span class="dl">"</span><span class="p">,</span><span class="na">red</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(255, 0, 0)</span><span class="dl">"</span><span class="p">,</span><span class="na">white</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgb(255, 255, 255)</span><span class="dl">"</span><span class="p">};</span><span class="sr">/^</span><span class="se">[</span><span class="sr">A-z</span><span class="se">]</span><span class="sr">+$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)?</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">?</span><span class="nx">s</span><span class="p">[</span><span class="nx">n</span><span class="p">]:</span><span class="nx">s</span><span class="p">.</span><span class="nx">black</span><span class="p">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">isHex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)?</span><span class="nx">i</span><span class="o">=</span><span class="dl">"</span><span class="s2">rgb(</span><span class="dl">"</span><span class="o">+</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">hexToRgb</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^rgba</span><span class="se">?\(</span><span class="sr">/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">black</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">n</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">match</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">valueUnwrap</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/,</span><span class="se">(\s</span><span class="sr">+</span><span class="se">)?</span><span class="sr">/g</span><span class="p">,</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)}</span><span class="k">return</span> <span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="o">||</span><span class="mi">3</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">o</span><span class="o">+=</span><span class="dl">"</span><span class="s2"> 1</span><span class="dl">"</span><span class="p">),</span><span class="nx">o</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">:</span><span class="k">return</span> <span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">?</span><span class="mi">4</span><span class="o">===</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/</span><span class="se">\s</span><span class="sr">+/</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)):</span><span class="mi">3</span><span class="o">===</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">+=</span><span class="dl">"</span><span class="s2"> 1</span><span class="dl">"</span><span class="p">),(</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">?</span><span class="dl">"</span><span class="s2">rgb</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">rgba</span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">(</span><span class="dl">"</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">\s</span><span class="sr">+/g</span><span class="p">,</span><span class="dl">"</span><span class="s2">,</span><span class="dl">"</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">\.(\d)</span><span class="sr">+</span><span class="se">(?=</span><span class="sr">,</span><span class="se">)</span><span class="sr">/g</span><span class="p">,</span><span class="dl">""</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">)</span><span class="dl">"</span><span class="p">}}}()}},</span><span class="na">Names</span><span class="p">:{</span><span class="na">camelCase</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-</span><span class="se">(\w)</span><span class="sr">/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()})},</span><span class="na">SVGAttribute</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="dl">"</span><span class="s2">width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2</span><span class="dl">"</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isAndroid</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isChrome</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">+=</span><span class="dl">"</span><span class="s2">|transform</span><span class="dl">"</span><span class="p">),</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">^(</span><span class="dl">"</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="dl">"</span><span class="s2">)$</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">i</span><span class="dl">"</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="na">prefixCheck</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">prefixMatches</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">return</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">prefixMatches</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="o">!</span><span class="mi">0</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="dl">""</span><span class="p">,</span><span class="dl">"</span><span class="s2">Webkit</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Moz</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">ms</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">O</span><span class="dl">"</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">r</span><span class="p">?</span><span class="nx">e</span><span class="p">:</span><span class="nx">t</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^</span><span class="se">\w</span><span class="sr">/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">prefixElement</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">n</span><span class="p">]))</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">prefixMatches</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">,[</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">]}</span><span class="k">return</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">]}},</span><span class="na">Values</span><span class="p">:{</span><span class="na">hexToRgb</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="sr">/^#</span><span class="se">?([</span><span class="sr">a-f</span><span class="se">\d])([</span><span class="sr">a-f</span><span class="se">\d])([</span><span class="sr">a-f</span><span class="se">\d])</span><span class="sr">$/i</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="sr">/^#</span><span class="se">?([</span><span class="sr">a-f</span><span class="se">\d]{2})([</span><span class="sr">a-f</span><span class="se">\d]{2})([</span><span class="sr">a-f</span><span class="se">\d]{2})</span><span class="sr">$/i</span><span class="p">,</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="nx">a</span><span class="p">}),</span><span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">?[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="mi">16</span><span class="p">)]:[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]},</span><span class="na">isCSSNullValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="sr">/^</span><span class="se">(</span><span class="sr">none|auto|transparent|</span><span class="se">(</span><span class="sr">rgba</span><span class="se">\(</span><span class="sr">0, </span><span class="se">?</span><span class="sr">0, </span><span class="se">?</span><span class="sr">0, </span><span class="se">?</span><span class="sr">0</span><span class="se">\)))</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="na">getUnitType</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="sr">/^</span><span class="se">(</span><span class="sr">rotate|skew</span><span class="se">)</span><span class="sr">/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="dl">"</span><span class="s2">deg</span><span class="dl">"</span><span class="p">:</span><span class="sr">/</span><span class="se">(</span><span class="sr">^</span><span class="se">(</span><span class="sr">scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight</span><span class="se">)</span><span class="sr">$</span><span class="se">)</span><span class="sr">|</span><span class="se">((</span><span class="sr">opacity|red|green|blue|alpha</span><span class="se">)</span><span class="sr">$</span><span class="se">)</span><span class="sr">/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="dl">""</span><span class="p">:</span><span class="dl">"</span><span class="s2">px</span><span class="dl">"</span><span class="p">},</span><span class="na">getDisplayType</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">return</span><span class="sr">/^</span><span class="se">(</span><span class="sr">b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="dl">"</span><span class="s2">inline</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^</span><span class="se">(</span><span class="sr">li</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="dl">"</span><span class="s2">list-item</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^</span><span class="se">(</span><span class="sr">tr</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="dl">"</span><span class="s2">table-row</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^</span><span class="se">(</span><span class="sr">table</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="dl">"</span><span class="s2">table</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^</span><span class="se">(</span><span class="sr">tbody</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">t</span><span class="p">)?</span><span class="dl">"</span><span class="s2">table-row-group</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">block</span><span class="dl">"</span><span class="p">},</span><span class="na">addClass</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">classList</span><span class="p">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">t</span><span class="p">):</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">length</span><span class="p">?</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">:</span><span class="dl">""</span><span class="p">)</span><span class="o">+</span><span class="nx">t</span><span class="p">},</span><span class="na">removeClass</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">classList</span><span class="p">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">t</span><span class="p">):</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">(^|</span><span class="se">\\</span><span class="s2">s)</span><span class="dl">"</span><span class="o">+</span><span class="nx">t</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2">|</span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">(</span><span class="se">\\</span><span class="s2">s|$)</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">gi</span><span class="dl">"</span><span class="p">),</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)}},</span><span class="na">getPropertyValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(){</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="sr">/^</span><span class="se">(</span><span class="sr">width|height</span><span class="se">)</span><span class="sr">$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">display</span><span class="dl">"</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">getDisplayType</span><span class="p">(</span><span class="nx">e</span><span class="p">))),</span><span class="o">!</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">height</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">border-box</span><span class="dl">"</span><span class="o">!==</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">boxSizing</span><span class="dl">"</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderTopWidth</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderBottomWidth</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingTop</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingBottom</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">(),</span><span class="nx">c</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">width</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">border-box</span><span class="dl">"</span><span class="o">!==</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">boxSizing</span><span class="dl">"</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderLeftWidth</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">borderRightWidth</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingLeft</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingRight</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">n</span><span class="p">(),</span><span class="nx">p</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="p">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">):</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">computedStyle</span><span class="p">?</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">computedStyle</span><span class="p">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">computedStyle</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="dl">"</span><span class="s2">borderColor</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="dl">"</span><span class="s2">borderTopColor</span><span class="dl">"</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">9</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">filter</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="p">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">r</span><span class="p">):</span><span class="nx">d</span><span class="p">[</span><span class="nx">r</span><span class="p">],(</span><span class="dl">""</span><span class="o">===</span><span class="nx">l</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="nx">l</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">r</span><span class="p">]),</span><span class="nx">n</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">auto</span><span class="dl">"</span><span class="o">===</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="sr">/^</span><span class="se">(</span><span class="sr">top|right|bottom|left</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">position</span><span class="dl">"</span><span class="p">);(</span><span class="dl">"</span><span class="s2">fixed</span><span class="dl">"</span><span class="o">===</span><span class="nx">g</span><span class="o">||</span><span class="dl">"</span><span class="s2">absolute</span><span class="dl">"</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="sr">/top|left/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">position</span><span class="p">()[</span><span class="nx">r</span><span class="p">]</span><span class="o">+</span><span class="dl">"</span><span class="s2">px</span><span class="dl">"</span><span class="p">)}</span><span class="k">return</span> <span class="nx">l</span><span class="p">}</span><span class="kd">var</span> <span class="nx">l</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">getRoot</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="nx">n</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">prefixCheck</span><span class="p">(</span><span class="nx">c</span><span class="p">)[</span><span class="mi">0</span><span class="p">])),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">)),</span><span class="nx">l</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">extractValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">n</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="o">!==</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">prefixCheck</span><span class="p">(</span><span class="nx">p</span><span class="p">)[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">isCSSNullValue</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">r</span><span class="p">][</span><span class="mi">1</span><span class="p">])),</span><span class="nx">l</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">extract</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^</span><span class="se">[\d</span><span class="sr">-</span><span class="se">]</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">l</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">isSVG</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">SVGAttribute</span><span class="p">(</span><span class="nx">r</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="sr">/^</span><span class="se">(</span><span class="sr">height|width</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">r</span><span class="p">))</span><span class="k">try</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">()[</span><span class="nx">r</span><span class="p">]}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">prefixCheck</span><span class="p">(</span><span class="nx">r</span><span class="p">)[</span><span class="mi">0</span><span class="p">]);</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">isCSSNullValue</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Get </span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="dl">"</span><span class="s2">: </span><span class="dl">"</span><span class="o">+</span><span class="nx">l</span><span class="p">),</span><span class="nx">l</span><span class="p">},</span><span class="na">setPropertyValue</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="o">===</span><span class="nx">r</span><span class="p">)</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">[</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="o">+</span><span class="nx">o</span><span class="p">.</span><span class="nx">direction</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">:</span><span class="dl">"</span><span class="s2">Left</span><span class="dl">"</span><span class="o">===</span><span class="nx">o</span><span class="p">.</span><span class="nx">direction</span><span class="p">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">alternateValue</span><span class="p">):</span><span class="nx">t</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">alternateValue</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="o">===</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">getRoot</span><span class="p">(</span><span class="nx">r</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">injectValue</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">u</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">inject</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">r</span><span class="p">](</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">)),</span><span class="nx">s</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">prefixCheck</span><span class="p">(</span><span class="nx">r</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="mi">8</span><span class="o">&gt;=</span><span class="nx">f</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Browser does not support [</span><span class="dl">"</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="dl">"</span><span class="s2">] for [</span><span class="dl">"</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="dl">"</span><span class="s2">]</span><span class="dl">"</span><span class="p">)}</span><span class="k">else</span> <span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">isSVG</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">SVGAttribute</span><span class="p">(</span><span class="nx">r</span><span class="p">)?</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">):</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">s</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Set </span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="dl">"</span><span class="s2"> (</span><span class="dl">"</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="dl">"</span><span class="s2">): </span><span class="dl">"</span><span class="o">+</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span><span class="p">[</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">]},</span><span class="na">flushTransformCache</span><span class="p">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="dl">""</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">f</span><span class="o">||</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isAndroid</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isChrome</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">isSVG</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="na">translate</span><span class="p">:[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">translateX</span><span class="dl">"</span><span class="p">),</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">translateY</span><span class="dl">"</span><span class="p">)],</span><span class="na">skewX</span><span class="p">:[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">skewX</span><span class="dl">"</span><span class="p">)],</span><span class="na">skewY</span><span class="p">:[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">skewY</span><span class="dl">"</span><span class="p">)],</span><span class="na">scale</span><span class="p">:</span><span class="mi">1</span><span class="o">!==</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">)?[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">),</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">)]:[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">scaleX</span><span class="dl">"</span><span class="p">),</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">scaleY</span><span class="dl">"</span><span class="p">)],</span><span class="na">rotate</span><span class="p">:[</span><span class="nx">t</span><span class="p">(</span><span class="dl">"</span><span class="s2">rotateZ</span><span class="dl">"</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]};</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="o">/^</span><span class="nx">translate</span><span class="o">/</span><span class="nx">i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">e</span><span class="o">=</span><span class="dl">"</span><span class="s2">translate</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^scale/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="nx">e</span><span class="o">=</span><span class="dl">"</span><span class="s2">scale</span><span class="dl">"</span><span class="p">:</span><span class="sr">/^rotate/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="dl">"</span><span class="s2">rotate</span><span class="dl">"</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">+=</span><span class="nx">e</span><span class="o">+</span><span class="dl">"</span><span class="s2">(</span><span class="dl">"</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">) </span><span class="dl">"</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])})}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">transformCache</span><span class="p">[</span><span class="nx">t</span><span class="p">],</span><span class="dl">"</span><span class="s2">transformPerspective</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">?(</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">):(</span><span class="mi">9</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">rotateZ</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="dl">"</span><span class="s2">rotate</span><span class="dl">"</span><span class="p">),</span><span class="k">void</span><span class="p">(</span><span class="nx">r</span><span class="o">+=</span><span class="nx">t</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">))}),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="dl">"</span><span class="s2">perspective</span><span class="dl">"</span><span class="o">+</span><span class="nx">o</span><span class="o">+</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="o">+</span><span class="nx">r</span><span class="p">)}</span><span class="nx">x</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="p">,</span><span class="nx">r</span><span class="p">)}};</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">register</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">register</span><span class="p">(),</span><span class="nx">v</span><span class="p">.</span><span class="nx">hook</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">r</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="nx">n</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="dl">"</span><span class="s2">transform</span><span class="dl">"</span><span class="o">===</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">flushTransformCache</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">s</span><span class="p">}}),</span><span class="nx">n</span><span class="p">};</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="nx">l</span><span class="p">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="o">||</span><span class="kc">null</span><span class="p">:</span><span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">)?(</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="sr">/^</span><span class="se">[\d</span><span class="sr">-</span><span class="se">]</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">isHex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])?</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]:(</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">isHex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">t</span><span class="p">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span><span class="nx">u</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]))):</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">P</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">P</span><span class="p">)),[</span><span class="nx">r</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="o">||</span><span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/</span><span class="se">[</span><span class="sr">%A-z</span><span class="se">]</span><span class="sr">+$/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="dl">""</span><span class="p">}),</span><span class="nx">r</span><span class="o">||</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">getUnitType</span><span class="p">(</span><span class="nx">e</span><span class="p">)),[</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="na">myParent</span><span class="p">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="na">position</span><span class="p">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="dl">"</span><span class="s2">position</span><span class="dl">"</span><span class="p">),</span><span class="na">fontSize</span><span class="p">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="dl">"</span><span class="s2">fontSize</span><span class="dl">"</span><span class="p">)},</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">position</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPosition</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">myParent</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastParent</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastFontSize</span><span class="p">;</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastParent</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">myParent</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPosition</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">position</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastFontSize</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">;</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">)</span><span class="nx">l</span><span class="p">.</span><span class="nx">emToPx</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastEmToPx</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxWidth</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPercentToPxWidth</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxHeight</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPercentToPxHeight</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">isSVG</span><span class="p">?</span><span class="nx">r</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="dl">"</span><span class="s2">http://www.w3.org/2000/svg</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">rect</span><span class="dl">"</span><span class="p">):</span><span class="nx">r</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">"</span><span class="s2">div</span><span class="dl">"</span><span class="p">);</span><span class="nx">v</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">myParent</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="dl">"</span><span class="s2">overflow</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">overflowX</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">overflowY</span><span class="dl">"</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="p">)}),</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">position</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">position</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">fontSize</span><span class="dl">"</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">boxSizing</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">content-box</span><span class="dl">"</span><span class="p">),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="dl">"</span><span class="s2">minWidth</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">maxWidth</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">width</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">minHeight</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">maxHeight</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">height</span><span class="dl">"</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="o">+</span><span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="p">)}),</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">setPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingLeft</span><span class="dl">"</span><span class="p">,</span><span class="nx">s</span><span class="o">+</span><span class="dl">"</span><span class="s2">em</span><span class="dl">"</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxWidth</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPercentToPxWidth</span><span class="o">=</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">width</span><span class="dl">"</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">s</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxHeight</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastPercentToPxHeight</span><span class="o">=</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">height</span><span class="dl">"</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">s</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">emToPx</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lastEmToPx</span><span class="o">=</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="dl">"</span><span class="s2">paddingLeft</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">s</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">myParent</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">u</span><span class="p">)}</span><span class="k">return</span> <span class="kc">null</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">remToPx</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">remToPx</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="dl">"</span><span class="s2">fontSize</span><span class="dl">"</span><span class="p">))</span><span class="o">||</span><span class="mi">16</span><span class="p">),</span><span class="kc">null</span><span class="o">===</span><span class="nx">N</span><span class="p">.</span><span class="nx">vwToPx</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">vwToPx</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">vhToPx</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">remToPx</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">remToPx</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">vwToPx</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">vwToPx</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">vhToPx</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">vhToPx</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Unit ratios: </span><span class="dl">"</span><span class="o">+</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="p">),</span><span class="nx">l</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">begin</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">w</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">o</span><span class="p">.</span><span class="nx">begin</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">throw</span> <span class="nx">y</span><span class="p">},</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="sr">/^x$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">axis</span><span class="p">)?</span><span class="dl">"</span><span class="s2">Left</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">Top</span><span class="dl">"</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">offset</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">F</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">isWrapped</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">)</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isNode</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">)?(</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">[</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="o">+</span><span class="nx">S</span><span class="p">],</span><span class="nx">F</span><span class="o">=</span><span class="nx">C</span><span class="o">+</span><span class="nx">$</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">position</span><span class="p">()[</span><span class="nx">S</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">+</span><span class="nx">V</span><span class="p">):</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="kc">null</span><span class="p">:(</span><span class="nx">C</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollAnchor</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">[</span><span class="dl">"</span><span class="s2">scrollProperty</span><span class="dl">"</span><span class="o">+</span><span class="nx">S</span><span class="p">]],</span><span class="nx">A</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">scrollAnchor</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">[</span><span class="dl">"</span><span class="s2">scrollProperty</span><span class="dl">"</span><span class="o">+</span><span class="p">(</span><span class="dl">"</span><span class="s2">Left</span><span class="dl">"</span><span class="o">===</span><span class="nx">S</span><span class="p">?</span><span class="dl">"</span><span class="s2">Top</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">Left</span><span class="dl">"</span><span class="p">)]],</span><span class="nx">F</span><span class="o">=</span><span class="nx">$</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">offset</span><span class="p">()[</span><span class="nx">S</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()]</span><span class="o">+</span><span class="nx">V</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="na">scroll</span><span class="p">:{</span><span class="na">rootPropertyValue</span><span class="p">:</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="na">startValue</span><span class="p">:</span><span class="nx">C</span><span class="p">,</span><span class="na">currentValue</span><span class="p">:</span><span class="nx">C</span><span class="p">,</span><span class="na">endValue</span><span class="p">:</span><span class="nx">F</span><span class="p">,</span><span class="na">unitType</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">easing</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="na">scrollData</span><span class="p">:{</span><span class="na">container</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="na">direction</span><span class="p">:</span><span class="nx">S</span><span class="p">,</span><span class="na">alternateValue</span><span class="p">:</span><span class="nx">A</span><span class="p">}},</span><span class="na">element</span><span class="p">:</span><span class="nx">n</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">tweensContainer (scroll): </span><span class="dl">"</span><span class="p">,</span><span class="nx">s</span><span class="p">.</span><span class="nx">scroll</span><span class="p">,</span><span class="nx">n</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">reverse</span><span class="dl">"</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="p">)</span><span class="k">return</span> <span class="k">void</span> <span class="nx">$</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">);</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="o">===</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="dl">"</span><span class="s2">auto</span><span class="dl">"</span><span class="p">),</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="o">===</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">visibility</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="dl">"</span><span class="s2">visible</span><span class="dl">"</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">loop</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">begin</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">easing</span><span class="o">||</span><span class="k">delete</span> <span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">duration</span><span class="o">||</span><span class="k">delete</span> <span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{},</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="k">in</span> <span class="nx">E</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">element</span><span class="dl">"</span><span class="o">!==</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">startValue</span><span class="p">;</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">startValue</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">currentValue</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">endValue</span><span class="p">,</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">endValue</span><span class="o">=</span><span class="nx">H</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">easing</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">reverse tweensContainer (</span><span class="dl">"</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="dl">"</span><span class="s2">): </span><span class="dl">"</span><span class="o">+</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">j</span><span class="p">]),</span><span class="nx">n</span><span class="p">)}</span><span class="nx">s</span><span class="o">=</span><span class="nx">E</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="dl">"</span><span class="s2">start</span><span class="dl">"</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="p">;</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">isAnimating</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="p">),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="dl">"</span><span class="s2">^</span><span class="dl">"</span><span class="o">+</span><span class="nx">x</span><span class="p">.</span><span class="nx">Lists</span><span class="p">.</span><span class="nx">colors</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2">$|^</span><span class="dl">"</span><span class="p">)</span><span class="o">+</span><span class="dl">"</span><span class="s2">$</span><span class="dl">"</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">RegEx</span><span class="p">.</span><span class="nx">isHex</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">[</span><span class="dl">"</span><span class="s2">Red</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Green</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Blue</span><span class="dl">"</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">hexToRgb</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">i</span><span class="p">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">hexToRgb</span><span class="p">(</span><span class="nx">i</span><span class="p">):</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">c</span><span class="p">]];</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">u</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="k">delete</span> <span class="nx">h</span><span class="p">[</span><span class="nx">e</span><span class="p">]}}});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">R</span> <span class="k">in</span> <span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">R</span><span class="p">]),</span><span class="nx">z</span><span class="o">=</span><span class="nx">O</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">O</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">M</span><span class="o">=</span><span class="nx">O</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">R</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">R</span><span class="p">);</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">getRoot</span><span class="p">(</span><span class="nx">R</span><span class="p">),</span><span class="nx">B</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">isSVG</span><span class="o">||</span><span class="dl">"</span><span class="s2">tween</span><span class="dl">"</span><span class="o">===</span><span class="nx">I</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">Names</span><span class="p">.</span><span class="nx">prefixCheck</span><span class="p">(</span><span class="nx">I</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==!</span><span class="mi">1</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">Normalizations</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">I</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">){(</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="sr">/opacity|filter/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">_cacheValues</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">[</span><span class="nx">R</span><span class="p">]?(</span><span class="nx">M</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">R</span><span class="p">].</span><span class="nx">endValue</span><span class="o">+</span><span class="nx">E</span><span class="p">[</span><span class="nx">R</span><span class="p">].</span><span class="nx">unitType</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">rootPropertyValueCache</span><span class="p">[</span><span class="nx">I</span><span class="p">]):</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">registered</span><span class="p">[</span><span class="nx">R</span><span class="p">]?</span><span class="nx">M</span><span class="o">===</span><span class="nx">a</span><span class="p">?(</span><span class="nx">B</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">I</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">R</span><span class="p">,</span><span class="nx">B</span><span class="p">)):</span><span class="nx">B</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">Hooks</span><span class="p">.</span><span class="nx">templates</span><span class="p">[</span><span class="nx">I</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span><span class="nx">M</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">R</span><span class="p">));</span><span class="kd">var</span> <span class="nx">W</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">X</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">R</span><span class="p">,</span><span class="nx">M</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">W</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">R</span><span class="p">,</span><span class="nx">z</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^</span><span class="se">([</span><span class="sr">+-</span><span class="se">\/</span><span class="sr">*</span><span class="se">])</span><span class="sr">=/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">X</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="dl">""</span><span class="p">}),</span><span class="nx">G</span><span class="o">=</span><span class="nx">W</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">M</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">M</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="o">===</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="sr">/^</span><span class="se">(</span><span class="sr">fontSize|lineHeight</span><span class="se">)</span><span class="sr">$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)?(</span><span class="nx">z</span><span class="o">/=</span><span class="mi">100</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="dl">"</span><span class="s2">em</span><span class="dl">"</span><span class="p">):</span><span class="sr">/^scale/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)?(</span><span class="nx">z</span><span class="o">/=</span><span class="mi">100</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="dl">""</span><span class="p">):</span><span class="sr">/</span><span class="se">(</span><span class="sr">Red|Green|Blue</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">z</span><span class="o">/</span><span class="mi">100</span><span class="o">*</span><span class="mi">255</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="dl">""</span><span class="p">)),</span><span class="sr">/</span><span class="se">[\/</span><span class="sr">*</span><span class="se">]</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">X</span><span class="p">))</span><span class="nx">G</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">!==</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">M</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">z</span><span class="p">)</span><span class="nx">G</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">l</span><span class="o">||</span><span class="nx">d</span><span class="p">();</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="sr">/margin|padding|left|right|width|text|word|letter/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)</span><span class="o">||</span><span class="sr">/X$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">R</span><span class="p">)</span><span class="o">||</span><span class="dl">"</span><span class="s2">x</span><span class="dl">"</span><span class="o">===</span><span class="nx">R</span><span class="p">?</span><span class="dl">"</span><span class="s2">x</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">y</span><span class="dl">"</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="p">:</span><span class="nx">M</span><span class="o">*=</span><span class="dl">"</span><span class="s2">x</span><span class="dl">"</span><span class="o">===</span><span class="nx">Y</span><span class="p">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxWidth</span><span class="p">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxHeight</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">px</span><span class="dl">"</span><span class="p">:</span><span class="k">break</span><span class="p">;</span><span class="nl">default</span><span class="p">:</span><span class="nx">M</span><span class="o">*=</span><span class="nx">l</span><span class="p">[</span><span class="nx">D</span><span class="o">+</span><span class="dl">"</span><span class="s2">ToPx</span><span class="dl">"</span><span class="p">]}</span><span class="k">switch</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">%</span><span class="dl">"</span><span class="p">:</span><span class="nx">M</span><span class="o">*=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="dl">"</span><span class="s2">x</span><span class="dl">"</span><span class="o">===</span><span class="nx">Y</span><span class="p">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxWidth</span><span class="p">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">percentToPxHeight</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">px</span><span class="dl">"</span><span class="p">:</span><span class="k">break</span><span class="p">;</span><span class="nl">default</span><span class="p">:</span><span class="nx">M</span><span class="o">*=</span><span class="mi">1</span><span class="o">/</span><span class="nx">l</span><span class="p">[</span><span class="nx">G</span><span class="o">+</span><span class="dl">"</span><span class="s2">ToPx</span><span class="dl">"</span><span class="p">]}}</span><span class="k">switch</span><span class="p">(</span><span class="nx">X</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">+</span><span class="dl">"</span><span class="p">:</span><span class="nx">z</span><span class="o">=</span><span class="nx">M</span><span class="o">+</span><span class="nx">z</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">-</span><span class="dl">"</span><span class="p">:</span><span class="nx">z</span><span class="o">=</span><span class="nx">M</span><span class="o">-</span><span class="nx">z</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">*</span><span class="dl">"</span><span class="p">:</span><span class="nx">z</span><span class="o">=</span><span class="nx">M</span><span class="o">*</span><span class="nx">z</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">/</span><span class="dl">"</span><span class="p">:</span><span class="nx">z</span><span class="o">=</span><span class="nx">M</span><span class="o">/</span><span class="nx">z</span><span class="p">}</span><span class="nx">s</span><span class="p">[</span><span class="nx">R</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="na">rootPropertyValue</span><span class="p">:</span><span class="nx">B</span><span class="p">,</span><span class="na">startValue</span><span class="p">:</span><span class="nx">M</span><span class="p">,</span><span class="na">currentValue</span><span class="p">:</span><span class="nx">M</span><span class="p">,</span><span class="na">endValue</span><span class="p">:</span><span class="nx">z</span><span class="p">,</span><span class="na">unitType</span><span class="p">:</span><span class="nx">G</span><span class="p">,</span><span class="na">easing</span><span class="p">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">tweensContainer (</span><span class="dl">"</span><span class="o">+</span><span class="nx">R</span><span class="o">+</span><span class="dl">"</span><span class="s2">): </span><span class="dl">"</span><span class="o">+</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="nx">R</span><span class="p">]),</span><span class="nx">n</span><span class="p">)}</span><span class="k">else</span> <span class="nx">v</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Skipping [</span><span class="dl">"</span><span class="o">+</span><span class="nx">I</span><span class="o">+</span><span class="dl">"</span><span class="s2">] due to a lack of browser support.</span><span class="dl">"</span><span class="p">)}</span><span class="nx">s</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">n</span><span class="p">}</span><span class="nx">s</span><span class="p">.</span><span class="nx">element</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="dl">"</span><span class="s2">velocity-animating</span><span class="dl">"</span><span class="p">),</span><span class="nx">L</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="dl">""</span><span class="o">===</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">opts</span><span class="o">=</span><span class="nx">o</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">isAnimating</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">===</span><span class="nx">P</span><span class="o">-</span><span class="mi">1</span><span class="p">?(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">L</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">resolver</span><span class="p">]),</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isTicking</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isTicking</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">())):</span><span class="nx">w</span><span class="o">++</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">v</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="p">{},</span><span class="nx">l</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">velocityQueueEntryFlag</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">delayTimer</span><span class="o">=</span><span class="p">{</span><span class="na">setTimeout</span><span class="p">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="p">)),</span><span class="na">next</span><span class="p">:</span><span class="nx">e</span><span class="p">}}),</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span><span class="dl">"</span><span class="s2">fast</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="mi">200</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">normal</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">slow</span><span class="dl">"</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="mi">600</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="nl">default</span><span class="p">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">}</span><span class="nx">v</span><span class="p">.</span><span class="nx">mock</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">mock</span><span class="o">===!</span><span class="mi">0</span><span class="p">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="o">=</span><span class="mi">1</span><span class="p">:(</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="o">*=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">mock</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="o">*=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">mock</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">)),</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">duration</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">begin</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">begin</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">begin</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">progress</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">progress</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">progress</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">complete</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">complete</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="dl">"</span><span class="s2">auto</span><span class="dl">"</span><span class="o">===</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">getDisplayType</span><span class="p">(</span><span class="nx">n</span><span class="p">))),</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">visibility</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()),</span><span class="nx">o</span><span class="p">.</span><span class="nx">mobileHA</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">mobileHA</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isMobile</span><span class="o">&amp;&amp;!</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isGingerbread</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">===!</span><span class="mi">1</span><span class="p">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="p">?</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">delay</span><span class="p">):</span><span class="nx">e</span><span class="p">():</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="o">===!</span><span class="mi">0</span><span class="p">?(</span><span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">resolver</span><span class="p">(</span><span class="nx">m</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">):(</span><span class="nx">v</span><span class="p">.</span><span class="nx">velocityQueueEntryFlag</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">void</span> <span class="nx">e</span><span class="p">(</span><span class="nx">t</span><span class="p">))}),</span><span class="dl">""</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">&amp;&amp;</span><span class="dl">"</span><span class="s2">fx</span><span class="dl">"</span><span class="o">!==</span><span class="nx">o</span><span class="p">.</span><span class="nx">queue</span><span class="o">||</span><span class="dl">"</span><span class="s2">inprogress</span><span class="dl">"</span><span class="o">===</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">n</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">$</span><span class="p">.</span><span class="nx">dequeue</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">p</span><span class="o">||</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">properties</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">properties</span><span class="p">.</span><span class="nx">names</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">properties</span><span class="p">)),</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">isWrapped</span><span class="p">(</span><span class="k">this</span><span class="p">)?(</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">):(</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">s</span><span class="p">?</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">elements</span><span class="o">||</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">e</span><span class="p">:</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">m</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">m</span><span class="p">)){</span><span class="nx">s</span><span class="p">?(</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">properties</span><span class="o">||</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">options</span><span class="o">||</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">o</span><span class="p">):(</span><span class="nx">h</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^</span><span class="se">(</span><span class="sr">stop|finish</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">V</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">V</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])</span><span class="o">||!</span><span class="sr">/^</span><span class="se">(</span><span class="sr">fast|normal|slow</span><span class="se">)</span><span class="sr">$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="sr">/^</span><span class="se">\d</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])?</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])?</span><span class="nx">b</span><span class="p">.</span><span class="nx">easing</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">]:</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">]):</span><span class="nx">b</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="p">{</span><span class="na">promise</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">resolver</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">rejecter</span><span class="p">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nb">Promise</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="o">=</span><span class="k">new</span> <span class="nx">v</span><span class="p">.</span><span class="nb">Promise</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">resolver</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">rejecter</span><span class="o">=</span><span class="nx">t</span><span class="p">}));</span><span class="kd">var</span> <span class="nx">k</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">case</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="p">:</span><span class="nx">k</span><span class="o">=</span><span class="dl">"</span><span class="s2">scroll</span><span class="dl">"</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">reverse</span><span class="dl">"</span><span class="p">:</span><span class="nx">k</span><span class="o">=</span><span class="dl">"</span><span class="s2">reverse</span><span class="dl">"</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="dl">"</span><span class="s2">finish</span><span class="dl">"</span><span class="p">:</span><span class="k">case</span><span class="dl">"</span><span class="s2">stop</span><span class="dl">"</span><span class="p">:</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">delayTimer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">delayTimer</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">delayTimer</span><span class="p">.</span><span class="nx">next</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">delayTimer</span><span class="p">.</span><span class="nx">next</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">i</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">delayTimer</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">calls</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">?</span><span class="dl">""</span><span class="p">:</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">o</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="nx">t</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">queue</span><span class="o">===</span><span class="nx">o</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">queue</span><span class="o">===!</span><span class="mi">1</span><span class="p">?</span><span class="k">void</span> <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">((</span><span class="nx">b</span><span class="o">===!</span><span class="mi">0</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)?</span><span class="nx">b</span><span class="p">:</span><span class="dl">""</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">$</span><span class="p">.</span><span class="nx">queue</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)?</span><span class="nx">b</span><span class="p">:</span><span class="dl">""</span><span class="p">,[])),</span><span class="dl">"</span><span class="s2">stop</span><span class="dl">"</span><span class="o">===</span><span class="nx">h</span><span class="p">?(</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">tweensContainer</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">endValue</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">currentValue</span>&#x000A;</div><div class='line' id='LC4'><span class="p">}),</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)):</span><span class="dl">"</span><span class="s2">finish</span><span class="dl">"</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">duration</span><span class="o">=</span><span class="mi">1</span><span class="p">))}):</span><span class="o">!</span><span class="mi">0</span><span class="p">})}),</span><span class="dl">"</span><span class="s2">stop</span><span class="dl">"</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">p</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="o">&amp;&amp;</span><span class="nx">T</span><span class="p">.</span><span class="nx">resolver</span><span class="p">(</span><span class="nx">m</span><span class="p">)),</span><span class="nx">e</span><span class="p">();</span><span class="nl">default</span><span class="p">:</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">$</span><span class="p">.</span><span class="nx">isPlainObject</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">h</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">Redirects</span><span class="p">[</span><span class="nx">h</span><span class="p">]){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">delay</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">backwards</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,[],</span><span class="nx">m</span><span class="p">).</span><span class="nx">reverse</span><span class="p">()),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">stagger</span><span class="p">)?</span><span class="nx">F</span><span class="p">.</span><span class="nx">delay</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">stagger</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="p">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">stagger</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">delay</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nx">F</span><span class="p">.</span><span class="nx">stagger</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">P</span><span class="p">)),</span><span class="nx">F</span><span class="p">.</span><span class="nx">drag</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="sr">/^</span><span class="se">(</span><span class="sr">callout|transition</span><span class="se">)</span><span class="sr">/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">h</span><span class="p">)?</span><span class="mi">1</span><span class="nx">e3</span><span class="p">:</span><span class="nx">y</span><span class="p">),</span><span class="nx">F</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">duration</span><span class="o">*</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">backwards</span><span class="p">?</span><span class="mi">1</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="nx">P</span><span class="p">:(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="nx">P</span><span class="p">),.</span><span class="mi">75</span><span class="o">*</span><span class="nx">F</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="mi">200</span><span class="p">)),</span><span class="nx">v</span><span class="p">.</span><span class="nx">Redirects</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">F</span><span class="o">||</span><span class="p">{},</span><span class="nx">e</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="p">?</span><span class="nx">T</span><span class="p">:</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">e</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="dl">"</span><span class="s2">Velocity: First argument (</span><span class="dl">"</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="dl">"</span><span class="s2">) was not a property map, a known action, or a registered redirect. Aborting.</span><span class="dl">"</span><span class="p">;</span><span class="k">return</span> <span class="nx">T</span><span class="p">.</span><span class="nx">promise</span><span class="p">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">rejecter</span><span class="p">(</span><span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">H</span><span class="p">)):</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">H</span><span class="p">),</span><span class="nx">e</span><span class="p">()}</span><span class="nx">k</span><span class="o">=</span><span class="dl">"</span><span class="s2">start</span><span class="dl">"</span><span class="p">}</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="p">{</span><span class="na">lastParent</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">lastPosition</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">lastFontSize</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">lastPercentToPxWidth</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">lastPercentToPxHeight</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">lastEmToPx</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">remToPx</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">vwToPx</span><span class="p">:</span><span class="kc">null</span><span class="p">,</span><span class="na">vhToPx</span><span class="p">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">L</span><span class="o">=</span><span class="p">[];</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">isNode</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">t</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">v</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">R</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">loop</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">loop</span><span class="p">),</span><span class="nx">R</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">F</span><span class="p">.</span><span class="nx">loop</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">loop</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">R</span><span class="o">&gt;</span><span class="nx">O</span><span class="p">;</span><span class="nx">O</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="p">{</span><span class="na">delay</span><span class="p">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">delay</span><span class="p">,</span><span class="na">progress</span><span class="p">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">progress</span><span class="p">};</span><span class="nx">O</span><span class="o">===</span><span class="nx">R</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">display</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">visibility</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">complete</span><span class="p">),</span><span class="nx">S</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="dl">"</span><span class="s2">reverse</span><span class="dl">"</span><span class="p">,</span><span class="nx">z</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">()}};</span><span class="nx">v</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="nx">S</span><span class="p">;</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">v</span><span class="p">.</span><span class="nx">State</span><span class="p">.</span><span class="nx">isMobile</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">hidden</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="nx">r</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">"</span><span class="s2">visibilitychange</span><span class="dl">"</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">r</span><span class="p">.</span><span class="nx">hidden</span><span class="p">?(</span><span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="mi">16</span><span class="p">)},</span><span class="nx">c</span><span class="p">()):</span><span class="nx">P</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nx">d</span><span class="p">}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">Velocity</span><span class="o">=</span><span class="nx">v</span><span class="p">,</span><span class="nx">e</span><span class="o">!==</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">velocity</span><span class="o">=</span><span class="nx">S</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">velocity</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">defaults</span><span class="p">),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="dl">"</span><span class="s2">Down</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Up</span><span class="dl">"</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">Redirects</span><span class="p">[</span><span class="dl">"</span><span class="s2">slide</span><span class="dl">"</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">r</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">begin</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">complete</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">{</span><span class="na">height</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">marginTop</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">marginBottom</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">paddingTop</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">paddingBottom</span><span class="p">:</span><span class="dl">""</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="dl">"</span><span class="s2">Down</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="dl">"</span><span class="s2">inline</span><span class="dl">"</span><span class="o">===</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">Values</span><span class="p">.</span><span class="nx">getDisplayType</span><span class="p">(</span><span class="nx">e</span><span class="p">)?</span><span class="dl">"</span><span class="s2">inline-block</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">block</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">begin</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="nx">p</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">CSS</span><span class="p">.</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="dl">"</span><span class="s2">Down</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">?[</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">]:[</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">]}</span><span class="nx">f</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="dl">"</span><span class="s2">hidden</span><span class="dl">"</span><span class="p">},</span><span class="nx">l</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">resolver</span><span class="p">(</span><span class="nx">i</span><span class="p">)},</span><span class="nx">v</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">l</span><span class="p">)}}),</span><span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="dl">"</span><span class="s2">In</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">Out</span><span class="dl">"</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">v</span><span class="p">.</span><span class="nx">Redirects</span><span class="p">[</span><span class="dl">"</span><span class="s2">fade</span><span class="dl">"</span><span class="o">+</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">r</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="na">opacity</span><span class="p">:</span><span class="dl">"</span><span class="s2">In</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="mi">1</span><span class="p">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">complete</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="nx">n</span><span class="o">!==</span><span class="nx">o</span><span class="o">-</span><span class="mi">1</span><span class="p">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">begin</span><span class="o">=</span><span class="kc">null</span><span class="p">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">.</span><span class="nx">resolver</span><span class="p">(</span><span class="nx">i</span><span class="p">)},</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="dl">"</span><span class="s2">In</span><span class="dl">"</span><span class="o">===</span><span class="nx">t</span><span class="p">?</span><span class="dl">"</span><span class="s2">auto</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">none</span><span class="dl">"</span><span class="p">),</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">l</span><span class="p">)}}),</span><span class="nx">v</span><span class="p">}(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">Zepto</span><span class="o">||</span><span class="nb">window</span><span class="p">,</span><span class="nb">window</span><span class="p">,</span><span class="nb">document</span><span class="p">)});</span>&#x000A;</div></pre></div></div>
</div>
<script>
  toMathMlCode('','markdown-body');
</script>

</div>
</div>
<div class='tree_progress'></div>
<div class='ui small modal' id='modal-linejump'>
<div class='ui custom form content'>
<div class='field'>
<div class='ui right action input'>
<input placeholder='跳转至某一行...' type='number'>
<div class='ui orange button'>
跳转
</div>
</div>
</div>
</div>
</div>

<div class='row column inner-comment' id='blob-comment'>
<input id="comment_path" name="comment_path" type="hidden" value="themes/hexo-theme-next/source/lib/velocity/velocity.min.js" />
<div class='tree-comments'>
<h3 id='tree_comm_title'>
评论
(
<span class='comments-count'>
0
</span>
)
</h3>
<div class='ui threaded comments middle aligned' id='notes-list'></div>
<input id="ajax_add_note_id" name="ajax_add_note_id" type="hidden" />
<div class='text-center'>
<div class='tip-loading' style='display: none'>
<div class='ui active mini inline loader'></div>
正在加载...
</div>
</div>
</div>
<script>
  "use strict";
  $(function(){
    var page = 1
    var commentsCount = 0
    var $container = $('.tree-comments')
    var $comments = $container.find('.ui.comments')
    var $tipLoading = $container.find('.tip-loading')
    var $btnLoad = $container.find('.btn-load-more')
    var noteAnchor = new Gitee.NoteAnchor({ defaultAnchor: '#tree_comm_title' })
  
    if (commentsCount < 1) {
      return;
    }
  
    var path;
    if ($('#comment_path').val() === '') {
      path = '/';
    } else {
      path = $('#comment_path').val();
    }
  
    function loadComments () {
      $btnLoad.hide();
      $tipLoading.show();
      $.ajax({
        url: '/kangjian_haha/blog_project/comment_list',
        data: {
          page: page,
          path: path
        },
        success: function(data) {
          var err;
          try {
            $tipLoading.hide();
            $btnLoad.show();
            if (data.status !== 0) {
              $btnLoad.text('无更多评论')
              return $btnLoad.prop('disabled', true).addClass('disabled');
            } else {
              TreeComment.CommentListHandler(data);
              page += 1;
              if (data.comments_count < 10) {
                $('#ajax_add_note_id').val('');
                $btnLoad.text('无更多评论')
                $btnLoad.prop('disabled', true).addClass('disabled');
              }
              // osctree can not load script
              $comments.find('.timeago').timeago();
              $comments.find('.commenter-role-label').popup();
              noteAnchor.locate();
              toMathMlCode('', 'comments');
              return $('.markdown-body pre code').each(function(i, block) {
                return hljs.highlightBlock(block);
              });
            }
          } catch (error) {
            err = error;
            return console.log('loadComments error:' + err);
          }
        }
      });
    };
  
  
    function checkLoad () {
      var listTop, top;
      top = $(window).scrollTop();
      listTop = $container.offset().top;
      if (listTop >= top && listTop < top + $(window).height()) {
        $(window).off('scroll', checkLoad);
        return loadComments();
      }
    };
  
    $btnLoad.on('click', loadComments);
    loadComments()
  })
</script>

</div>
<div class='inner-comment-box' id='comment-box'>
<div class='tree-comment-form' id='tree-comment-box'>
<img alt="7370217 thexwen 1585201641" class="ui avatar image" src="https://portrait.gitee.com/uploads/avatars/user/2456/7370217_thexwen_1585201641.png!avatar60" />
<div class='ui form'>
<input id="comment_url" name="comment_url" type="hidden" value="/kangjian_haha/blog_project/comment" />
<div class='field'>
<textarea class='md-input' id='editor_comment' placeholder='在此输入你想说的话，如果是问题或者建议，请添加 issue。（评论支持 Markdown 格式）'></textarea>
</div>
<div class='ui checkbox js-check-star' style='display:none'>
<input name='comments_with_star' type='checkbox'>
<label>同时点个赞（Star）</label>
</div>

<div class='ui field aligned except-editor-textarea mt-2'>
<div class='ui orange button js-comment-button disabled' id='only_comment'>
评论
</div>
<div class='ui blank button js-close-discussion-note-form' id='comment_cancel_btn'>
取消
</div>
</div>
</div>
</div>
<script>
  "use strict";
  TreeComment.init();
</script>

</div>

<div class='complaint'>
<div class='ui modal small form' id='landing-comments-complaint-modal'>
<i class='iconfont icon-close close'></i>
<div class='header'>
举报
</div>
<div class='content'>
<div class='appeal-success-tip hide'>
<i class='iconfont icon-ic_msg_success'></i>
<div class='appeal-success-text'>
举报成功
</div>
<span>
我们将于2个工作日内通过站内信反馈结果给你！
</span>
</div>
<div class='appeal-tip'>
请认真填写举报原因，尽可能描述详细。
</div>
<div class='ui form appeal-form'>
<div class='inline field'>
<label class='left-part appeal-type-wrap'>
举报类型
</label>
<div class='ui dropdown selection' id='appeal-comments-types'>
<div class='text default'>
请选择举报类型
</div>
<i class='dropdown icon'></i>
<div class='menu'></div>
</div>
</div>
<div class='inline field'>
<label class='left-part'>
举报原因
</label>
<textarea class='appeal-reason' id='appeal-comment-reason' name='msg' placeholder='请说明举报原因' rows='3'></textarea>
</div>
<div class='ui message callback-msg hide'></div>
<div class='ui small error text message exceeded-size-tip'></div>
</div>
</div>
<div class='actions'>
<div class='ui button blank cancel'>
取消
</div>
<div class='ui orange icon button disabled ok' id='complaint-comment-confirm'>
发送
</div>
</div>
</div>
<script>
  var $complaintCommentsModal = $('#landing-comments-complaint-modal'),
      $complainCommentType = $complaintCommentsModal.find('#appeal-comments-types'),
      $complaintModalTip = $complaintCommentsModal.find('.callback-msg'),
      $complaintCommentsContent = $complaintCommentsModal.find('.appeal-reason'),
      $complaintCommentBtn = $complaintCommentsModal.find('#complaint-comment-confirm'),
      complaintSending = false,
      initedCommentsType = false;
  
  function initCommentsTypeList() {
    if (!initedCommentsType) {
      $.ajax({
        url: "/appeals/fetch_types",
        method: 'get',
        data: {'type': 'comment'},
        success: function (data) {
          var result = '';
          for (var i = 0; i < data.length; i++) {
            result = result + "<div class='item' data-value='" + data[i].id + "'>" + data[i].name + "</div>";
          }
          $complainCommentType.find('.menu').html(result);
        }
      });
      $complainCommentType.dropdown({showOnFocus: false});
      initedCommentsType = true;
    }
  }
  $complainCommentType.on('click', function() {
    $complaintCommentsModal.modal({
      autofocus: false,
      onApprove: function() {
        return false;
      },
      onHidden: function() {
        restoreCommonentDefault();
      }
    }).modal('show');
  });
  
  $complaintCommentsContent.on('change keyup', function(e) {
    var content = $(this).val();
    if ($.trim(content).length > 0 && $complainCommentType.dropdown('get value').length > 0 ) {
      $complaintCommentBtn.removeClass('disabled');
      return;
    }
    $complaintCommentBtn.addClass('disabled');
  });
  
  
  $complainCommentType.dropdown({
    showOnFocus: false,
    onChange: function(value, text, $selectedItem) {
      if (value.length > 0 && $.trim($complaintCommentsContent.val()).length > 0) {
        $complaintCommentBtn.removeClass('disabled');
        return
      }
      $complaintCommentBtn.addClass('disabled');
    }
  });
  
  function restoreCommonentDefault() {
    $complainCommentType.dropdown('restore defaults');
    $complaintCommentsContent.val('');
    $('.exceeded-size-tip').text('').hide();
    $complaintModalTip.text('').hide();
    setTimeout(function() {
      setCommentSendTip(false);
    }, 1500);
  }
  
  $complaintCommentBtn.on('click',function(e){
    var reason = $complaintCommentsContent.val();
    var appealableId = $('#landing-comments-complaint-modal').attr('data-id');
    if (complaintSending) {
      return;
    }
    var appealType = $complainCommentType.dropdown('get value');
    var formData = new FormData();
    formData.append('appeal_type_id', appealType);
    formData.append('reason', reason);
    formData.append('appeal_type','Note');
    formData.append('target_id',appealableId);
    $.ajax({
      type: 'POST',
      url: "/appeals",
      cache: false,
      contentType: false,
      processData: false,
      data: formData,
      beforeSend: function() {
        setCommentSendStatus(true);
      },
      success: function(res) {
        if (res.status == 200) {
          setCommentSendTip(true);
          setTimeout(function() {
            $complaintCommentsModal.modal('hide');
            restoreCommonentDefault();
          }, 3000);
        }
        setCommentSendStatus(false);
      },
      error: function(err) {
        showCommonTips(err.responseJSON.message, 'error');
        setCommentSendStatus(false);
      }
    })
  });
  
  function showCommonTips(text, type) {
    $complaintModalTip.text(text).show();
    if (type == 'error') {
      $complaintModalTip.removeClass('success').addClass('error');
    } else {
      $complaintModalTip.removeClass('error').addClass('success');
    }
  }
  
  function setCommentSendStatus(value) {
    complaintSending = value;
    if (complaintSending) {
      $complaintCommentBtn.addClass('loading');
      $complaintCommentsContent.attr('readonly', true);
      $complainCommentType.attr('readonly', true);
    } else {
      $complaintCommentBtn.removeClass('loading');
      $complaintCommentsContent.attr('readonly', false);
      $complainCommentType.attr('readonly', false);
    }
  }
  
  function setCommentSendTip(value) {
    if (value) {
      $('.appeal-success-tip').removeClass('hide');
      $('.appeal-tip').addClass('hide');
      $('.appeal-form').addClass('hide');
      $('#landing-comments-complaint-modal .actions').addClass('hide');
    } else {
      $('.appeal-success-tip').addClass('hide');
      $('.appeal-tip').removeClass('hide');
      $('.appeal-form').removeClass('hide');
      $('#landing-comments-complaint-modal .actions').removeClass('hide');
    }
  }
</script>

</div>
<script>
  "use strict";
  $('.js-check-star').checkbox('set unchecked')
</script>

</div>
</div>
</div>
<script>
  (function() {
    $(function() {
      Tree.init();
      return TreeCommentActions.init();
    });
  
  }).call(this);
</script>

</div>
<script>
  (function() {
    var donateModal;
  
    Gitee.modalHelper = new GiteeModalHelper({
      alertText: '提示',
      okText: '确定'
    });
  
    donateModal = new ProjectDonateModal({
      el: '#project-donate-modal',
      alipayUrl: '/kangjian_haha/blog_project/alipay',
      wepayUrl: '/kangjian_haha/blog_project/wepay',
      nameIsBlank: '名称不能为空',
      nameTooLong: '名称过长（最多为 36 个字符）',
      modalHelper: Gitee.modalHelper
    });
  
    if (null === 'true') {
      donateModal.show();
    }
  
    $('#project-donate').on('click', function() {
      return donateModal.show();
    });
  
  }).call(this);
</script>
<script>
  Tree.initHighlightTheme('white')
</script>


</div>
<div class='gitee-project-extension'>
<div class='extension public'>1</div>
<div class='extension https'>https://gitee.com/kangjian_haha/blog_project.git</div>
<div class='extension ssh'>git@gitee.com:kangjian_haha/blog_project.git</div>
<div class='extension namespace'>kangjian_haha</div>
<div class='extension repo'>blog_project</div>
<div class='extension name'>blog_project</div>
<div class='extension branch'>master</div>
</div>

<script>
  $(function() {
    GitLab.GfmAutoComplete.dataSource = "/kangjian_haha/blog_project/autocomplete_sources"
    GitLab.GfmAutoComplete.Emoji.assetBase = '/assets/emoji'
    GitLab.GfmAutoComplete.setup();
  });
</script>

<footer id='git-footer-main'>
<div class='ui container'>
<div class='logo-row'>
<img class='logo-img' src='/static/images/logo-black.svg?t=158106666'>
</div>
<div class='name-important'>
深圳市奥思网络科技有限公司版权所有
</div>
<div class='ui two column grid d-flex-center'>
<div class='nine wide column git-footer-left'>
<div class='ui four column grid' id='footer-left'>
<div class='column'>
<div class='ui link list'>
<div class='item'>
<a class="item" href="/about_us">关于我们</a>
</div>
<div class='item'>
<a class="item" href="/terms">使用条款</a>
</div>
<div class='item'>
<a class="item" href="/oschina/git-osc/issues">意见建议</a>
</div>
<div class='item'>
<a class="item" href="/links.html">合作伙伴</a>
</div>
</div>
</div>
<div class='column'>
<div class='ui link list'>
<div class='item'>
<a class="item" href="/all-about-git">Git 大全</a>
</div>
<div class='item'>
<a class="item" href="https://oschina.gitee.io/learn-git-branching/">Git 命令学习</a>
</div>
<div class='item'>
<a class="item" href="https://copycat.gitee.com/">代码克隆检测</a>
</div>
<div class='item'>
<a class="item" href="/appclient">APP与插件下载</a>
</div>
</div>
</div>
<div class='column'>
<div class='ui link list'>
<div class='item'>
<a class="item" href="/gitee-stars">码云封面人物</a>
</div>
<div class='item'>
<a class="item" href="/gvp">GVP项目</a>
</div>
<div class='item'>
<a class="item" href="https://blog.gitee.com/">码云博客</a>
</div>
<div class='item'>
<a class="item" href="/enterprises#nonprofit-plan">Gitee 公益计划</a>
</div>
</div>
</div>
<div class='column'>
<div class='ui link list'>
<div class='item'>
<a class="item" href="/api/v5/swagger">OpenAPI</a>
</div>
<div class='item'>
<a class="item" href="/help">帮助文档</a>
</div>
<div class='item'>
<a class="item" href="/self_services">在线自助服务</a>
</div>
<div class='item'>
<a class="item" href="/git-osc">更新日志</a>
</div>
</div>
</div>
</div>
</div>
<div class='seven wide column right aligned followus git-footer-right'>
<div class='qrcode weixin'>
<img alt="Qrcode weixin" src="https://assets.gitee.com/assets/qrcode-weixin-9e7cfb27165143d2b8e8b268a52ea822.jpg" />
<p class='weixin-text'>微信服务号</p>
</div>
<div class='phone-and-qq column'>
<div class='ui list official-support-container'>
<div class='item'>
<a class="icon-popup" href="//shang.qq.com/wpa/qunwpa?idkey=df785aa7af71f7d74149ab062742d761b845464350ecba25eb440357a3e573b7" title="点击加入码云官方群"><i class='iconfont icon-logo-qq'></i>
<span>官方技术交流QQ群：1050025484</span>
</a></div>
<div class='item mail-and-zhihu'>
<a href="mailto: git@oschina.cn"><i class='iconfont icon-msg-mail'></i>
<span id='git-footer-email'>git#oschina.cn</span>
</a></div>
<div class='item mail-and-zhihu'>
<a href="https://www.zhihu.com/org/ma-yun-osc/" target="_blank"><i class='iconfont icon-zhihu'></i>
<span>码云Gitee</span>
</a></div>
<div class='item tel'>
<a>
<i class='iconfont icon-tel'></i>
<span>售前及售后使用咨询：400-606-0201</span>
</a>
</div>
</div>
</div>
</div>
</div>
</div>
<div class='bottombar'>
<div class='ui container'>
<div class='ui grid'>
<div class='seven wide column partner'>
<div class='copyright'>
<a href="http://www.beian.miit.gov.cn/">粤ICP备12009483号</a>
</div>
</div>
<div class='nine wide column right aligned'>
<i class='icon world'></i>
<a href="/language/zh-CN">简 体</a>
/
<a href="/language/zh-TW">繁 體</a>
/
<a href="/language/en">English</a>
</div>
</div>
</div>
</div>
</footer>
<script>
  var officialEmail = $('#git-footer-email').text()
  $('#git-footer-main .icon-popup').popup({ position: 'bottom center' })
  $('#git-footer-email').text(officialEmail.replace('#', '@'))
</script>


<div class='side-toolbar'>
<div class='button toolbar-help'>
<i class='iconfont icon-help'></i>
</div>
<div class='ui popup left center dark'>点此查找更多帮助</div>
<div class='toolbar-help-dialog'>
<div class='toolbar-dialog-header'>
<h3 class='toolbar-dialog-title'>搜索帮助</h3>
<form accept-charset="UTF-8" action="/help/load_keywords_data" class="toolbar-help-search-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
<div class='ui icon input fluid toolbar-help-search'>
<input name='keywords' placeholder='请输入产品名称或问题' type='text'>
<i class='icon search'></i>
</div>
</form>

<i class='iconfont icon-close toolbar-dialog-close-icon'></i>
</div>
<div class='toolbar-dialog-content'>
<div class='toolbar-help-hot-search'>
<div class='toolbar-roll'>
<a class="init active" href="https://oschina.gitee.io/learn-git-branching/?utm_source==gitee-help-widget" title="Git 命令在线学习"><i class='Blue icon icon-command iconfont'></i>
<span>Git 命令在线学习</span>
</a><a class="init " href="https://gitee.com/help/articles/4261?utm_source==gitee-help-widget" title="如何在码云上导入 GitHub 仓库"><i class='icon icon-clipboard iconfont orange'></i>
<span>如何在码云上导入 GitHub 仓库</span>
</a></div>
<div class='toolbar-list'>
<div class='toolbar-list-item'>
<a href="/help/articles/4114">Git 仓库基础操作</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4166">企业版和社区版功能对比</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4191">SSH 公钥设置</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4194">如何处理代码冲突</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4232">仓库体积过大，如何减小？</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4279">如何找回被删除的仓库数据</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4283">Gitee 产品配额说明</a>
</div>
<div class='toolbar-list-item'>
<a href="/help/articles/4284">GitHub仓库快速导入Gitee及同步更新</a>
</div>
</div>
</div>
<div class='toolbar-help-search-reseult'>
<div class='toolbar-help-flex-column'>
<div class='ui centered inline loader toolbar-help-loader'></div>
<div class='toolbar-list'></div>
<div class='toolbar-help-link-to-help'>
<a href="" target="_blank">查看更多搜索结果</a>
</div>
</div>
</div>
</div>
</div>
<script>
  var opt = { position: 'left center'};
  var $helpSideToolbar = $('.button.toolbar-help');
  var $toolbarRoll = $('.toolbar-roll');
  
  $(function() {
    if (true) {
      $helpSideToolbar.popup(opt).popup({lastResort:'left center'})
    } else {
      $helpSideToolbar.popup({lastResort:'left center'}).popup('show', opt);
      setTimeout(function() {
        $helpSideToolbar.popup('hide', opt);
      }, 3000);
    }
  
    if ($toolbarRoll.length) {
      setInterval(function() {
        var $nextActiveLink = $toolbarRoll.find('a.active').next();
        if (!$nextActiveLink.length) {
          $nextActiveLink = $toolbarRoll.find('a:first-child');
        }
        $nextActiveLink.attr('class', 'active').siblings().removeClass('active init');
      }, 5000);
    }
  })
</script>

<div class='button share-link'>
<i class='iconfont icon-share'></i>
</div>
<div class='ui popup dark'>
<div class='header'>
分享到
</div>
<div class='bdsharebuttonbox' style='display: flex'>
<a class='iconfont icon-home-service-wechat' data-cmd='weixin' title='分享到微信'></a>
<a class='iconfont icon-weibo' data-cmd='tsina' title='分享到新浪微博'></a>
<a class='iconfont icon-qq' data-cmd='sqq' title='分享到QQ好友'></a>
<a class='iconfont icon-qzone' data-cmd='qzone' title='分享到QQ空间'></a>
</div>
</div>
<div class='popup button' id='project-user-message'>
<i class='iconfont icon-message'></i>
</div>
<div class='ui popup dark'>给仓库拥有者发送私信</div>
<div class='popup button' id='home-comment'>
<i class='iconfont icon-comment'></i>
</div>
<div class='ui popup dark'>评论</div>
<div class='toolbar-appeal popup button'>
<i class='iconfont icon-report'></i>
</div>
<div class='ui popup dark'>
仓库举报
</div>
<script>
  $('.toolbar-appeal').popup({ position: 'left center' });
</script>

<div class='button gotop popup' id='gotop'>
<i class='iconfont icon-top'></i>
</div>
<div class='ui popup dark'>回到顶部</div>
</div>
<div class='ui modal tiny form' id='send-message-modal'>
<i class='iconfont icon-close close'></i>
<div class='header'>发送私信</div>
<div class='content'>
<div class='ui message hide'></div>
<div class='field'>
<textarea class='content-input' maxlength='255' placeholder='文明发言，真诚提问，请输入要发送的内容'></textarea>
</div>
</div>
<div class='actions'>
<div class='ui button blank cancel'>取消</div>
<div class='ui orange icon button disabled ok'>发送</div>
</div>
</div>
<script>
  var $mountedElem = $('#project-user-message'),
      $messageModal = $('#send-message-modal'),
      $modalTips = $messageModal.find('.message'),
      $contentInput = $messageModal.find('.content-input'),
      $captchaImage = $messageModal.find('.captcha_img'),
      $captchaInput = $messageModal.find('.captcha-field input'),
      $sendMessageBtn = $messageModal.find('.ok.button'),
      messageSending = false
  
  $mountedElem.on('click', function() {
    $captchaImage.trigger('click')
    $messageModal.modal('show')
  })
  
  $messageModal.modal({
    onApprove: function() {
      sendMessage()
      return false
    },
    onHidden: function() {
      $modalTips.hide()
    }
  })
  
  $captchaImage.on('click', function() {
    $captchaInput.val('')
  })
  
  $contentInput.on('change keydown', function(e) {
    var content = $(this).val()
    if ($.trim(content).length == 0) {
      $sendMessageBtn.addClass('disabled')
      return
    }
    $sendMessageBtn.removeClass('disabled')
    if ((e.ctrlKey || e.metaKey) && e.keyCode == 13) {
      $sendMessageBtn.trigger('click')
    }
  })
  
  function sendMessage() {
    if (messageSending) return
    $.ajax({
      url: '/notifications/messages',
      data: {
        link: true,
        content: $contentInput.val(),
        receiver_id: '5164785',
        receiver_username: '',
        captcha: $captchaInput.val()
      },
      type: 'POST',
      dataType: 'JSON',
      beforeSend: function() {
        setSendStatus(true)
      },
      success: function(res) {
        if (res.status != 200) {
          showSendTips(res.message || '可能由于网络原因，留言发送失败，请稍后再试', 'error')
        } else {
          $contentInput.val('')
          showSendTips('私信发送成功')
          setTimeout(function() { $messageModal.modal('hide') }, 500)
        }
        setSendStatus(false)
      },
      error: function(err) {
        try {
          showSendTips(err.responseJSON.message, 'error')
        } catch(e) {
          showSendTips('可能由于网络原因，留言发送失败，请稍后再试', 'error')
        } finally {
          setSendStatus(false)
        }
      }
    })
  }
  
  function showSendTips(text, type) {
    $modalTips.html(text).show()
    if (type == 'error') {
      $modalTips.removeClass('success').addClass('error')
    } else {
      $modalTips.removeClass('error').addClass('success')
    }
  }
  
  function setSendStatus(value) {
    messageSending = value
    if (messageSending) {
      $sendMessageBtn.addClass('loading')
      $contentInput.attr('readonly', true)
    } else {
      $sendMessageBtn.removeClass('loading')
      $contentInput.attr('readonly', false)
    }
  }
</script>

<div class='ui modal small form' id='landing-complaint-modal'>
<i class='iconfont icon-close close'></i>
<div class='header'>
举报
</div>
<div class='content'>
<div class='appeal-success-tip hide'>
<i class='iconfont icon-ic_msg_success'></i>
<div class='appeal-success-text'>
举报成功
</div>
<span>
我们将于2个工作日内通过站内信和邮件方式反馈结果给你！
</span>
</div>
<div class='appeal-tip'>
请认真填写举报原因，如举报内容涉及 版权/产权 方面问题，请尽可能提供完整证据和材料。
</div>
<div class='ui form appeal-form'>
<div class='inline field'>
<label class='left-part appeal-type-wrap'>
举报类型
</label>
<div class='ui dropdown selection' id='appeal-types'>
<div class='text default'>
请选择举报类型
</div>
<i class='dropdown icon'></i>
<div class='menu'></div>
</div>
</div>
<div class='inline field'>
<label class='left-part'>
举报原因
</label>
<textarea class='appeal-reason' name='msg' placeholder='请说明举报原因' rows='3'></textarea>
</div>
<div class='inline field appeal-file-wrap'>
<label class='left-part appeal-file-text'>
举报材料
</label>
<div id='appeal-file-container'>
<div class='ui fluid action input'>
<input disabled id='appeal-file' placeholder='支持 png/jpg/jpeg/doc/docx/zip/pdf，大小不超过 10M' type='text'>
<div class='ui button'>
<input accept='image/png, image/jpeg, application/pdf, application/msword, aplication/zip, application/vnd.openxmlformats-officedocument.wordprocessingml.document' class='file-upload' type='file'>
浏览...
</input>
</div>
</div>
</div>
</div>
<div class='ui message callback-msg hide'></div>
<div class='ui small error text message exceeded-size-tip'></div>
</div>
</div>
<div class='actions'>
<div class='ui button blank cancel'>
取消
</div>
<div class='ui orange icon button disabled ok'>
发送
</div>
</div>
</div>
<script>
  var $elm = $('.toolbar-appeal'),
      $complaintModal = $('#landing-complaint-modal'),
      $complainType = $complaintModal.find('#appeal-types'),
      $complaintModalTip = $complaintModal.find('.callback-msg'),
      $complaintContent = $complaintModal.find('.appeal-reason'),
      $complaintBtn = $complaintModal.find('.ok.button'),
      complaintSending = false,
      fileObject = '';
  
  $('#appeal-types').dropdown({showOnFocus: false});
  $elm.on('click', function() {
     $.ajax({
      url: "/appeals/fetch_types",
      method: 'get',
      data:{'type': 'project'},
      success:function(data){
      var result = '';
      for(var i=0;i<data.length;i++){
        result = result + "<div class='item' data-value='"+data[i].id+"'>"+data[i].name+"</div>"
      }
      $('#appeal-types .menu').html(result)
    }
    })
    $complaintModal.modal({
      autofocus: false,
      onApprove: function() {
        sendAppeal();
        return false;
      },
      onHidden: function() {
        restoreDefault();
      }
    }).modal('show');
  })
  
  $complaintContent.on('change keyup', function(e) {
    var content = $(this).val();
    if ($.trim(content).length > 0 && $complainType.dropdown('get value').length > 0 ) {
      $complaintBtn.removeClass('disabled');
      return;
    }
    $complaintBtn.addClass('disabled');
  })
  
  $('#appeal-file-container .file-upload').on('change', function () {
    var reader = new FileReader();
    fileObject = this.files[0];
    if (fileObject) {
      var fileObjectName = fileObject.name.split('.');
      var fileExt = fileObjectName[fileObjectName.length - 1];
      if (fileObjectName.length < 2 || ['zip', 'png', 'jpg', 'jpeg', 'doc', 'docx', 'pdf'].indexOf(fileExt.toLowerCase()) < 0) {
        fileObject = '';
        $('.file-upload').val('');
        $('.exceeded-size-tip').text("请选择上传 png/jpg/jpeg/doc/docx/zip/pdf 类型的文件").show();
        return;
      }
      if (fileObject.size > 10*1024*1024) {
        fileObject = '';
        $('.file-upload').val('');
        $('.exceeded-size-tip').text("上传文件大小不能超过 10M").show();
        return;
      }
      reader.readAsDataURL(fileObject);
      reader.onload = function() {
        var data = reader.result;
        $('.exceeded-size-tip').text('').hide();
        $('#appeal-file').val(fileObject.name);
      }
    }
  })
  
  $('#appeal-types').dropdown({
    showOnFocus: false,
    onChange: function(value, text, $selectedItem) {
      if (value.length > 0 && $.trim($complaintContent.val()).length > 0) {
        $complaintBtn.removeClass('disabled');
        return
      }
      $complaintBtn.addClass('disabled');
    }
  })
  
  function restoreDefault() {
    $('#appeal-types').dropdown('restore defaults');
    $('.appeal-reason').val('');
    $('#appeal-file').val('');
    $('.exceeded-size-tip').text('').hide();
    $('#appeal-file-container .file-upload').val('');
    $complaintModalTip.text('').hide();
    setTimeout(function() {
      setSendTip(false);
    }, 1500);
  }
  
  function sendAppeal() {
    var appealType = $complainType.dropdown('get value');
    var reason = $complaintContent.val();
    if (complaintSending) {
      return;
    }
    var formData = new FormData();
    formData.append('appeal_type_id', appealType);
    formData.append('reason', reason);
    formData.append('file', fileObject);
    formData.append('appeal_type', 'Project')
    $.ajax({
      type: 'POST',
      url: "/appeals?target_id=9771673",
      cache: false,
      contentType: false,
      processData: false,
      data: formData,
      beforeSend: function() {
        setSendStatus(true);
      },
      success: function(res) {
        if (res.status == 200) {
          setSendTip(true);
          setTimeout(function() {
            $complaintModal.modal('hide');
            restoreDefault();
          }, 3000);
        }
        setSendStatus(false);
      },
      error: function(err) {
        showTips(err.responseJSON.message, 'error');
        setSendStatus(false);
      }
    })
  }
  
  function showTips(text, type) {
    $complaintModalTip.text(text).show();
    if (type == 'error') {
      $complaintModalTip.removeClass('success').addClass('error');
    } else {
      $complaintModalTip.removeClass('error').addClass('success');
    }
  }
  
  function setSendStatus(value) {
    complaintSending = value;
    if (complaintSending) {
      $complaintBtn.addClass('loading');
      $complaintContent.attr('readonly', true);
      $complainType.attr('readonly', true);
    } else {
      $complaintBtn.removeClass('loading');
      $complaintContent.attr('readonly', false);
      $complainType.attr('readonly', false);
    }
  }
  
  function setSendTip(value) {
    if (value) {
      $('.appeal-success-tip').removeClass('hide');
      $('.appeal-tip').addClass('hide');
      $('.appeal-form').addClass('hide');
      $('#landing-complaint-modal .actions').addClass('hide');
    } else {
      $('.appeal-success-tip').addClass('hide');
      $('.appeal-tip').removeClass('hide');
      $('.appeal-form').removeClass('hide');
      $('#landing-complaint-modal .actions').removeClass('hide');
    }
  }
</script>

<style>
  .side-toolbar .bdsharebuttonbox a {
    font-size: 24px;
    color: white !important;
    opacity: 0.9;
    margin: 6px 6px 0px 6px;
    background-image: none;
    text-indent: 0;
    height: auto;
    width: auto;
  }
</style>
<script>
  (function() {
    $('#project-user-message').popup({
      position: 'left center'
    });
  
  }).call(this);
</script>
<script>
  Gitee.initSideToolbar({
    hasComment: true,
    commentUrl: '/kangjian_haha/blog_project#tree_comm_title'
  })
</script>
<script>
  window._bd_share_config = {
    "common": {
      "bdSnsKey": {},
      "bdText": document.title,
      "bdMini": "1",
      "bdMiniList": ["bdxc","tqf","douban","bdhome","sqq","thx","ibaidu","meilishuo","mogujie","diandian","huaban","duitang","hx","fx","youdao","sdo","qingbiji","people","xinhua","mail","isohu","yaolan","wealink","ty","iguba","fbook","twi","linkedin","h163","evernotecn","copy","print"],
      "bdPic": "",
      "bdStyle": "1",
      "bdSize": "32"
    },
    "share": {}
  }
</script>
<script src="/bd_share/static/api/js/share.js"></script>



<style>
  .gitee-stars-main-widget {
    display: none;
    position: fixed;
    left: 0;
    bottom: 0;
    z-index: 106; }
    .gitee-stars-main-widget .close-icon {
      position: absolute;
      top: 5px;
      cursor: pointer; }
    .gitee-stars-main-widget .people-image {
      width: 200px;
      padding: 0 10px; }
  
  .gitee-stars-main-widget.pendan-widget .close-icon {
    right: 20px; }
  .gitee-stars-main-widget.gitee-stars-widget .close-icon {
    left: 20px; }
</style>
<div class='gitee-stars-main-widget pendan-widget'>
<a href="https://gitee.com/Selected-Activities/Adapted-game/?utm_source=gitee-gj" target="_blank"><img alt="231008 48f1a665 1899542" class="people-image" src="https://images.gitee.com/uploads/images/2020/0712/231008_48f1a665_1899542.png" />
<img alt="231017 9a6720c6 1899542" class="close-icon" src="https://images.gitee.com/uploads/images/2020/0712/231017_9a6720c6_1899542.png" />
</a></div>
<script>
  $(function () {
    var $giteeStarsWidget = $('.gitee-stars-main-widget')
    var cookieKey = "visit-gitee--2020-07-12 23:15:49 +0800"
  
    if ($.cookie(cookieKey) == 1) {
      $giteeStarsWidget.hide()
    } else {
      $giteeStarsWidget.show()
    }
  
    $giteeStarsWidget.on('click', '.close-icon', function (e) {
      e.preventDefault()
      $.cookie(cookieKey, 1, {path: '/', expires: 60})
      $giteeStarsWidget.hide()
    })
  })
</script>


<script>
  (function() {
    this.__gac = {
      domain: 'www.oschina.net'
    };
  
  }).call(this);
</script>
<script defer src='//www.oschina.net/public/javascripts/cjl/ga.js?t=20160926' type='text/javascript'></script>

</body>
</html>
